
@{
    ViewBag.Title = "TaskMasterSetup";
}
<div class="pcoded-content">
    <div class="card p-20" style="min-height: 495px;">
        <!-- [ breadcrumb ] start -->
        <div class="page-header">
            <div class="page-block">
                <div class="row align-items-center">
                    <div class="col-md-6">
                        <div class="page-header-title">
                            <h4> Task Master Setup</h4>
                        </div>
                    </div>
                    <div class="col-md-6 text-md-right">
                        <ul class="breadcrumb">
                            <li class="breadcrumb-item"><a href="#"> Administration </a></li>
                            <li class="breadcrumb-item"> Setup </li>
                            <li class="breadcrumb-item"> Task Master Setup</li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
        <!-- [ breadcrumb ] end -->
        <!-- [ Main Content ] start -->
        <div class="row">
            <div class="col-lg-12">
                <div class="form-group">
                    <div class="text-right">
                        <button id="new" class="plus-icon"> <i class="fas fa-plus-square"></i> </button>
                        @*<button id="find" class="find-icon"> <i class="fas fa-search"></i> </button>*@
                        <button id="find" class="find-icon" data-toggle="modal" onclick='GeneratePopupFindGrid();' data-target="#myModal_Find"> <i class="fas fa-search"></i> </button>
                        <button id="first" class="step-backword-icon"> <i class="fas fa-step-backward"></i></button>
                        <button id="previous" class="backword-icon"> <i class="fas fa-backward"></i> </button>
                        <button id="next" class="forward-icon"> <i class="fas fa-forward"></i> </button>
                        <button id="last" class="step-forward-icon"> <i class="fas fa-step-forward"></i></button>
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-lg-6">
                <div class="form-group">
                    <label for="exampleFormControlSelect1"> Function </label>
                    <div id="sapFunction" class="form-control frm-cstm"></div>
                </div>
            </div>

            <div class="col-lg-6">
                <div class="form-group">
                    <label for="typeCost"> Document Number: </label>
                    <input type="text" class="form-control frm-cstm" id="docNumber" placeholder="DocNum" disabled="disabled">
                </div>
            </div>

        </div>


        <div class="row">
            <div class="col-lg-12">
                <div class="table-responsive">
                    <div id="gridContainer"></div>
                </div>
            </div>
        </div>


        <div class="row">
            <div class="col-lg-12 text-right mt-3">
                <button type="button" id="add_update" class="btn btn-primary mr-2"> Add & Update </button>
                @{
                    TMSDeloitte.Models.UserSession sess = null;
                    if ((TMSDeloitte.Models.UserSession)HttpContext.Current.Session["TMSUserSession"] != null)
                    {
                        sess = (TMSDeloitte.Models.UserSession)HttpContext.Current.Session["TMSUserSession"];
                        if (sess.SessionUser.ISSUPER)
                        {
                            <button type="button" class="btn btn-success" data-toggle="modal" data-target="#myModal" onclick='GetLogData("/TaskMasterSetup/GetTaskMastersSetupLog");'> Show Log </button>
                        }

                        var menu = sess.pagelist.Where(x => x.ID == (int)TMSDeloitte.Helper.Enums.FormsName.TaskMasterSetup).FirstOrDefault();
                        if (menu != null)
                        {
                            <input type="hidden" id="AuthID" name="AuthID" value="@menu.Role">
                        }
                        else
                        {
                            <input type="hidden" id="AuthID" name="AuthID" value="-1">
                        }
                    }

                }


            </div>
        </div>

        <!-- [ Main Content ] end -->
    </div> <!-- [ Card Content ] end -->
</div>

<div id="myModal_Find" class="modal fade" role="dialog">
    <div class="modal-dialog modal-lg">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">×</button>

            </div>
            <div class="modal-body">
                <div id="FindContainer"></div>
            </div>
            <div class="modal-footer">
                <button type="button" id="btnOk" class="btn btn-primary">Ok</button>
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">
    var sapFunctionInstance;
    var Task = {};
    var Table = [];
    var serialNo = 0;
    index = 0;
    var DocNum = "";
    var allDocList = [];
    var FunctionId = 0;
    var TaskData = [];
    var functionId = 0;
    var abc1 = 0;
    abc1 = 1;
    abc1 = 'asd';
    var products = [{
        "ID": 1,
        "Value": "Audit",

    }, {
        "ID": 2,
        "Value": "External Audit",

    }, {
        "ID": 3,
        "Value": "Internal Audit",

    }];
    var productsDataSource = null;

    //$("#docNumber").dxTextBox({
    //    disabled: true
    //});

    $('#docNumber').prop("disabled", true);

    function GenerateSAPFunctionDropDown(jsonResponse) {
        $("#sapFunction").dxSelectBox({
            cacheEnabled: false,
            items: jsonResponse,
            displayExpr: "FunctionName",
            valueExpr: "FunctionCode",
            placeholder: "Select Function...",
            cssclass: "form-control frm-cstm",
            searchEnabled: true,
            readonly: false,
            onValueChanged: function (data) {
                serialNo = 0;
                var val = data.value;
                functionID = val;
                DocNum = "";
                Table = [];
                GetMaster_TaskByFunctionIDJS(val);
                functionId = functionID;
            }
        });
    }


    function GetMaster_TaskByFunctionIDJS(functionID) {

        var Filteredtable = TaskData.filter(x=>x.FUNCTIONNAME == functionID)
       
        var sno=0;

        $.each(Filteredtable, function (index, val) {
            sno = sno + 1;
            //if (DocNum == "") {
            var isnewDoc = val.isNewDocument;
            if (isnewDoc == false)
                DocNum = val.DOCNUM;
            //}

            val.SNO = sno;
            var Details = {

                ID: val.ID,
                DocNum: val.DOCNUM,
                SNO: val.SNO,
                KEY: val.KEY,
                FUNCTIONNAME: val.FUNCTIONNAME,
                TASK: val.TASK,
                ISACTIVE: val.ISACTIVE,
                ISDELETED: val.ISDELETED
            };
            Table.push(Details);
            serialNo = Table.length;
        });
        GenerateGrid(Filteredtable);
        //$('#docNumber').prop("disabled", true);
        //$("#docNumber").dxTextBox({
        //    disabled: true
        //});
        $('#docNumber').prop("disabled", true);
        if (DocNum != undefined) {
            //$("#docNumber").val(DocNum);

            //$("#docNumber").dxTextBox({
            //    value: DocNum
            //});
            $("#docNumber").val(DocNum);
        }
    }


    var sapFunctions;
    function GetSAPFunction() {
        var url = "/TaskMasterSetup/GetSapFunctions";
        $.ajax({
            url: url,
            method: "GET",
            data: {},
            async: false,
        }).done(function (data) {
            sapFunctions = data.response;
            allDocList = data.DocList;
            GenerateSAPFunctionDropDown(sapFunctions);

        }).fail(function (data) {
        });
    }

    function GenerateTaskData(Task) {

        console.log(Task);
    }
    function GenerateGrid(JSON_Response) {
        //console.log(JSON_Response);
        $(function () {
            $("#gridContainer").dxDataGrid({
                dataSource: JSON_Response,
                keyExpr: "KEY",
                columnAutoWidth: true,
                allowColumnResizing: true,
                allowColumnReordering: true,
                showBorders: true,
                showScrollbar: 'always',
                filterRow: { visible: true },
                scrolling: {
                    mode: "horizontal",
                    showScrollbar: 'always'
                },
                paging: {
                    enabled: false
                },
                editing: {
                    mode: "batch",
                    allowUpdating: true,
                    allowDeleting: true,
                    allowAdding: true
                },
                columns: [
                     {
                         dataField: "ID",
                         caption: "ID",
                         allowEditing: false,
                         visible: false
                     },
                    {
                        dataField: "SNO",
                        caption: "S.No",
                        dataType: "Number",
                        allowEditing: false
                    },
                    {
                        caption: "TASK",
                        dataField: "TASK",
                        validationRules: [{ type: "required" }],

                        width: 530
                    },
                    {
                        dataField: "ISACTIVE",
                        caption: "Active",
                        dataType: "boolean"
                    },
                     {
                         dataField: "ISDELETED",
                         caption: "Deleted",
                         dataType: "bool",
                         visible: false,
                         allowEditing: false
                     }
                ],
                onEditorPreparing: function (e) {
                    if (e.parentType == 'dataRow' && e.dataField == 'TASK') {
                        e.editorOptions.maxLength = 100;
                    }
                },
                onEditingStart: function (e) {
                },
                onInitNewRow: function (e) {
                    serialNo = serialNo + 1;
                    e.data.SNO = serialNo;
                    e.data.ID = 0;
                    e.data.ISDELETED = false;
                    e.data.ISACTIVE = true;

                },
                onRowInserting: function (e) {
                    serialNo = serialNo + 1;
                    e.data.SNO = serialNo;
                },
                onRowInserted: function (e) {
                    var Details = {
                        KEY: e.key,
                        ID: 0,
                        SNO: e.data.SNO,
                        TASK: e.data.TASK,
                        FUNCTIONNAME: functionID,
                        ISACTIVE: e.data.ISACTIVE,
                        ISDELETED: false
                    };
                    Table.push(Details);
                },
                onRowUpdating: function (e) {
                },
                onRowUpdated: function (e) {
                    $.each(Table, function (index, val) {
                        if (val.KEY == e.data.KEY) {
                            val.TASK = e.data.TASK;
                            FUNCTIONNAME = FunctionId;
                            val.ISACTIVE = e.data.ISACTIVE;
                        }

                    });
                },
                onRowRemoving: function (e) {
                },
                onRowRemoved: function (e) {
                    $.each(Table, function (index, val) {
                        if (val.KEY == e.data.KEY) {
                            val.ISDELETED = true;
                        }
                    });
                }
            });

        });
    }

    function GetAllMaster_Task() {
        var url = "/TaskMasterSetup/GetTaskMasterSetup";
        $.ajax({
            url: url,
            method: "GET",
            data: {},
            async: false,
        }).done(function (data) {
            var JSON_Response = data.response;
            TaskData = data.response;
            //var FunctionList = data.FunctionList;
            //GenerateCombo(FunctionList);

            var abc = [];
            //GenerateTaskData(JSON_Response);
            GenerateGrid(abc);

            $.each(JSON_Response, function (index, val) {
                var Details = {
                    KEY: val.KEY,
                    ID: val.ID,
                    SNO: val.SNO,
                    FUNCTIONNAME: val.FUNCTIONNAME,
                    TASK: val.TASK,
                    ISACTIVE: val.ISACTIVE,
                    ISDELETED: val.ISDELETED
                };
                Table.push(Details);
                serialNo = Table.length;
            });
        }).fail(function (data) {
        });
    }

    function GetMaster_TaskByDocNum(docNum) {
        var url = "/TaskMasterSetup/GetMaster_TaskByDocNum?docNum=" + docNum;
        $.ajax({
            url: url,
            method: "GET",
            data: {},
            async: false,
        }).done(function (data) {


            var JSON_Response = data.response;
            if (JSON_Response.length > 0) {
                DOCNUM = JSON_Response[0].DOCNUM;
                $("#docNumber").val(DOCNUM);

                //$("#docNumber").dxTextBox({
                //    value: DOCNUM
                //});
            }
            //$("#docNumber").val(DOCNUM);



            GenerateGrid(JSON_Response);
            var FName;
            $.each(JSON_Response, function (index, val) {
                FName = val.FUNCTIONNAME
                if (DocNum == "")
                    DocNum = val.DOCNUM;

                var Details = {
                    //KEY: val.KEY,
                    ID: val.ID,
                    DocNum: val.DocNum,
                    SNO: val.SNO,
                    //FunctionID: functionID,
                    //FunctionID: functionID != undefined ? functionID : val.FUNCTIONNAME,
                    FunctionID: val.FUNCTIONNAME,
                    DesignationID: val.DesignationID,
                    RatesPerHour: val.RatesPerHour,
                    ISACTIVE: val.ISACTIVE,
                    ISDELETED: val.ISDELETED
                };
                Table.push(Details);
                serialNo = Table.length;
            });

            $("#sapFunction").dxSelectBox({
                value: FName
            });

        }).fail(function (data) {
        });
    }

    function ValidateAuthorization() {
        var id = $("#AuthID").val();
        if (id != -1) {
            if (id == 2) {
                $("#new").remove();
                $("#find").remove();
                $("#add_update").remove();
                $("#gridContainer").dxDataGrid({ disabled: true });

            }
        }
    }


    function AddUpdate() {

        var notSaved = $('#gridContainer').dxDataGrid('instance').getController('editing').hasChanges();
        if (notSaved)
            setTimeout(function () { AddUpdate(); }, 2000);

        else {
            if (functionId == 0) {
                AlertToast('error', 'Please select function!');
                return;
            }
            if (Table.length > 0) {
                var url = "/TaskMasterSetup/AddUpdateGetTaskMasterSetup";
                $.ajax({
                    type: "POST",
                    url: url,
                    contentType: 'application/json',
                    data: JSON.stringify(Table),
                    //data: JSON.stringify(Task),
                    dataType: "json",
                    async: false,
                    success: function (response) {
                        loadPanel.hide();
                        if (response.Success) {
                            AlertToast('success', response.Message);
                            setTimeout(function () {
                                window.location.reload();
                            }, 5000);
                            //GetAllMaster_Task();
                        }
                        else
                        {
                            AlertToast('error', response.Message);
                        }
                    },
                    error: function (response) {
                        loadPanel.hide();
                        console.log(response)
                    },
                    failure: function (response) {
                        loadPanel.hide();
                        console.log(response)
                    }

                })
            }
            else {
                AlertToast('error', "Please add atleast one record");
            }

        }

    }

    $('document').ready(function () {
        GetAllMaster_Task();
        GetSAPFunction();
        ValidateAuthorization();
        serialNo = 0;
        $('#add_update').click(function () {

            if (functionId == 0) {
                AlertToast('error', 'Please select function!');
                return;
            }
            else
            {
                var gridContainer = $("#gridContainer").dxDataGrid("instance");
                loadPanel.show();
                gridContainer.getController('validating').validate(true).done(function (result) {
                    if (result) {
                        loadPanel.show();
                        gridContainer.saveEditData();
                        setTimeout(function () { AddUpdate(); }, 2000);
                    }
                    else {
                        loadPanel.hide();
                        AlertToast('error', "Please fill required fields!");
                    }
                    
                });
            }
           
        });


    });

    $("#docNumber").blur(function () {
        console.log('blur2 has been called ')
        GetMaster_TaskByDocNum($("#docNumber").val());
    });

    //$("#docNumber").click(function () {
    //    GetMaster_TaskByDocNum($("#docNumber").val());
    //});


    $('#new').click(function () {
        //$("#docNumber").dxTextBox({
        //    value: ""
        //});
        //Table = [];

        //GenerateGrid(Table);
        Table = [];
        GenerateGrid([]);
        serialNo = 0;
        $("#docNumber").val("");
        $('#docNumber').prop("disabled", true);
       
        $("#sapFunction").dxSelectBox({ value: 0 });
    });
    $('#find').click(function () {
        $("#docNumber").val("");
        $('#docNumber').prop("disabled", false);
        //$("#docNumber").dxTextBox({
        //    disabled: false
        //});

    });
    $('#first').click(function () {
        $('#docNumber').prop("disabled", true);

        GetMaster_TaskByDocNum(allDocList[0]);
    });
    $('#last').click(function () {
        $('#docNumber').prop("disabled", true);
        index = allDocList.length - 1;
        GetMaster_TaskByDocNum(allDocList[index]);
    });
    $('#previous').click(function () {
        $('#docNumber').prop("disabled", true);
        if (index != 0)
            index = index - 1;
        GetMaster_TaskByDocNum(allDocList[index]);
    });
    $('#next').click(function () {
        $('#docNumber').prop("disabled", true);


        if (index < allDocList.length - 1)
            index = index + 1;

        GetMaster_TaskByDocNum(allDocList[index]);
    });




    function GetLogData(name) {
        loadData("/TaskMasterSetup/GetTaskMastersSetupLog?docNum=" + DocNum);
    }

    function GetDocNumData() {
        loadData("/TaskMasterSetup/GetTaskMastersSetupLog?docNum=" + DocNum);
    }

    function GeneratePopupFindGrid() {
        loadPanel.show();
        var ur = "/TaskMasterSetup/GetTask_MasterAllDocuments";
        $.ajax({
            url: ur,
            method: "GET",
            data: {},
            async: false,
        }).done(function (data) {
            var JSON_Response = JSON.parse(data.response.Data);
            popupFindInstance = $("#FindContainer").dxDataGrid({
                dataSource: JSON_Response,
                keyExpr: "DOCNUM",
                paging: { pageSize: 10 },
                columnAutoWidth: true,
                pager: { showInfo: true },
                allowColumnResizing: true,
                allowColumnReordering: true,
                showBorders: true,
                showScrollbar: 'always',
                filterRow: { visible: true },
                scrolling: {
                    mode: "horizontal",
                    showScrollbar: 'always'
                },
                selection: {
                    mode: "single"
                },
                columns: [
                    {
                        dataField: "DOCNUM",
                        caption: "Document #"
                    },
                    {
                        dataField: "FUNCTIONNAME",
                        visible: false
                    },
                     {
                         dataField: "FUNCTIONNAME",
                         caption: "Function",
                         setCellValue: function (rowData, value, currentRowData) {
                             rowData.Authorization = value;
                             currentRowData.Authorization = value;
                         },
                         lookup: {
                             dataSource: sapFunctions,
                             valueExpr: "FunctionCode",
                             displayExpr: "FunctionName"
                         }
                     },
                    {
                        dataField: "CreatedDate",
                        caption: "Created Date"
                    }
                ]
            }).dxDataGrid("instance");

            $("#select-all-mode").dxSelectBox({
                dataSource: ["allPages", "page"],
                value: "allPages",
                onValueChanged: function (data) {
                    dataGrid.option("selection.selectAllMode", data.value);
                }
            });

            $("#show-checkboxes-mode").dxSelectBox({
                dataSource: ["none", "onClick", "onLongTap", "always"],
                value: "onClick",
                onValueChanged: function (data) {
                    dataGrid.option("selection.showCheckBoxesMode", data.value);
                    $("#select-all-mode").dxSelectBox("instance").option("disabled", data.value === "none");
                }
            });

            popupFindInstance.clearSelection();

            loadPanel.hide();

        }).fail(function (data) {
            console.log(data);
            loadPanel.hide();
        });

    }

    $('#btnOk').click(function () {
        var selectedRow = popupFindInstance.getSelectedRowsData();
        if (selectedRow.length > 0) {
            $("#sapFunction").dxSelectBox({ value: selectedRow[0].FUNCTIONNAME });
        }
        $('#myModal_Find').modal('hide');
        $('body').removeClass('modal-open');
        $('.modal-backdrop').remove();

    });

</script>