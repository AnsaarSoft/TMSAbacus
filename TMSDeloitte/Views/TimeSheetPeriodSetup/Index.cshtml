

@{
    ViewBag.Title = "Time Sheet Period Setup";
}
<div class="pcoded-content">
    <div class="card p-20" style="min-height: 495px;">
        <!-- [ breadcrumb ] start -->
        <div class="page-header">
            <div class="page-block">
                <div class="row align-items-center">
                    <div class="col-md-6">
                        <div class="page-header-title">
                            <h4> Time Sheet Period Setup </h4>
                        </div>
                    </div>
                    <div class="col-md-6 text-md-right">
                        <ul class="breadcrumb">
                            <li class="breadcrumb-item"><a href="#"> Administration </a></li>
                            <li class="breadcrumb-item"> Setup </li>
                            <li class="breadcrumb-item"> Time Sheet Period Setup </li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
        <!-- [ breadcrumb ] end -->
        <!-- [ Main Content ] start -->
        <div class="row">
            <div class="col-lg-12">
                <div class="form-group">
                    <div class="text-right">
                        <button id="new" class="plus-icon"> <i class="fas fa-plus-square"></i> </button>
                        <button id="find" class="find-icon" data-toggle="modal" onclick='GeneratePopupFindGrid();' data-target="#myModal_Find"> <i class="fas fa-search"></i> </button>
                        <button id="first" class="step-backword-icon"> <i class="fas fa-step-backward"></i></button>
                        <button id="previous" class="backword-icon"> <i class="fas fa-backward"></i> </button>
                        <button id="next" class="forward-icon"> <i class="fas fa-forward"></i> </button>
                        <button id="last" class="step-forward-icon"> <i class="fas fa-step-forward"></i></button>
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-lg-6">
                <div class="form-group">
                    <label for="exampleFormControlSelect1"> Year: </label>
                    <div id="yearDropDown" class="form-control frm-cstm"></div>
                </div>
            </div>

            <div class="col-lg-6">
                <div class="form-group">
                    <label for="typeCost"> Document Number: </label>
                    <input type="text" class="form-control frm-cstm" id="docNumber" placeholder="DocNum" disabled="disabled">
                </div>
            </div>

        </div>
        <div class="row">
            <div class="col-lg-3">
                <div class="form-group">
                    <label for="exampleFormControlSelect1">First Period From Date </label>
                    <div id="fromDate"></div>
                </div>
            </div>

            <div class="col-lg-3">
                <div class="form-group">
                    <label for="typeCost">First Period To Date: </label>
                    <div id="toDate"></div>
                </div>
            </div>
            <div class="col-lg-6 mt-4">
                <input type="button" value="Generate" id="generate" class="btn btn-primary" />
            </div>
        </div>


        <div class="row">
            <div class="col-lg-12">
                <div class="table-responsive">
                    <div id="gridContainer"></div>
                </div>
            </div>
        </div>


        <div class="row">
            <div class="col-lg-12 text-right mt-3">
                <input type="button" value="Add & Update" id="add_update" class="btn btn-primary" />
                @{
                    TMSDeloitte.Models.UserSession sess = null;
                    if ((TMSDeloitte.Models.UserSession)HttpContext.Current.Session["TMSUserSession"] != null)
                    {
                        sess = (TMSDeloitte.Models.UserSession)HttpContext.Current.Session["TMSUserSession"];
                        if (sess.SessionUser.ISSUPER)
                        {
                            @*<button type="button" class="btn btn-success" data-toggle="modal" onclick='loadAuthLogData("/TimeSheetPeriodSetup/GetTimeSheetSetupLog");' data-target="#myLogModal">Show Log</button>*@
                        }

                        var menu = sess.pagelist.Where(x => x.ID == (int)TMSDeloitte.Helper.Enums.FormsName.TimeSheetPeriodSetup).FirstOrDefault();
                        if (menu != null)
                        {
                            <input type="hidden" id="AuthID" name="AuthID" value="@menu.Role">
                        }
                        else
                        {
                            <input type="hidden" id="AuthID" name="AuthID" value="-1">
                        }
                    }

                }


            </div>
        </div>

        <!-- [ Main Content ] end -->
    </div> <!-- [ Card Content ] end -->
</div>


<div id="myModal_Find" class="modal fade" role="dialog">
    <div class="modal-dialog modal-lg">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">×</button>

            </div>
            <div class="modal-body">
                <div id="FindContainer"></div>
            </div>
            <div class="modal-footer">
                <button type="button" id="btnOk" class="btn btn-primary">Ok</button>
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
            </div>
        </div>
    </div>
</div>

<div id="myLogModal" class="modal fade" role="dialog">
    <div class="modal-dialog modal-lg">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                @*<h4 class="modal-title">Log</h4>*@
                <button type="button" class="close" data-dismiss="modal">×</button>
            </div>

            <div class="modal-body">
                <h8>Header Log</h8>
                <div id="HeaderLogContainer"></div>
            </div>
            <div class="modal-body">
                <h8>Detail Log</h8>
                <div id="DetailLogContainer"></div>
            </div>
        </div>
    </div>
</div>


<script type="text/javascript">

        var Table = [];
        var serialNo = 0;
        var year = "";
        var DocNum = "";
        var DocId = 0;
        var DocIsDeleted = false;
        var allDocList = [];
        var index = 1;
        var popupFindInstance;
        var AllDocumentList = [];
        var TimeSheetYearUtilizedList = [];

        var isDateRangeError = false;

        function GetDocList() {
            var url = "/TimeSheetPeriodSetup/GetDocList";
            $.ajax({
                url: url,
                method: "GET",
                data: {},
                async: false
            }).done(function (data) {
                allDocList = data.docList;
                TimeSheetYearUtilizedList = data.TimeSheetYearUtilized;
            }).fail(function (data) {
            });
        }

        function GenerateDateBox()
        {
            var now = new Date();
            $("#fromDate").dxDateBox({
                type: "date",
                pickerType: "calendar",
                value: getMondayOfCurrentWeek(),
                displayFormat: "EEEE, MMM dd",
                onOpened: function (e) {
                    disableDates();

                    $(".dx-calendar-navigator .dx-button-content").click(function () {
                        disableDates();
                    });
                },
                onValueChanged: function (data) {
                    //$("#toDate").dxDateBox({min: data.value});

                    var Fdate = data.value;
                    var Fday = Fdate.getDate();       // yields date
                    var Fmonth = Fdate.getMonth() + 1;    // yields month (add one as '.getMonth()' is zero indexed)
                    var Fyear = Fdate.getFullYear();  // yields year
                    var Fhour = Fdate.getHours();     // yields hours
                    var Fminute = Fdate.getMinutes(); // yields minutes
                    var Fsecond = Fdate.getSeconds(); // yields seconds
                    var fromDate = Fyear + "/" + Fmonth + "/" + Fday + " " + Fhour + ':' + Fminute + ':' + Fsecond;

                    var days = 4;
                    var dte = Date.parse(fromDate)
                    var Tdate = new Date(dte + (days * 24 * 60 * 60 * 1000));

                    $("#toDate").dxDateBox({ value: Tdate });
                }
            });

            $("#toDate").dxDateBox({
                type: "date",
                pickerType: "calendar",
                value: getFridayOfCurrentWeek(),
                displayFormat: "EEEE, MMM dd",
                onOpened: function (e) {
                    disableDates();

                    $(".dx-calendar-navigator .dx-button-content").click(function () {
                        disableDates();
                    });
                },
                onValueChanged: function (data) {
                    $("#fromDate").dxDateBox({ max: data.value });
                }
            });

            $('.dx-texteditor-input').attr('readonly', true);
        }

        function disableDates() {

            $("td.dx-calendar-cell[aria-label *= 'Saturday']").css('background-color', 'lightgray').click(function () {
                return false;
            });
            $("td.dx-calendar-cell[aria-label *= 'Sunday']").css('background-color', 'lightgray').click(function () {
                return false;
            });
            $("td.dx-calendar-cell[aria-label *= 'Tuesday']").css('background-color', 'lightgray').click(function () {
                return false;
            });
            $("td.dx-calendar-cell[aria-label *= 'Wednesday']").css('background-color', 'lightgray').click(function () {
                return false;
            });
            $("td.dx-calendar-cell[aria-label *= 'Thursday']").css('background-color', 'lightgray').click(function () {
                return false;
            });
        }


        function getMondayOfCurrentWeek() {
            var d = new Date();
            var day = d.getDay();
            return new Date(d.getFullYear(), d.getMonth(), d.getDate() + (day == 0 ? -6 : 1) - day);
        }

        function getFridayOfCurrentWeek() {
            var d = new Date();
            var day = d.getDay();
            return new Date(d.getFullYear(), d.getMonth(), d.getDate() + (day == 0 ? 0 : 5) - day);
        }

        function GenerateYearDropDown() {
            var min = new Date().getFullYear();
            var min = min - 1;
            var max = min + 5;
            var yearList = [];
            var year = {};
            var val = 0;

            for (var i = min; i <= max; i++) {

                var dataExist = AllDocumentList.filter(x=>x.Year == i);
                if (dataExist.length > 0)
                    max = max + 1;
                else
                {
                    if (val == 0)
                    {
                        val = i;
                    }
                    
                }
                   
                year = { value: i };
                yearList.push(year);
              
               
                
            }

            $("#yearDropDown").dxSelectBox({
                value: val,
                cacheEnabled: false,
                items: yearList,
                displayExpr: "value",
                valueExpr: "value",
                placeholder: "Select Year...",
                cssclass: "form-control frm-cstm",
                //searchEnabled: true,
                readonly: false,
                onValueChanged: function (data) {
                    //year = data.value;
                    $("#add_update").show();
                    $("#generate").show();
                    var dataExist = AllDocumentList.filter(x=>x.Year == data.value);
                    if(dataExist.length>0)
                    {
                        GetTimeSheetByDocNum(dataExist[0].DocNum);
                    }
                    else
                    {
                        DocNum = "";
                        DocId = 0;
                        GenerateGrid([]);
                        Table = [];
                        GenerateDateBox();
                        $("#docNumber").val("");
                        $('#docNumber').prop("disabled", true);
                        serialNo = 0;

                        var d = new Date(new Date(data.value + '-01-01').getFullYear(), 0, 1);
                        var day = d.getDay();
                        $("#fromDate").dxDateBox({ value: new Date(d.getFullYear(), d.getMonth(), d.getDate() + (day == 0 ? -6 : 1) - day) });
                    }
                }
            });
           
        }

        function GetLogData(url) {
            loadData(url+"?docNum=" + DocNum);
        }

        function GenerateGrid(JSON_Response) {
            $("#gridContainer").dxDataGrid({
                dataSource: JSON_Response,
               // keyExpr: "KEY",
                columnAutoWidth: true,
                allowColumnResizing: true,
                allowColumnReordering: true,
                showBorders: true,
                showScrollbar: 'always',
                filterRow: { visible: true },
                editing: {
                    mode: "cell",
                    allowUpdating: true
                },
                scrolling: {
                    mode: "horizontal",
                    showScrollbar: 'always'
                },
                paging: { pageSize: 10 },
                //editing: {
                //    mode: "batch",
                //    allowUpdating: true,
                //    allowDeleting: true,
                //    allowAdding: true
                //},
                columns: [                     
                    {
                        dataField: "SNo",
                        caption: "S.No",
                        dataType: "number",
                        //width: "auto"
                    },
                   
                    {
                        dataField: "Period",
                        caption: "Period",
                       // width: "auto"
                    },
                     {
                         dataField: "Monday",
                         caption: "From Date",
                     },
                      {
                          dataField: "Friday",
                          caption: "To Date",
                      },
                      {
                          dataField: "_Monday",
                          visible: false,
                      },
                      {
                          dataField: "_Friday",
                          visible: false,
                      },
                      {
                          dataField: "StdHoursInWeek",
                          caption: "Std Hours In Week",
                          dataType: "number",
                         // width: "auto"
                      },
                ],
                onEditorPreparing: function (e) {
                    if (e.parentType == 'dataRow' && e.dataField == 'TYPEOFCOST') {
                        e.editorOptions.maxLength = 100;
                    }
                },
                onEditingStart: function (e) {
                },
                onInitNewRow: function (e) {
                    e.data.ID = 0;
                    e.data.IsDeleted = false;
                    e.data.IsActive = true;
                    serialNo = serialNo + 1;
                    e.data.SNO = serialNo;

                },
                onRowInserting: function (e) {

                },
                onRowInserted: function (e) {
                    var Details = {
                        KEY: e.data.key,
                        ID: 0,
                        DocNum: e.data.DocNum,
                        SNO: e.data.SNO,
                        RatesPerHour:e.data.RatesPerHour,
                        DesignationID: e.data.DesignationID,
                        IsDeleted: false,
                        IsActive: e.data.IsActive
                    };
                    Table.push(Details);
                },
                onRowUpdating: function (e) {
                },
                onRowUpdated: function (e) {
                    $.each(Table, function (index, val) {
                        if (val.KEY == e.data.KEY) {
                            val.RatesPerHour = e.data.RatesPerHour;
                            val.IsActive = e.data.IsActive;
                        }

                    });
                },
                onRowRemoving: function (e) {
                },
                onRowRemoved: function (e) {
                    $.each(Table, function (index, val) {
                        if (val.KEY == e.data.KEY) {
                            val.IsDeleted = true;
                        }
                    });
                }
            });
        }


        function GetTimeSheetByDocNum(docNum)
        {
            loadPanel.show();
            Table = [];
            serialNo = 0;
            var url = "/TimeSheetPeriodSetup/GetTimeSheetByDocNum?docNum=" + docNum;
            $.ajax({
                url: url,
                method: "GET",
                data: {},
                async: false,
            }).done(function (data) {

                loadPanel.hide();
                $("#docNumber").val("");

                var JSON_Response = JSON.parse(data.response.Data);

                DocId = JSON_Response.ID;
                DocNum = JSON_Response.DocNum;

             

                var from = JSON_Response.fromDate.split("/");
                var fDate = new Date(from[0], from[1] - 1, from[2])

                var to = JSON_Response.toDate.split("/");
                var tDate = new Date(to[0], to[1] - 1, to[2])

                $("#fromDate").dxDateBox({ value: fDate });
                $("#toDate").dxDateBox({ value: tDate });

                GenerateGrid(JSON_Response.PeriodList);
               
                $('#docNumber').prop("disabled", true);

                $("#docNumber").val(DocNum);

                $("#yearDropDown").dxSelectBox({ value: parseInt(JSON_Response.year) });

              

                $.each(TimeSheetYearUtilizedList, function (index, year) {
                    if(parseInt(JSON_Response.year)==year)
                    {
                        //$("#add_update").hide();
                        $("#generate").hide();
                        return;
                    }
                })
              


            }).fail(function (data) {
                loadPanel.hide();
            });
        }

        function AddUpdate() {

            var notSaved = $("#gridContainer").dxDataGrid('instance').getController('editing').hasChanges();
            if (notSaved) {
                setTimeout(function () { AddUpdate(); }, 2000);
            }
            else {

                var getAll = $("#gridContainer").dxDataGrid('instance');
                getAll.getDataSource().store().load().done((res) => {
                    Table = [];
                    Table = res;
                });

                if (Table.length == 0) {
                    AlertToast('error', "No Row Generated For Time Sheet Period!");
                }
                else {

                    if (Table.length != 52) {
                        AlertToast('error', "Total no of period must be equal to 52!");
                        return false;
                    }

                    loadPanel.show();

                    var Fdate = $("#fromDate").dxDateBox("instance").option('value');
                    var Fday = Fdate.getDate();       // yields date
                    var Fmonth = Fdate.getMonth() + 1;    // yields month (add one as '.getMonth()' is zero indexed)
                    var Fyear = Fdate.getFullYear();  // yields year
                    var Fhour = Fdate.getHours();     // yields hours
                    var Fminute = Fdate.getMinutes(); // yields minutes
                    var Fsecond = Fdate.getSeconds(); // yields seconds
                    var fromDate = Fyear + "/" + Fmonth + "/" + Fday + " " + Fhour + ':' + Fminute + ':' + Fsecond;

                    var Tdate = $("#toDate").dxDateBox("instance").option('value');
                    var Tday = Tdate.getDate();       // yields date
                    var Tmonth = Tdate.getMonth() + 1;    // yields month (add one as '.getMonth()' is zero indexed)
                    var Tyear = Tdate.getFullYear();  // yields year
                    var Thour = Tdate.getHours();     // yields hours
                    var Tminute = Tdate.getMinutes(); // yields minutes
                    var Tsecond = Tdate.getSeconds(); // yields seconds
                    var toDate = Tyear + "/" + Tmonth + "/" + Tday + " " + Thour + ':' + Tminute + ':' + Tsecond;

                    var url = "/TimeSheetPeriodSetup/AddUpdateTimeSheetPeriod";
                    var data = {};

                    data.ID = DocId;
                    data.DocNum = DocNum;
                    data.year = $("#yearDropDown").dxSelectBox('instance').option('value');
                    data.fromDate = fromDate;
                    data.toDate = toDate;
                    data.ISDELETED = DocIsDeleted;
                    data.PeriodList = Table;
                    $.ajax({
                        type: "POST",
                        url: url,
                        contentType: 'application/json',
                        data: JSON.stringify(data),
                        dataType: "json",
                        async: false,
                        success: function (response) {
                            loadPanel.hide();
                            if (response.Success) {
                                AlertToast('success', response.Message);
                                setTimeout(function () {
                                    window.location.reload();
                                }, 5000);
                            }
                            else {
                                AlertToast('error', response.Message);
                            }
                        },
                        error: function (response) {
                            loadPanel.hide();
                            console.log(response);
                        },
                        failure: function (response) {
                            loadPanel.hide();
                            console.log(response);
                        }

                    });

                }
            }
        }

        function GeneratePopupFindGrid() {

            loadPanel.show();
           
            popupFindInstance = $("#FindContainer").dxDataGrid({
                dataSource: AllDocumentList,
                keyExpr: "DocNum",
                paging: { pageSize: 10 },
                columnAutoWidth: true,
                pager: { showInfo: true },
                allowColumnResizing: true,
                allowColumnReordering: true,
                showBorders: true,
                showScrollbar: 'always',
                filterRow: { visible: true },
                scrolling: {
                    mode: "horizontal",
                    showScrollbar: 'always'
                },
                selection: {
                    mode: "single"
                },
                columns: [
                    {
                        dataField: "ID",
                        caption: "ID",
                        visible: false
                    },
                    {
                        dataField: "DocNum",
                        caption: "Document #"
                    },
                    {
                        dataField: "Year",
                        caption: "Year"
                    },
                     {
                         dataField: "FromDate",
                         caption: "From Date",
                         dataType: 'date',
                         format: 'EEEE, MMM dd'
                     },
                     {
                         dataField: "ToDate",
                         caption: "To Date",
                         dataType: 'date',
                         format: 'EEEE, MMM dd'
                     },
                    {
                        dataField: "CreatedDate",
                        caption: "Created Date"
                    }
                ]
            }).dxDataGrid("instance");

            $("#select-all-mode").dxSelectBox({
                dataSource: ["allPages", "page"],
                value: "allPages",
                onValueChanged: function (data) {
                    dataGrid.option("selection.selectAllMode", data.value);
                }
            });

            $("#show-checkboxes-mode").dxSelectBox({
                dataSource: ["none", "onClick", "onLongTap", "always"],
                value: "onClick",
                onValueChanged: function (data) {
                    dataGrid.option("selection.showCheckBoxesMode", data.value);
                    $("#select-all-mode").dxSelectBox("instance").option("disabled", data.value === "none");
                }
            });

            popupFindInstance.clearSelection();

            loadPanel.hide();

        }

        function GetAllDocuments()
        {
            var ur = "/TimeSheetPeriodSetup/GetAllDocuments";
            $.ajax({
                url: ur,
                method: "GET",
                data: {},
                async: false,
            }).done(function (data) {
                var JSON_Response = JSON.parse(data.response.Data);
                AllDocumentList = JSON_Response;

            }).fail(function (data) {
                console.log(data);
               // loadPanel.hide();
            });
        }

        function ValidateAuthorization() {
            var id = $("#AuthID").val();
            var isSuccess = false;

            if (id == -1)
                isSuccess = true;
            if (id == 2)
                isSuccess = true;

            if (isSuccess) {
                $("#add_update").remove();
                $("#gridContainer").dxDataGrid({ disabled: true });
            }
        }

        function loadAuthLogData(url) {
            if (DocId != 0) {
                url = url + "?docId=" + DocId;

                $.ajax({
                    url: url,
                    method: "GET",
                    data: {},
                    async: false,
                }).done(function (data) {
                    data = JSON.parse(data.response.Data);
                    console.log(data);
                    $("#HeaderLogContainer").dxDataGrid({
                        dataSource: data.Table,
                        paging: { pageSize: 10 },
                        columnAutoWidth: true,
                        pager: { showInfo: true },
                        allowColumnResizing: true,
                        allowColumnReordering: true,
                        showBorders: true,
                        showScrollbar: 'always',
                        filterRow: { visible: true },
                        scrolling: {
                            mode: "horizontal",
                            showScrollbar: 'always'
                        },
                    });
                    $("#DetailLogContainer").dxDataGrid({
                        dataSource: data.Table1,
                        paging: { pageSize: 10 },
                        columnAutoWidth: true,
                        pager: { showInfo: true },
                        allowColumnResizing: true,
                        allowColumnReordering: true,
                        showBorders: true,
                        showScrollbar: 'always',
                        filterRow: { visible: true },
                        scrolling: {
                            mode: "horizontal",
                            showScrollbar: 'always'
                        },
                    });

                }).fail(function (data) {
                    console.log(data);
                });
            }



        }

        $('document').ready(function () {

            GetDocList();
            GetAllDocuments();
            GenerateDateBox();
            GenerateYearDropDown();
            GenerateGrid([]);
            ValidateAuthorization();

            $('#generate').click(function () {
               
                var url = "/TimeSheetPeriodSetup/GenerateTimeSheetPeriod";

                var Fdate = $("#fromDate").dxDateBox("instance").option('value');
                var Fday = Fdate.getDate();       // yields date
                var Fmonth = Fdate.getMonth() + 1;    // yields month (add one as '.getMonth()' is zero indexed)
                var Fyear = Fdate.getFullYear();  // yields year
                var Fhour = Fdate.getHours();     // yields hours
                var Fminute = Fdate.getMinutes(); // yields minutes
                var Fsecond = Fdate.getSeconds(); // yields seconds
                var fromDate = Fyear + "/" + Fmonth + "/" + Fday + " " + Fhour + ':' + Fminute + ':' + Fsecond;

                var days = 364;
                var dte = Date.parse(fromDate)
                var Tdate = new Date(dte + (days * 24 * 60 * 60 * 1000)); //$("#toDate").dxDateBox("instance").option('value');
                var Tday = Tdate.getDate();       // yields date
                var Tmonth = Tdate.getMonth() + 1;    // yields month (add one as '.getMonth()' is zero indexed)
                var Tyear = Tdate.getFullYear();  // yields year
                var Thour = Tdate.getHours();     // yields hours
                var Tminute = Tdate.getMinutes(); // yields minutes
                var Tsecond = Tdate.getSeconds(); // yields seconds
                var toDate = Tyear + "/" + Tmonth + "/" + Tday + " " + Thour + ':' + Tminute + ':' + Tsecond;

                var data = {};
                data.fromDate = fromDate;
                data.toDate = toDate;
                data.year = $("#yearDropDown").dxSelectBox('instance').option('value');
                if (data.year == null || data.year == undefined)
                {
                    AlertToast('error', "Please select year!");
                }
                else
                {
                    loadPanel.show();
                    $.ajax({
                        type: "POST",
                        url: url,
                        contentType: 'application/json',
                        data: JSON.stringify(data),
                        dataType: "json",
                        async: false,
                        success: function (response) {

                            loadPanel.hide();

                            if (response.Success)
                            {
                                var JSON_Response = JSON.parse(response.list.Data);
                                GenerateGrid(JSON_Response);
                                var getAll = $("#gridContainer").dxDataGrid('instance');
                                getAll.getDataSource().store().load().done((res) => {
                                    Table = [];
                                    Table = res;
                                });
                            }
                            else
                            {
                                AlertToast('error', "Please select week first and last date!");
                                GenerateGrid([]);
                            }
                           
                        },
                        error: function (response) {
                            loadPanel.hide();
                            console.log(response);
                        },
                        failure: function (response) {
                            loadPanel.hide();
                            console.log(response);
                        }

                    });
                }

              

            });
            $('#add_update').click(function () {

                var year = $("#yearDropDown").dxSelectBox('instance').option('value');
                if (year == null ||year == undefined) {
                    AlertToast('error', "Please select year!");
                }
                else
                {
                    loadPanel.show();
                    var gridContainer = $("#gridContainer").dxDataGrid("instance");
                    gridContainer.saveEditData();
                    setTimeout(function () { AddUpdate(); }, 2000);
                }
                    

            });
            $('#new').click(function () {
                //DocNum = "";
                //DocId = 0;
                //GenerateGrid([]);
                //Table = [];
                //GenerateDateBox();
                //$("#docNumber").val("");
                //$('#docNumber').prop("disabled", true);
                //serialNo = 0;
                window.location.reload();
            });
            $('#find').click(function () {
                $("#docNumber").val("");
                $('#docNumber').prop("disabled", false);
            });
            $('#first').click(function () {
                $('#docNumber').prop("disabled", true);
                index = 0;
                GetTimeSheetByDocNum(allDocList[index]);
            });
            $('#last').click(function () {
                $('#docNumber').prop("disabled", true);
                index = allDocList.length - 1;
                GetTimeSheetByDocNum(allDocList[index]);
            });
            $('#previous').click(function () {
                $('#docNumber').prop("disabled", true);
                if (index != 0)
                    index = index - 1;
                GetTimeSheetByDocNum(allDocList[index]);
            });
            $('#next').click(function () {
                $('#docNumber').prop("disabled", true);
                if (index < allDocList.length-1)
                    index = index + 1;

                GetTimeSheetByDocNum(allDocList[index]);
            });
            $('#btnOk').click(function () {
                var selectedRow = popupFindInstance.getSelectedRowsData();
                if (selectedRow.length > 0)
                {
                    GetTimeSheetByDocNum(selectedRow[0].DocNum);
                }
                $('#myModal_Find').modal('hide');
                $('body').removeClass('modal-open');
                $('.modal-backdrop').remove();

            });
            $("#docNumber").blur(function () {

                GetTimeSheetByDocNum($("#docNumber").val());

            });
        });

</script>

