@{
    ViewBag.Title = "Claim Form";
}


@Html.Hidden("viewDocNum", (object)ViewBag.DocNum)
@Html.Hidden("viewEmpID", (object)ViewBag.EmpID)
@Html.Hidden("isView", (object)ViewBag.isView)

@Html.Hidden("EmpID", 0)
@Html.Hidden("IsSuper", false)


<div class="pcoded-content">
    <div class="card p-20" style="min-height: 495px;">
        <!-- [ breadcrumb ] start -->
        <div class="page-header">
            <div class="page-block">
                <div class="row align-items-center">
                    <div class="col-md-6">
                        <div class="page-header-title">
                            <h4> Claim Form </h4>
                        </div>
                    </div>
                    <div class="col-md-6 text-md-right">
                        <ul class="breadcrumb">
                            <li class="breadcrumb-item"><a href="#"> Travel Management </a></li>
                            <li class="breadcrumb-item"> Claim Form </li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
        <!-- [ breadcrumb ] end -->
        <!-- [ Main Content ] start -->
        <div class="row" id="topButton">
            <div class="col-lg-12">
                <div class="form-group">
                    <div class="text-right">
                        <button id="new" class="plus-icon"> <i class="fas fa-plus-square"></i> </button>
                        <button id="find" class="find-icon" data-toggle="modal" onclick='GeneratePopupFindGrid();' data-target="#myModal_Find"> <i class="fas fa-search"></i> </button>
                        <button id="first" class="step-backword-icon"> <i class="fas fa-step-backward"></i></button>
                        <button id="previous" class="backword-icon"> <i class="fas fa-backward"></i> </button>
                        <button id="next" class="forward-icon"> <i class="fas fa-forward"></i> </button>
                        <button id="last" class="step-forward-icon"> <i class="fas fa-step-forward"></i></button>
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-lg-3">
                <div class="form-group">
                    <label for="exampleFormControlSelect1"> Employee Code: </label>
                    <input type="text" class="form-control frm-cstm" id="employeeCode" placeholder="Employee Code" readonly />
                </div>
            </div>

            <div class="col-lg-3">
                <div class="form-group">
                    <label for="typeCost"> Document Status: </label>
                    <input type="text" class="form-control frm-cstm" id="docStatus" placeholder="Document Status" disabled="disabled">
                </div>

            </div>
            <div class="col-lg-3" >
                <div class="form-group" id="divUpdateable" style="display: none;">
                    <label class="col-lg-2" for="exampleFormControlSelect1"></label>
                    <br />
                    <input type="checkbox" class="form-check-label" id="Updateable" /> Resubmission / Updateable
                </div>
            </div>
            <div class="col-lg-3">
                <div class="form-group">
                    <label for="typeCost"> Document Number: </label>
                    <input type="text" class="form-control frm-cstm" id="docNumber" placeholder="DocNum" disabled="disabled">
                </div>
            </div>

        </div>
        <div class="row">
            <div class="col-lg-6">
                <div class="form-group">
                    <label for="exampleFormControlSelect1">Employee Name: </label>
                    <input type="text" class="form-control frm-cstm" id="employeeName" placeholder="Employee Name" readonly />
                </div>
            </div>

            <div class="col-lg-6">
                <div class="form-group">
                    <label for="exampleFormControlSelect1">Doc Date </label>
                    <div id="docDate"></div>
                </div>
            </div>

        </div>

        <div class="row">
            <div class="col-lg-6">
                <div class="form-group">
                    <label for="exampleFormControlSelect1">Department: </label>
                    <input type="text" class="form-control frm-cstm" id="department" placeholder="Department" readonly />
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-lg-6">
                <div class="form-group">
                    <label for="exampleFormControlSelect1">Designation: </label>
                    <input type="text" class="form-control frm-cstm" id="designation" placeholder="Designation" readonly />
                </div>
            </div>


         
        </div>




        <div class="row">
            <div class="col-lg-12">
                <div class="form-group">
                    <ul class="nav nav-tabs mb-3" id="myTab" role="tablist">
                        <li class="nav-item">
                            <a class="nav-link text-uppercase active" id="user-tab" data-toggle="tab" href="#general" role="tab" aria-controls="user" aria-selected="true"> General </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link text-uppercase" id="group-tab" data-toggle="tab" href="#attachment" role="tab" aria-controls="group" aria-selected="false"> Attachment </a>
                        </li>
                    </ul>
                    <div class="tab-content" id="myTabContent">
                        <div class="tab-pane fade active show" id="general" role="tabpanel" aria-labelledby="user-tab">
                            <div class="card-body pt-0 pb-0">
                                <div class="table-responsive">
                                    <div id="gridContainer"></div>
                                </div>
                            </div>
                        </div>


                        <div class="tab-pane fade" id="attachment" role="tabpanel" aria-labelledby="group-tab">
                            <div class="row">
                                <div class="col-lg-8">

                                </div>


                                <div class="col-lg-4">
                                    <div class="card-body pt-0 pb-0">
                                        <div class="demo-container">
                                            <div id="fileuploader">
                                                <div class="widget-container">
                                                    <div id="file-uploader"></div>
                                                    <div class="content" id="selected-files">
                                                        <div>
                                                            @*<h4>Selected Files</h4>*@

                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>


                            </div>

                            <div class="row">
                                <div class="col-lg-12">
                                    <div id="gridImageContainer"></div>
                                </div>

                            </div>

                        </div>

                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-lg-8"></div>
            <div class="col-lg-4">
                <div class="form-group">
                    <label for="exampleFormControlSelect1">Total Claim: </label>
                    <input type="text" class="form-control frm-cstm" id="totalAmount" placeholder="Total Amount" value="0" readonly />
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-lg-8"></div>
            <div class="col-lg-4">
                <div class="form-group">
                    <label for="exampleFormControlSelect1">Advance Received: </label>
                    <input type="number" class="form-control frm-cstm" id="advanceReceived" placeholder="Advance Received" value="0" min="0"/>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-lg-8"></div>
            <div class="col-lg-4">
                <div class="form-group">
                    <label for="exampleFormControlSelect1">Receivable: </label>
                    <input type="text" class="form-control frm-cstm" id="receivable" placeholder="Receivable" value="0" readonly/>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-lg-12 text-right mt-3">
                <input type="button" value="Save" id="save" class="btn btn-secondary" />
                <input type="button" value="Submit" id="submit" class="btn btn-primary" />
                @{
                    TMSDeloitte.Models.UserSession sess = null;
                    if ((TMSDeloitte.Models.UserSession)HttpContext.Current.Session["TMSUserSession"] != null)
                    {
                        sess = (TMSDeloitte.Models.UserSession)HttpContext.Current.Session["TMSUserSession"];
                        if (sess.SessionUser.ISSUPER)
                        {
                            <button type="button" id="showLog" class="btn btn-success" data-toggle="modal" onclick='loadAuthLogData("/ClaimForm/GeClaimFormLog");' data-target="#myLogModal">Show Log</button>
                        }

                        var menu = sess.pagelist.Where(x => x.ID == (int)TMSDeloitte.Helper.Enums.FormsName.ClaimForm).FirstOrDefault();
                        if (menu != null)
                        {
                            <input type="hidden" id="AuthID" name="AuthID" value="@menu.Role">
                        }
                        else
                        {
                            <input type="hidden" id="AuthID" name="AuthID" value="-1">
                        }
                    }

                }


            </div>
        </div>


        <!-- [ Main Content ] end -->
    </div> <!-- [ Card Content ] end -->
</div>


<div id="myModal_Confirmation" class="modal fade" role="dialog">
    <div class="modal-dialog modal-lg">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                Confirmation
                <button type="button" class="close" data-dismiss="modal">×</button>

            </div>
            <div class="modal-body">
                Are you sure want to remove?
            </div>
            <div class="modal-footer">
                <button type="button" id="btnYes" _name="" class="btn btn-primary">Yes</button>
                <button type="button" class="btn btn-secondary" data-dismiss="modal">No</button>
            </div>
        </div>
    </div>
</div>

<div id="myModal_Find" class="modal fade" role="dialog">
    <div class="modal-dialog modal-lg">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">×</button>

            </div>
            <div class="modal-body">
                <div id="FindContainer"></div>
            </div>
            <div class="modal-footer">
                <button type="button" id="btnOk" class="btn btn-primary">Ok</button>
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
            </div>
        </div>
    </div>
</div>

<div id="myLogModal" class="modal fade" role="dialog">
    <div class="modal-dialog modal-lg">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                @*<h4 class="modal-title">Log</h4>*@
                <button type="button" class="close" data-dismiss="modal">×</button>
            </div>

            <div class="modal-body">
                <h8>Header Log</h8>
                <div id="HeaderLogContainer"></div>
            </div>
            <div class="modal-body">
                <h8>Detail Log</h8>
                <div id="DetailLogContainer"></div>
            </div>
        </div>
    </div>
</div>


<script type="text/javascript">

        var Table = [];
        var serialNo = 0;
        var year = "";
        var DocNum = "";
        var DocId = 0;
        var DocIsDeleted = false;
        var allDocList = [];
        var index = 1;
        var EmpCode = "0";
        var HcmOneID = 0;
        var assignmentList = [];
        var typeOfClaimList = [];
        var statusList = [];
        var gridInstance;
        var popupFindInstance;
        var fileUploader;
        var isDateRangeError = false;
        var ImageTable = [];
        var ImageFolderName = "";

        function GetDocList() {
            var url = "/ClaimForm/GetDocList";
            $.ajax({
                url: url,
                method: "GET",
                data: {},
                async: false
            }).done(function (data) {

                allDocList = data.docList;
                statusList = data.statusList;
                ImageFolderName = data.ImageFolderName;
                typeOfClaimList = data.TypeOfClaimList;
                assignmentList = JSON.parse(data.AssignmentList.Data);
                assignmentList = assignmentList.filter(x=>x.ID != 200001);
                $("#employeeCode").val(data.EmpCode);
                $("#employeeName").val(data.EmpFullName);
                $("#department").val(data.Department);
                $("#designation").val(data.Designation);

                $("#EmpID").val(data.EmpID);
                $("#IsSuper").val(data.IsSuper);

            }).fail(function (data) {
            });
        }

        function GenerateFileUploader()
        {
           
            var url = "/ClaimForm/UploadImages?ImageFolderName="+ ImageFolderName;
                 $("#file-uploader").dxFileUploader({
                multiple: true,
                accept: "*",
                value: [],
                uploadMode: "instantly",
                uploadUrl:url, //"https://js.devexpress.com/Demos/NetCore/FileUploader/Upload",
                onValueChanged: function (e) {

                    $('.dx-fileuploader-files-container').css('display', 'none');
                    //var files = e.value;
                    //if (files.length > 0) {
                    //    var sno = 0;
                    //    $("#selected-files .selected-item").remove();
                    //    $.each(files, function (i, file) {

                    //        var dataExist = ImageTable.filter(x=>x.Name == file.name);
                    //        if (dataExist.length == 0)
                    //        {
                    //            sno = sno + 1;
                    //            var Details = {
                    //                SNo: sno,
                    //                Name: file.name
                    //            };

                    //            ImageTable.push(Details);
                    //        }


                   
                    //    });
                   

                    //    $('.dx-fileuploader-files-container').css('display', 'none');

                    //    GenerateImageGrid(ImageTable);
                    //}
                    //else
                    //    $("#selected-files").hide();

                   
                },
                onUploaded: function (e) {

                     var fileName = e.file.name;
                     var filePath = JSON.parse(e.request.responseText);
                     var sno = ImageTable.length;
                     $("#selected-files .selected-item").remove();
                     var dataExist = ImageTable.filter(x=>x.Name == fileName);
                     if (dataExist.length == 0) {
                         sno = sno + 1;
                         var Details = {
                             SNo: sno,
                             Name: fileName,
                             ImagePath: filePath.url
                         };

                         ImageTable.push(Details);
                     }
                     GenerateImageGrid(ImageTable);

                 },
            }).dxFileUploader("instance");
        }

        function GenerateDateBox()
        {
            var now = new Date();

            $("#docDate").dxDateBox({
                type: "date",
                pickerType: "calendar",
                value: now,
                displayFormat: "dd/MM/yyyy",
                onValueChanged: function (data) {
                    // $("#toDate").dxDateBox({min: data.value});

                }
            });


            $('.dx-texteditor-input').attr('readonly', true);
        }

        function GetUserInfoByEmpCode(empCode) {
            loadPanel.show();
            var url = "/ClaimForm/GetUserInfoByEmpCode";
            $.ajax({
                url: url,
                method: "GET",
                async: false,
                data: { empCode: empCode },
            }).done(function (response) {
                $("#employeeName").val("");

                if (response.Success) {
                    $("#employeeName").val(response.UserInfo.FULLNAME);
                }


                loadPanel.hide();

            }).fail(function (data) {
                loadPanel.hide();
            });
        }

        function GetLogData(url) {
            loadData(url+"?docNum=" + DocNum);
        }

        function GenerateGrid(JSON_Response) {
            gridInstance= $("#gridContainer").dxDataGrid({
                dataSource: JSON_Response,
                keyExpr: "KEY",
                columnAutoWidth: true,
                allowColumnResizing: true,
                allowColumnReordering: true,
                showBorders: true,
                showScrollbar: 'always',
                filterRow: { visible: true },
                editing: {
                    mode: "cell",
                    allowUpdating: true
                },
                scrolling: {
                    mode: "horizontal",
                    showScrollbar: 'always'
                },
                paging: { pageSize: 10 },
                editing: {
                    mode: "batch",
                    allowUpdating: true,
                    allowDeleting: true,
                    allowAdding: true
                },
                columns: [
                    {
                        dataField: "ID",
                        allowEditing: false,
                        visible:false,
                    },
                    {
                        dataField: "HeaderID",
                        allowEditing: false,
                        visible: false,
                    },
                    {
                        dataField: "SNo",
                        caption: "S.No",
                        dataType: "number",
                        allowEditing: false,
                        width:"45"
                    },
                     {
                         dataField: "_Date",
                         allowEditing: false,
                         visible: false,
                     },
                    {
                        dataField: "Date",
                        caption: "Work Date",
                        validationRules: [{ type: "required" }],
                        dataType: 'date',
                        format: 'dd/MM/yyyy',
                        width: "90"
                    },
                     {
                         dataField: "AssignmentID",
                         caption: "Assignment",
                         validationRules: [{ type: "required" }],
                         setCellValue: function (rowData, value) {
                             rowData.AssignmentID = value;
                             rowData.TaskID = null;
                         },
                         lookup: {
                             dataSource: assignmentList,
                             valueExpr: "ID",
                             displayExpr: "Name"
                         }
                     },

                      {
                          dataField: "ClaimID",
                          caption: "Type Of Claim",
                          validationRules: [{ type: "required" }],
                          setCellValue: function (rowData, value) {
                              rowData.ClaimID = value;
                              //rowData.TaskID = null;
                          },
                          lookup: {
                              dataSource: typeOfClaimList,
                              valueExpr: "ID",
                              displayExpr: "TYPEOFCLAIM"
                          }
                      },

                      {
                          dataField: "Description",
                          caption: "Description",
                          allowEditing: true,
                      },
                     
                      {
                          dataField: "TotalAmount",
                          caption: "Total Amount",
                          dataType: "number",
                          width: "98",

                      },
                      {
                          dataField: "IsDeleted",
                          allowEditing: true,
                          allowEditing: false,
                          visible: false,
                          dataType: 'boolean',
                      },
                ],
                onCellPrepared: function (options) {
                    //options.cellElement.find('.dx-datebox').dxDateBox("option", "min", new Date(startDate));
                    //options.cellElement.find('.dx-datebox').dxDateBox("option", "max", new Date(endDate));
                },
                onInitNewRow: function (e) {
                    e.data.ID = 0;
                    serialNo = serialNo + 1;
                    e.data.SNo = serialNo;
                    e.data.TotalAmount = 0;
                    e.data.IsDeleted = false;

                },
                onRowPrepared: function (e) {


                } ,
                onEditorPreparing: function (e) {

                    if (e.parentType == "dataRow" && e.dataField === "TotalAmount") {
                        var valueChangedHandler = e.editorOptions.onValueChanged;
                        e.editorOptions.onValueChanged = function (args) {
                            valueChangedHandler(args); // default logic
                            setTimeout(() => {

                                var totalAmount = 0;
                                var advanceReceived = 0;
                                var receivable = 0;
                                serialNo = 0;

                                e.component.getVisibleRows().forEach(row => {

                                    if (row.rowType === "data") {
                                        if ( row.data.TotalAmount != undefined)
                                        {
                                            serialNo = serialNo + 1;
                                            totalAmount = totalAmount + row.data.TotalAmount;
                                        }
                                    }
                                });

                                advanceReceived = $("#advanceReceived").val();
                                $("#totalAmount").val(totalAmount);
                                $("#receivable").val(totalAmount);

                                receivable = totalAmount - advanceReceived;
                                if (receivable >= 0)
                                    $("#receivable").val(receivable);
                                else {
                                    $("#advanceReceived").val(totalAmount);
                                    $("#receivable").val(0);
                                }

                                $('.dx-link-delete').click(DeleteGridRow);

                                SaveGridAndCalculate();
                            });
                        };
                    }
                },
                onEditorPrepared: function (e) {



                },
                onEditingStart: function (e) {
                },
                onRowInserting: function (e) {

                },
                onRowInserted: function (e) {

                    var dataExist = Table.filter(x=>x.KEY == e.data.KEY);
                    if (dataExist.length == 0)
                    {

                        var Wdate = e.data.Date;
                        var Fday = Wdate.getDate();       // yields date
                        var Fmonth = Wdate.getMonth() + 1;    // yields month (add one as '.getMonth()' is zero indexed)
                        var Fyear = Wdate.getFullYear();  // yields year
                        var Fhour = Wdate.getHours();     // yields hours
                        var Fminute = Wdate.getMinutes(); // yields minutes
                        var Fsecond = Wdate.getSeconds(); // yields seconds
                        var _Date = Fyear + "-" + Fmonth + "-" + Fday;



                            var Details = {
                                ID: e.data.ID,
                                HeaderID: e.data.HeaderID,
                                SNO: e.data.SNo,
                                KEY: e.data.KEY,
                                _Date: _Date,
                                Date: e.data.Date,
                                AssignmentID: e.data.AssignmentID,
                                ClaimID:e.data.ClaimID,
                                Description: e.data.Description,
                                TotalAmount: e.data.TotalAmount,
                                IsDeleted: false
                            };

                        Table.push(Details);
                        //SaveGridAndCalculate();
                        serialNo = Table.length;
                    }
                    else
                    {
                        $.each(Table, function (index, val) {
                            var Wdate = new Date(val.Date);
                            var Fday = Wdate.getDate();       // yields date
                            var Fmonth = Wdate.getMonth() + 1;    // yields month (add one as '.getMonth()' is zero indexed)
                            var Fyear = Wdate.getFullYear();  // yields year
                            var Fhour = Wdate.getHours();     // yields hours
                            var Fminute = Wdate.getMinutes(); // yields minutes
                            var Fsecond = Wdate.getSeconds(); // yields seconds
                            var _Date = Fyear + "-" + Fmonth + "-" + Fday;
                            if (val.KEY == e.data.KEY) {
                                val._Date = _Date;
                                val.Date = e.data.Date;
                                val.AssignmentID = e.data.AssignmentID;
                                val.ClaimID = e.data.ClaimID,
                                val.Description = e.data.Description;
                                val.TotalAmount= e.data.TotalAmount,
                                val.OnSite = e.data.OnSite;
                            }

                        });
                    }


                    //Calculate();

                },
                onRowUpdating: function (e) {
                },
                onRowUpdated: function (e) {
                    debugger;
                    var Wdate = new Date(e.data.Date);
                    var Fday = Wdate.getDate();       // yields date
                    var Fmonth = Wdate.getMonth() + 1;    // yields month (add one as '.getMonth()' is zero indexed)
                    var Fyear = Wdate.getFullYear();  // yields year
                    var Fhour = Wdate.getHours();     // yields hours
                    var Fminute = Wdate.getMinutes(); // yields minutes
                    var Fsecond = Wdate.getSeconds(); // yields seconds
                    var _Date = Fyear + "-" + Fmonth + "-" + Fday;


                    $.each(Table, function (index, val) {
                        if (val.KEY == e.data.KEY) {
                            val._Date = _Date;
                            val.Date = e.data.Date;
                            val.AssignmentID = e.data.AssignmentID;
                            val.ClaimID = e.data.ClaimID,
                            val.Description= e.data.Description;
                            val.TotalAmount= e.data.TotalAmount
                        }

                    });

                    //SaveGridAndCalculate();

                    serialNo = Table.length;

                    //Calculate();
                },
                onRowRemoving: function (e) {
                    //SaveGridAndCalculate();
                    Calculate();
                },
                onRowRemoved: function (e) {
                    $.each(Table, function (index, val) {
                        if (val.KEY == e.data.KEY) {
                            val.IsDeleted = true;
                        }
                    });

                    //SaveGridAndCalculate();
                    Calculate();
                },

            });

            var gridContainer = $("#gridContainer").dxDataGrid("instance");
            gridContainer.columnOption('SNo', 'sortOrder', 'desc');
        }

        function GenerateImageGrid(dataSource) {
            $("#gridImageContainer").dxDataGrid({
                dataSource: dataSource,
                // keyExpr: "KEY",
                columnAutoWidth: true,
                allowColumnResizing: true,
                allowColumnReordering: true,
                showBorders: true,
                showScrollbar: 'always',
                filterRow: { visible: true },
                //editing: {
                //    mode: "cell",
                //    allowUpdating: true
                //},
                scrolling: {
                    mode: "horizontal",
                    showScrollbar: 'always'
                },
                paging: { pageSize: 20 },
                //editing: {
                //    mode: "batch",
                //    allowUpdating: true,
                //    allowDeleting: true,
                //    allowAdding: true
                //},
                columns: [
                    {
                        dataField: "SNo",
                        caption: "S.No",
                        dataType: "number"
                    },
                    {
                        dataField: "Name",
                        caption: "Name",
                    },

                    {
                        dataField: "ImagePath",
                        alignment: "left",
                        caption: "View",
                        cellTemplate: function (container, options) {

                            $("<div>")
                               .append($("<a class='btn btn_icn btnViewImage' _imagepath=" + options.data.ImagePath + " " + " title='View'><em class='fa fa-eye'></em></a>"))
                               .appendTo(container);
                        }
                    },

                      {
                          dataField: "Name",
                          alignment: "left",
                          caption: "Remove",
                          cellTemplate: function (container, options) {
                              $("<div>")
                                 .append($("<a class='btn btn_icn btnRemoveDocument' _name=" + options.data.ImagePath + " title='Cencel'><em class='fa fa-times'></em></a>"))
                                 .appendTo(container);
                          }
                      },


                ],
                onEditorPreparing: function (e) {

                },
                onEditingStart: function (e) {
                },
                onInitNewRow: function (e) {



                },
                onRowInserting: function (e) {

                },
                onRowInserted: function (e) {

                },
                onRowUpdating: function (e) {
                },
                onRowUpdated: function (e) {

                },
                onRowRemoving: function (e) {
                },
                onRowRemoved: function (e) {

                }
            });

        }

        function SaveGridAndCalculate() {

            debugger;
            var gridContainer = $("#gridContainer").dxDataGrid("instance");

            gridContainer.getController('validating').validate(true).done(function (result) {
                if (result) {
                    gridContainer.saveEditData();
                    //Calculate();
                }

            });

        }


        function Calculate()
        {
          

           
            var totalAmount = 0;
            var advanceReceived = 0;
            var receivable = 0;
            serialNo = 0;

            $.each(Table, function (index, val) {

                if (val.IsDeleted == false) {
                    serialNo = serialNo + 1;
                    totalAmount = totalAmount + val.TotalAmount ;

                }

            });

            $("#totalAmount").val(totalAmount);
            advanceReceived = $("#advanceReceived").val();

            receivable = totalAmount - advanceReceived;
            if (receivable >= 0)
                $("#receivable").val(receivable);
            else
            {
                $("#advanceReceived").val(totalAmount);
                $("#receivable").val(0);
            }
                

        }

        function SaveAndSubmitCall(status) {
            var isSuccess = true;
            var message = '';

            var ClaimFormObj = {
                ID: DocId,
                Status: status,
                DocNum: $("#docNumber").val(),
                EmpID: $("#EmpID").val(),
                EmpCode: $("#EmpCode").val(),
                TotalAmount: $("#totalAmount").val(),
                ImageFolder: ImageFolderName,
            };
            if (ClaimFormObj.EmpID == "") {
                isSuccess = false;
                message = 'Please select employee, ';
            }
            if (ClaimFormObj.Year == "") {
                isSuccess = false;
                message = message + 'Please select year, ';
            }
            if (ClaimFormObj.Month == "") {
                isSuccess = false;
                message = message + 'Please select month';
            }


            if (isSuccess) {
                loadPanel.show();
                var gridContainer = $("#gridContainer").dxDataGrid("instance");
                gridContainer.getController('validating').validate(true).done(function (result) {
                    if (result) {
                        gridContainer.saveEditData();
                        setTimeout(function () { SaveAndSubmit(status); }, 2000);
                    }
                    else {
                        loadPanel.hide();
                        AlertToast('error', "Please add require data in table!");
                    }

                });


            }
            else {
                AlertToast('error', message);
            }
        }

        function SaveAndSubmit(status) {
            var notSaved = $('#gridContainer').dxDataGrid('instance').getController('editing').hasChanges();
            if (notSaved) {
                setTimeout(function () { SaveAndSubmit(status); }, 2000);
            }
            else {

                //gridInstance= $("#gridContainer").dxDataGrid('instance');
                //gridInstance.getDataSource().store().load().done((res) => {
                //    Table = [];
                //    Table = res;
                //});
                if (Table.length == 0) {
                    loadPanel.hide();
                    AlertToast('error', "Please add record!");
                    return;
                }


                var Fdate = $("#docDate").dxDateBox("instance").option('value');
                var Fday = Fdate.getDate();       // yields date
                var Fmonth = Fdate.getMonth() + 1;    // yields month (add one as '.getMonth()' is zero indexed)
                var Fyear = Fdate.getFullYear();  // yields year
                var Fhour = Fdate.getHours();     // yields hours
                var Fminute = Fdate.getMinutes(); // yields minutes
                var Fsecond = Fdate.getSeconds(); // yields seconds
                var docdate = Fyear + "-" + Fmonth + "-" + Fday;

                var ClaimFormObj = {
                    ID: DocId,
                    Status: status,
                    DocNum: $("#docNumber").val(),
                    EmpID: $("#EmpID").val(),
                    EmpCode: $("#employeeCode").val(),
                    DocDate: docdate,
                    TotalAmount: $("#totalAmount").val(),
                    AdvanceReceived: $("#advanceReceived").val(),
                    Receivable: $("#receivable").val(),
                    ImageFolder: ImageFolderName,
                    Attachements: ImageTable,
                    Detail: Table
                };

                var jsonData = JSON.stringify({
                    obj : ClaimFormObj
                });
                var url = "/ClaimForm/AddUpdateClaimForm";
                $.ajax({
                    type: "POST",
                    url: url,
                    contentType: 'application/json',
                    data: jsonData,
                    dataType: "json",
                    async: false,
                    success: function (response) {
                        loadPanel.hide();
                        if (response.Success) {
                            AlertToast('success', response.Message);
                            setTimeout(function () {
                                window.location.reload();
                            }, 5000);
                        }
                        else {
                            AlertToast('error', response.Message);
                        }
                    },
                    error: function (response) {
                        console.log(response);
                        loadPanel.hide();
                    },
                    failure: function (response) {
                        console.log(response);
                        loadPanel.hide();
                    }

                });

            }

        }

        function GeneratePopupFindGrid() {

            //var empid = $("#EmpID").val();
            //if (empid != null && empid != 0) { }
            loadPanel.show();
            var ur = "/ClaimForm/GetAllDocumentsByEmpID";
            $.ajax({
                url: ur,
                method: "GET",
                data: {},
                async: false,
            }).done(function (data) {
                var JSON_Response = JSON.parse(data.response.Data);
                console.log(JSON_Response);
                popupFindInstance = $("#FindContainer").dxDataGrid({
                    dataSource: JSON_Response,
                    keyExpr: "DocNum",
                    paging: { pageSize: 10 },
                    columnAutoWidth: true,
                    pager: { showInfo: true },
                    allowColumnResizing: true,
                    allowColumnReordering: true,
                    showBorders: true,
                    showScrollbar: 'always',
                    filterRow: { visible: true },
                    scrolling: {
                        mode: "horizontal",
                        showScrollbar: 'always'
                    },
                    selection: {
                        mode: "single"
                    },
                    columns: [
                        {
                            dataField: "ID",
                            caption: "ID",
                            visible: false
                        },
                        {
                            dataField: "DocNum",
                            caption: "Document #"
                        },
                        {
                            dataField: "DocDate",
                            caption: "Doc Date"
                        },
                        {
                            dataField: "TotalAmount",
                            caption: "Total Amount"
                        },
                        {
                            dataField: "AdvanceReceived",
                            caption: "Advance Received"
                        },
                        {
                            dataField: "Receivable",
                            caption: "Receivable"
                        },
                        {
                            dataField: "Status",
                            caption: "Status",
                            lookup: {
                                dataSource: statusList,
                                valueExpr: "ID",
                                displayExpr: "Name"
                            }
                        },
                          
                          
                        {
                            dataField: "CreatedDate",
                            caption: "Created Date"
                        }
                    ]
                }).dxDataGrid("instance");

                $("#select-all-mode").dxSelectBox({
                    dataSource: ["allPages", "page"],
                    value: "allPages",
                    onValueChanged: function (data) {
                        dataGrid.option("selection.selectAllMode", data.value);
                    }
                });

                $("#show-checkboxes-mode").dxSelectBox({
                    dataSource: ["none", "onClick", "onLongTap", "always"],
                    value: "onClick",
                    onValueChanged: function (data) {
                        dataGrid.option("selection.showCheckBoxesMode", data.value);
                        $("#select-all-mode").dxSelectBox("instance").option("disabled", data.value === "none");
                    }
                });

                popupFindInstance.clearSelection();

                loadPanel.hide();

            }).fail(function (data) {
                console.log(data);
                loadPanel.hide();
            });
        }

        function ValidateAuthorization() {
            var id = $("#AuthID").val();
            var isSuccess = false;

            if (id == -1)
                isSuccess = true;
            if (id == 2)
                isSuccess = true;

            if (isSuccess) {
                $("#save").remove();
                $("#submit").remove();
                $("#gridContainer").dxDataGrid({ disabled: true });
            }
        }

        function loadAuthLogData(url) {

            if (DocId != 0) {
                url = url + "?docid=" + DocId;

                $.ajax({
                    url: url,
                    method: "GET",
                    data: {},
                    async: false,
                }).done(function (data) {
                    $("#HeaderLogContainer").dxDataGrid({
                        dataSource: JSON.parse(data.Header.Data),
                        paging: { pageSize: 10 },
                        columnAutoWidth: true,
                        pager: { showInfo: true },
                        allowColumnResizing: true,
                        allowColumnReordering: true,
                        showBorders: true,
                        showScrollbar: 'always',
                        filterRow: { visible: true },
                        scrolling: {
                            mode: "horizontal",
                            showScrollbar: 'always'
                        },
                    });
                    $("#DetailLogContainer").dxDataGrid({
                        dataSource:JSON.parse(data.Detail.Data) ,
                        paging: { pageSize: 10 },
                        columnAutoWidth: true,
                        pager: { showInfo: true },
                        allowColumnResizing: true,
                        allowColumnReordering: true,
                        showBorders: true,
                        showScrollbar: 'always',
                        filterRow: { visible: true },
                        scrolling: {
                            mode: "horizontal",
                            showScrollbar: 'always'
                        },
                    });

                }).fail(function (data) {
                    console.log(data);
                });
            }



        }

        function GetClaimFormByDocNum(docNum) {
            loadPanel.show();
            Table = [];
            serialNo = 0;
            EmpCode = "0";
            HcmOneID = 0;

            var empid;
            if ($('#isView').val() == "True")
                empid = $('#viewEmpID').val();
            else
                empid = $('#EmpID').val()

            var url = "/ClaimForm/GetClaimFormByDocNum?docNum=" + docNum + "&EmpID=" + empid + "&isView=" + $('#isView').val();
            $.ajax({
                url: url,
                method: "GET",
                data: {},
                async: false,
            }).done(function (data) {
                loadPanel.hide();
                $("#docNumber").val("");

                var JSON_Response = JSON.parse(data.response.Data);
                console.log(JSON_Response);
                VlidateDetails(JSON_Response);


            }).fail(function (data) {
                loadPanel.hide();
                console.log(data);
            });
        }


        function VlidateDetails(JSON_Response)
        {

            $("#docNumber").val("");



            DocId = JSON_Response.ID;
            DocNum = JSON_Response.DocNum;

            $("#totalAmount").val(JSON_Response.TotalAmount);
            $("#advanceReceived").val(JSON_Response.AdvanceReceived);
            $("#receivable").val(JSON_Response.Receivable);
            $("#docNumber").val(JSON_Response.DocNum);
            $("#docStatus").val(JSON_Response.StatusName);

            $.each(JSON_Response.Detail, function (index, val) {

                var Details = {
                    ID: val.ID,
                    HeaderID: val.HeaderID,
                    SNo: val.SNo,
                    KEY: val.KEY,
                    _Date: val._Date,
                    Date: new Date(val._Date),
                    AssignmentID: val.AssignmentID,
                    ClaimID: val.ClaimID,
                    Description: val.Description,
                    TotalAmount: val.TotalAmount,
                    IsDeleted: false
                };
                Table.push(Details);
                //sno = sno - 1;
            });

            GenerateGrid(Table);

            if (JSON_Response._Attachements != null) {
                if (JSON_Response._Attachements.length > 0) {

                    var array = JSON_Response._Attachements.split(',');

                    var newImageTable = [];
                    var sno = 0;
                    $.each(array, function (index, val) {
                        sno = sno + 1;
                        var nameDetailArray = val.split('_');
                        var Details = {
                            SNo: sno,
                            Name: val,
                            ImagePath: JSON_Response._AttachementsURL + val
                        };
                        newImageTable.push(Details);
                    });

                    ImageTable = newImageTable;
                    GenerateImageGrid(ImageTable);
                }
            }

            serialNo = Table.length;
          
            $('#docNumber').prop("disabled", true);

            if (JSON_Response.Status == 2 || JSON_Response.Status == 3 || JSON_Response.Status == 4 || $('#isView').val() == "True") {
                $("#save").hide();
                $("#submit").hide();
                if ($('#isView').val() == "True")
                {
                    $("#showLog").hide();
                    $("#topButton").hide();
                    
                }
                if (JSON_Response.Status == 4)
                {
                    $("#divUpdateable").css({ display: "block" });
                }

                $("#gridContainer").dxDataGrid({
                    editing: {
                        mode: "batch",
                        allowUpdating: false,
                        allowDeleting: false,
                        allowAdding: false
                    },
                });
            }

            Calculate();

            ImageFolderName = JSON_Response.ImageFolder;
            GenerateFileUploader();
        }


        function DeleteGridRow(event) {
            SaveGridAndCalculate();
            return false;
        }

        $('document').ready(function () {


            GetDocList();
            //GetData();
            GenerateDateBox();
            ValidateAuthorization();
            GenerateFileUploader();
            GenerateGrid([]);

            if ($('#isView').val() == "True")
                GetClaimFormByDocNum($('#viewDocNum').val());

            $('#save').click(function () {
                SaveAndSubmitCall(1);
            });
            $('#submit').click(function () {
                SaveAndSubmitCall(2);
            });
            $('#new').click(function () {
                //DocNum = "";
                //DocId = 0;
                //Table = [];
                //$("#docNumber").val("");
                //$('#docNumber').prop("disabled", true);
                //serialNo = 0;

                window.location.reload();
            });
            $('#find').click(function () {
                $("#docNumber").val("");
                $('#docNumber').prop("disabled", false);
            });
            $('#first').click(function () {
                $('#docNumber').prop("disabled", true);
                index = 0;
                GetClaimFormByDocNum(allDocList[index]);
            });
            $('#last').click(function () {
                $('#docNumber').prop("disabled", true);
                index = allDocList.length - 1;
                GetClaimFormByDocNum(allDocList[index]);
            });
            $('#previous').click(function () {
                $('#docNumber').prop("disabled", true);
                if (index != 0)
                    index = index - 1;
                GetClaimFormByDocNum(allDocList[index]);
            });
            $('#next').click(function () {
                $('#docNumber').prop("disabled", true);
                if (index < allDocList.length-1)
                    index = index + 1;

                GetClaimFormByDocNum(allDocList[index]);
            });
            $('#btnOk').click(function () {
                var selectedRow = popupFindInstance.getSelectedRowsData();
                if (selectedRow.length > 0)
                {
                    GetClaimFormByDocNum(selectedRow[0].DocNum);
                }
                $('#myModal_Find').modal('hide');
                $('body').removeClass('modal-open');
                $('.modal-backdrop').remove();

            });
            $("#docNumber").blur(function () {

                GetClaimFormByDocNum($("#docNumber").val());

            });

            $('#btnYes').click(function () {

                $("#myModal_Confirmation").modal('hide');

                loadPanel.show();

               
                var name = $(this).attr('_name');

                var url = "/ClaimForm/RemoveImage";
                $.ajax({
                    url: url,
                    method: "POST",
                    cache: false,
                    data: {
                        ImageFolderName: ImageFolderName,
                        fileName:name
                    },
                    async: false,
                    success: function (response) {
                        loadPanel.hide();
                        if (response.Success) {
                            var newImageTable = [];
                            var newFileValues = [];
                            var sno = 0;
                            $.each(ImageTable, function (index, val) {
                                if (val.Name != name) {
                                    sno = sno + 1;
                                    var Details = {
                                        SNo: sno,
                                        Name: val.Name
                                    };
                                    newImageTable.push(Details);
                                }
                            });
                            $.each($("#file-uploader").dxFileUploader("instance").option('value'), function (index, val) {
                                if (val.name != name) {
                                    newFileValues.push(val);
                                }
                            });

                            $("#file-uploader").dxFileUploader({value:newFileValues});
                            ImageTable = [];
                            ImageTable = newImageTable;
                            GenerateImageGrid(ImageTable);
                            AlertToast('success', response.Message);
                            //setTimeout(function () {
                            //    window.location.reload();
                            //}, 5000);
                        }
                        else {
                            AlertToast('error', response.Message);
                        }
                    },
                    error: function (response) {
                        console.log(response);
                        loadPanel.hide();
                    },
                    failure: function (response) {
                        console.log(response);
                        loadPanel.hide();
                    }

                });


            });

            $('#Updateable').click(function () {
                var Updateable = $('#Updateable').is(":checked");

                if (Updateable == true) {

                    $("#submit").show();
                    $("#save").show();
                }
                else {
                    $("#submit").hide();
                    $("#save").hide();
                }
            });

        });

        $('body').on('click', '.btnRemoveDocument', function () {
            var name = $(this).attr('_name');

            $("#myModal_Confirmation").modal('show');
            $('#btnYes').attr('_name', name);
        });

        $('body').on('click', '.btnViewImage', function () {
            var imagepath = $(this).attr('_imagepath');

            window.open(
            imagepath,
            '_blank'
            );
        });

        jQuery('#advanceReceived').on('input propertychange paste', function () {
                Calculate();
        })
      
</script>

