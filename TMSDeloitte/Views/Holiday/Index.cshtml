
@{
    ViewBag.Title = "Holiday Setup";
}
<div class="pcoded-content">
    <div class="card p-20" style="min-height: 495px;">
        <!-- [ breadcrumb ] start -->
        <div class="page-header">
            <div class="page-block">
                <div class="row align-items-center">
                    <div class="col-md-6">
                        <div class="page-header-title">
                            <h4> Holiday Setup </h4>
                        </div>
                    </div>
                    <div class="col-md-6 text-md-right">
                        <ul class="breadcrumb">
                            <li class="breadcrumb-item"><a href="#"> Administration </a></li>
                            <li class="breadcrumb-item"> Setup </li>
                            <li class="breadcrumb-item"> Holiday Setup </li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
        <!-- [ breadcrumb ] end -->
        <!-- [ Main Content ] start -->
        <div class="row">
            <div class="col-lg-12">
                <div class="form-group">
                    <div class="text-right">
                        <button id="new" class="plus-icon"> <i class="fas fa-plus-square"></i> </button>
                        <button id="find" class="find-icon" data-toggle="modal" onclick='GeneratePopupFindGrid();' data-target="#myModal_Find"> <i class="fas fa-search"></i> </button>
                        <button id="first" class="step-backword-icon"> <i class="fas fa-step-backward"></i></button>
                        <button id="previous" class="backword-icon"> <i class="fas fa-backward"></i> </button>
                        <button id="next" class="forward-icon"> <i class="fas fa-forward"></i> </button>
                        <button id="last" class="step-forward-icon"> <i class="fas fa-step-forward"></i></button>
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-lg-6">
                <div class="form-group">
                    <label for="exampleFormControlSelect1"> Year </label>
                    <div id="yearDropDown" class="form-control frm-cstm"></div>
                </div>
            </div>

            <div class="col-lg-6">
                <div class="form-group">
                    <label for="typeCost"> Document Number: </label>
                    <input type="text" class="form-control frm-cstm" id="docNumber" placeholder="DocNum" disabled="disabled">
                </div>
            </div>

        </div>
        <div class="row">
            <div class="col-lg-6">
                <div class="form-group">
                    <label for="exampleFormControlSelect1"> From Date </label>
                    <div id="fromDate"></div>
                </div>
            </div>

            <div class="col-lg-6">
                <div class="form-group">
                    <label for="typeCost">To Date: </label>
                    <div id="toDate"></div>
                </div>
            </div>

        </div>


        <div class="row">
            <div class="col-lg-12">
                <div class="table-responsive">
                    <div id="gridContainer"></div>
                </div>
            </div>
        </div>


        <div class="row">
            <div class="col-lg-12 text-right mt-3">
                <input type="button" value="Add & Update" id="add_update" class="btn btn-primary" />
                @{
                    TMSDeloitte.Models.UserSession sess = null;
                    if ((TMSDeloitte.Models.UserSession)HttpContext.Current.Session["TMSUserSession"] != null)
                    {
                        sess = (TMSDeloitte.Models.UserSession)HttpContext.Current.Session["TMSUserSession"];
                        if (sess.SessionUser.ISSUPER)
                        {
                            <button type="button" class="btn btn-success" data-toggle="modal" onclick='loadAuthLogData("/Holiday/GetHolidaySetupLog");' data-target="#myLogModal">Show Log</button>
                        }

                        var menu = sess.pagelist.Where(x => x.ID == (int)TMSDeloitte.Helper.Enums.FormsName.HoliDaySetup).FirstOrDefault();
                        if (menu != null)
                        {
                            <input type="hidden" id="AuthID" name="AuthID" value="@menu.Role">
                        }
                        else
                        {
                            <input type="hidden" id="AuthID" name="AuthID" value="-1">
                        }
                    }

                }


            </div>
        </div>

        <!-- [ Main Content ] end -->
    </div> <!-- [ Card Content ] end -->
</div>


<div id="myModal_Find" class="modal fade" role="dialog">
    <div class="modal-dialog modal-lg">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">×</button>

            </div>
            <div class="modal-body">
                <div id="FindContainer"></div>
            </div>
            <div class="modal-footer">
                <button type="button" id="btnOk" class="btn btn-primary">Ok</button>
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
            </div>
        </div>
    </div>
</div>

<div id="myLogModal" class="modal fade" role="dialog">
    <div class="modal-dialog modal-lg">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                @*<h4 class="modal-title">Log</h4>*@
                <button type="button" class="close" data-dismiss="modal">×</button>
            </div>

            <div class="modal-body">
                <h8>Header Log</h8>
                <div id="HeaderLogContainer"></div>
            </div>
            <div class="modal-body">
                <h8>Detail Log</h8>
                <div id="DetailLogContainer"></div>
            </div>
        </div>
    </div>
</div>


<script type="text/javascript">

        var Table = [];
        var serialNo = 0;
        var DocNum = "";
        var DocId = 0;
        var DocIsDeleted = false;
        var allDocList = [];
        var index = 1;
        var popupFindInstance;
        var allFunctionList;
        var allDesignationList;
        var AllDocumentList = [];
        var isDateRangeError = false;
        var startDate="";
        var endDate = "";

        function GenerateYearDropDown() {
            var min = new Date().getFullYear();
            var min = min - 1;
            var max = min + 5;
            var yearList = [];
            var year = {};
            var val = 0;

            for (var i = min; i <= max; i++) {

                var dataExist = AllDocumentList.filter(x=>x.Year == i);
                if (dataExist.length > 0)
                    max = max + 1;
                else {
                    if (val == 0) {
                        val = i;
                    }

                }

                year = { value: i };
                yearList.push(year);



            }

            $("#yearDropDown").dxSelectBox({
                //value: val,
                cacheEnabled: false,
                items: yearList,
                displayExpr: "value",
                valueExpr: "value",
                placeholder: "Select Year...",
                cssclass: "form-control frm-cstm",
                //searchEnabled: true,
                readonly: false,
                onValueChanged: function (data) {
                    startDate = new Date(data.value + "-01-1");
                    endDate = new Date(data.value + "-12-31");
                    GenerateGrid([]);
                    GenerateDateBox();
                    serialNo = 0;
                    Table = [];
                    $("#docNumber").val("");
                    DocId = 0;
                    DocNum = "";
                }
            });

            $("#yearDropDown").dxSelectBox({ value: val});

        }

        function GenerateDateBox()
        {
            //var now = new Date();
            $("#fromDate").dxDateBox({
                type: "date",
                pickerType: "calendar",
                value: startDate,
                min: startDate,
                max: endDate,
                displayFormat: "dd/MM/yyyy",
                onValueChanged: function (data) {
                    $("#toDate").dxDateBox({ min: data.value });
                    startDate = data.value;
                    if (DocId == 0) {
                        GenerateGrid([]);
                        serialNo = 0;
                        Table = [];
                    }

                }
            });

            $("#toDate").dxDateBox({
                type: "date",
                pickerType: "calendar",
                value: endDate,
                min: startDate,
                max: endDate,
                displayFormat: "dd/MM/yyyy",
                onValueChanged: function (data) {
                    $("#fromDate").dxDateBox({ max: data.value });
                    endDate = data.value;
                    if (DocId == 0) {
                        GenerateGrid([]);
                        serialNo = 0;
                        Table = [];
                    }
                }
            });
            $('.dx-texteditor-input').attr('readonly', true);
        }

        function GetLogData(url) {
            loadData(url+"?docNum=" + DocNum);
        }

        function GetForMatedDate(Wdate) {
            var Fday = ("0" + (Wdate.getDate())).slice(-2);
            var Fmonth = ("0" + (Wdate.getMonth() + 1)).slice(-2);
            var Fyear = Wdate.getFullYear();
            var Fhour = Wdate.getHours();
            var Fminute = Wdate.getMinutes();
            var Fsecond = Wdate.getSeconds();
            var _workDate = Fyear + "-" + Fmonth + "-" + Fday;
            return _workDate;
        }

        function GenerateGrid(JSON_Response) {
            $("#gridContainer").dxDataGrid({
                dataSource: JSON_Response,
                keyExpr: "KEY",
                columnAutoWidth: true,
                allowColumnResizing: true,
                allowColumnReordering: true,
                showBorders: true,
                showScrollbar: 'always',
                filterRow: { visible: true },
                editing: {
                    mode: "cell",
                    allowUpdating: true
                },
                scrolling: {
                    mode: "horizontal",
                    showScrollbar: 'always'
                },
                paging: {
                    enabled: false
                },
                editing: {
                    mode: "batch",
                    allowUpdating: true,
                    allowDeleting: true,
                    allowAdding: true
                },
                columns: [
                     {
                         dataField: "ID",
                         visible: false
                     },
                     {
                         dataField: "_Holidate",
                         visible: false
                     },
                    {
                        dataField: "SNO",
                        caption: "S.No",
                        dataType: "number",
                        allowEditing: false,
                        width: 80
                    },
                   {
                       dataField: "Holidate",
                       caption: "Holiday Date",
                       validationRules: [{ type: "required" }],
                       dataType: 'date',
                       format: 'dd/MM/yyyy',
                       width: 200,
                       setCellValue: function (rowData, value) {
                           if (value != null) {
                               rowData.Holidate = value;
                               rowData._Holidate = GetForMatedDate(value);
                           }

                       },
                   },
                    {
                        caption: "Description",
                        dataField: "Description",
                        validationRules: [{ type: "required" }],

                    },

                     {
                         dataField: "ISDELETED",
                         caption: "Deleted",
                         visible: false,
                         allowEditing: false,
                     }
                ],
                onCellPrepared: function (options) {

                    if (startDate != "" && endDate != "") {
                        if (startDate != undefined && endDate != undefined) {
                            var day = 60 * 60 * 24 * 1000;
                            var start_Date = new Date(startDate.getTime() - day);
                            var end_Date = new Date(endDate.getTime() + day);
                            options.cellElement.find('.dx-datebox').dxDateBox("option", "min", start_Date);
                            options.cellElement.find('.dx-datebox').dxDateBox("option", "max", end_Date);
                            //console.log("startDate => " + start_Date + " , endDate =>" + end_Date);
                        }

                    }

                    if (options.rowType == "data") {
                        var nowDate = new Date();
                        var date = new Date(options.data.Holidate);
                        if (nowDate > date)
                        {
                            options.cellElement.find(".dx-link-delete").remove();
                        }

                    }

                },
                onEditorPreparing: function (e) {

                    if (DocId != 0)
                    {
                        if (e.dataField == "Holidate" && e.parentType == "dataRow") {
                            var nowDate = new Date();
                            var date = new Date(e.value);
                            if (nowDate > date) {
                                e.editorOptions.disabled = true;
                            }
                        }
                    }



                },
                onEditingStart: function (e) {
                },
                onInitNewRow: function (e) {
                    e.data.ID = 0;
                    e.data.IsDeleted = false;
                    serialNo = serialNo + 1;
                    e.data.SNO = serialNo;
                },
                onRowInserting: function (e) {

                },
                onRowInserted: function (e) {
                    var Details = {
                        KEY: e.data.KEY,
                        ID: 0,
                        DocNum: e.data.DocNum,
                        SNO: e.data.SNO,
                        Holidate: e.data.Holidate,
                        _Holidate: e.data._Holidate,
                        Description: e.data.Description,
                        IsDeleted: false
                    };
                    Table.push(Details);
                },
                onRowUpdating: function (e) {
                },
                onRowUpdated: function (e) {
                    $.each(Table, function (index, val) {
                        if (val.KEY == e.data.KEY) {
                            val.Description = e.data.Description;
                            val.Holidate = e.data.Holidate;
                            val._Holidate = e.data._Holidate;
                        }

                    });
                },
                onRowRemoving: function (e) {
                },
                onRowRemoved: function (e) {
                    $.each(Table, function (index, val) {

                        if (val.KEY == e.data.KEY) {
                            val.IsDeleted = true;
                        }
                    });
                }
            });
        }


        function GetDocNumList() {
            var url = "/Holiday/GetDocNumList";
            $.ajax({
                url: url,
                method: "GET",
                data: {},
                async: false
            }).done(function (data) {
                var JSON_Response = data.response;
                allDocList = data.docList;

            }).fail(function (data) {
            });
        }

        function GetHolidayByDocNum(docNum)
        {
            Table = [];
            serialNo = 0;
            var url = "/Holiday/GetHolidayByDocNum?docNum=" + docNum;
            $.ajax({
                url: url,
                method: "GET",
                data: {},
                async: false,
            }).done(function (data) {

                $("#docNumber").val("");

                var JSON_Response = JSON.parse(data.response.Data);
                $("#yearDropDown").dxSelectBox({ value: JSON_Response.Year });

                DocId = JSON_Response.ID;
                DocNum = JSON_Response.DocNum;


                var from = JSON_Response.FromDate.split("/");
                var fDate = new Date(from[0], from[1] - 1, from[2])

                var to = JSON_Response.ToDate.split("/");
                var tDate = new Date(to[0], to[1] - 1, to[2])

                $("#fromDate").dxDateBox({ value: fDate });
                $("#toDate").dxDateBox({ value: tDate });

                GenerateGrid(JSON_Response.Detail);
                $.each(JSON_Response.Detail, function (index, val) {

                    var Details = {
                        KEY: val.KEY,
                        ID: val.ID,
                        SNO: val.SNO,
                        Holidate: val.Holidate,
                        _Holidate: val._Holidate,
                        Description:val.Description,
                        IsDeleted: val.IsDeleted
                    };
                    Table.push(Details);

                });

                serialNo = Table.length;

                $('#docNumber').prop("disabled", true);
                $("#docNumber").val(DocNum);

            }).fail(function (data) {
            });
        }

        function AddUpdate() {
            var notSaved = $('#gridContainer').dxDataGrid('instance').getController('editing').hasChanges();
            if (notSaved)
            {
                setTimeout(function () { AddUpdate(); }, 2000);
            }
            else {

                if (Table.length == 0) {
                    loadPanel.hide();
                    AlertToast('error', "Please add record!");
                    return;
                }


                var Fdate = $("#fromDate").dxDateBox("instance").option('value');
                var fromDate = GetForMatedDate(Fdate);

                var Tdate = $("#toDate").dxDateBox("instance").option('value');
                var toDate = GetForMatedDate(Tdate);

                var url = "/Holiday/AddUpdateHoliday";
                var data = {};
                data.ID = DocId;
                data.DocNum = DocNum;
                data.Year = $("#yearDropDown").dxSelectBox("instance").option('value');
                data.FromDate = fromDate;
                data.ToDate = toDate;
                data.ISDELETED = false;
                data.Detail = Table;
                $.ajax({
                    type: "POST",
                    url: url,
                    contentType: 'application/json',
                    data: JSON.stringify(data),
                    dataType: "json",
                    async: false,
                    success: function (response) {
                        loadPanel.hide();
                        if (response.Success) {
                            AlertToast('success', response.Message);
                            setTimeout(function () {
                                window.location.reload();
                            }, 5000);
                        }
                        else {
                            AlertToast('error', response.Message);
                        }
                    },
                    error: function (response) {
                        loadPanel.hide();
                        console.log(response);
                    },
                    failure: function (response) {
                        loadPanel.hide();
                        console.log(response);
                    }

                });

            }

        }

        function GetAllDocuments() {

            loadPanel.show();
            var ur = "/Holiday/GetHolidayAllDocuments";
            $.ajax({
                url: ur,
                method: "GET",
                data: {},
                //async: false,
            }).done(function (data) {
                AllDocumentList = JSON.parse(data.response.Data);
                loadPanel.hide();

            }).fail(function (data) {
                console.log(data);
                loadPanel.hide();
            });

        }

        function GeneratePopupFindGrid() {
            popupFindInstance = $("#FindContainer").dxDataGrid({
                dataSource: AllDocumentList,
                keyExpr: "DocNum",
                paging: { pageSize: 10 },
                columnAutoWidth: true,
                pager: { showInfo: true },
                allowColumnResizing: true,
                allowColumnReordering: true,
                showBorders: true,
                showScrollbar: 'always',
                filterRow: { visible: true },
                scrolling: {
                    mode: "horizontal",
                    showScrollbar: 'always'
                },
                selection: {
                    mode: "single"
                },
                columns: [
                    {
                        dataField: "ID",
                        caption: "ID",
                        visible: false
                    },
                    {
                        dataField: "DocNum",
                        caption: "Document #"
                    },
                    {
                        dataField: "Year",
                        caption: "Year"
                    },

                     {
                         dataField: "FromDate",
                         caption: "From Date"
                     },
                     {
                         dataField: "ToDate",
                         caption: "To Date"
                     },
                    {
                        dataField: "CreatedDate",
                        caption: "Created Date"
                    }
                ]
            }).dxDataGrid("instance");

            $("#select-all-mode").dxSelectBox({
                dataSource: ["allPages", "page"],
                value: "allPages",
                onValueChanged: function (data) {
                    dataGrid.option("selection.selectAllMode", data.value);
                }
            });

            $("#show-checkboxes-mode").dxSelectBox({
                dataSource: ["none", "onClick", "onLongTap", "always"],
                value: "onClick",
                onValueChanged: function (data) {
                    dataGrid.option("selection.showCheckBoxesMode", data.value);
                    $("#select-all-mode").dxSelectBox("instance").option("disabled", data.value === "none");
                }
            });

            popupFindInstance.clearSelection();


        }

        function ValidateAuthorization() {
            var id = $("#AuthID").val();
            var isSuccess = false;

            if (id == -1)
                isSuccess = true;
            if (id == 2)
                isSuccess = true;

            if (isSuccess) {
                $("#add_update").remove();
                $("#gridContainer").dxDataGrid({ disabled: true });
            }
        }


        function loadAuthLogData(url) {
            if (DocId != 0) {
                url = url + "?docId=" + DocId;

                $.ajax({
                    url: url,
                    method: "GET",
                    data: {},
                    async: false,
                }).done(function (data) {
                    data = JSON.parse(data.response.Data);
                    console.log(data);
                    $("#HeaderLogContainer").dxDataGrid({
                        dataSource: data.Table,
                        paging: { pageSize: 10 },
                        columnAutoWidth: true,
                        pager: { showInfo: true },
                        allowColumnResizing: true,
                        allowColumnReordering: true,
                        showBorders: true,
                        showScrollbar: 'always',
                        filterRow: { visible: true },
                        scrolling: {
                            mode: "horizontal",
                            showScrollbar: 'always'
                        },
                    });
                    $("#DetailLogContainer").dxDataGrid({
                        dataSource: data.Table1,
                        paging: { pageSize: 10 },
                        columnAutoWidth: true,
                        pager: { showInfo: true },
                        allowColumnResizing: true,
                        allowColumnReordering: true,
                        showBorders: true,
                        showScrollbar: 'always',
                        filterRow: { visible: true },
                        scrolling: {
                            mode: "horizontal",
                            showScrollbar: 'always'
                        },
                    });

                }).fail(function (data) {
                    console.log(data);
                });
            }



        }


        $('document').ready(function () {

            GetAllDocuments();
            GetDocNumList();
            GenerateGrid([]);
            ValidateAuthorization();
            GenerateYearDropDown();
            GenerateDateBox();

            $('#add_update').click(function () {
                var isSuccess = true;;
                var showMsg = "";

                if (isSuccess) {
                    loadPanel.show();
                    var gridContainer = $("#gridContainer").dxDataGrid("instance");
                    gridContainer.getController('validating').validate(true).done(function (result) {
                        if (result)
                        {
                            gridContainer.saveEditData();
                            setTimeout(function () { AddUpdate(); }, 2000);
                        }
                        else
                        {
                            loadPanel.hide();
                            AlertToast('error', "Please fill required fields!");
                        }

                    });

                }
                else {
                    AlertToast('error', showMsg);
                }

            });
            $('#new').click(function () {
                //DocNum = "";
                //DocId = 0;
                //GenerateGrid([]);
                //Table = [];
                //serialNo = 0;
                //GenerateDateBox();
                //$("#sapFunction").dxSelectBox({ value: "" });
                //$("#docNumber").val("");
                //$('#docNumber').prop("disabled", true);
                //serialNo = 0;
                window.location.reload();
            });
            $('#find').click(function () {
                $("#docNumber").val("");
                $('#docNumber').prop("disabled", false);
            });
            $('#first').click(function () {
                $('#docNumber').prop("disabled", true);
                index = 0;
                GetHolidayByDocNum(allDocList[index]);
            });
            $('#last').click(function () {
                $('#docNumber').prop("disabled", true);
                index = allDocList.length - 1;
                GetHolidayByDocNum(allDocList[index]);
            });
            $('#previous').click(function () {
                $('#docNumber').prop("disabled", true);
                if (index != 0)
                    index = index - 1;
                GetHolidayByDocNum(allDocList[index]);
            });
            $('#next').click(function () {
                $('#docNumber').prop("disabled", true);
                if (index < allDocList.length-1)
                    index = index + 1;

                GetHolidayByDocNum(allDocList[index]);
            });
            $('#btnOk').click(function () {
                var selectedRow = popupFindInstance.getSelectedRowsData();
                if (selectedRow.length > 0)
                {
                    GetHolidayByDocNum(selectedRow[0].DocNum);
                }
                $('#myModal_Find').modal('hide');
                $('body').removeClass('modal-open');
                $('.modal-backdrop').remove();

            });
            $("#docNumber").blur(function () {

                GetHolidayByDocNum($("#docNumber").val());

            });
        });

</script>