


@{
    ViewBag.Title = "Time Sheet View";
}

@{
    TMSDeloitte.Models.UserSession sess = null;
    if ((TMSDeloitte.Models.UserSession)HttpContext.Current.Session["TMSUserSession"] != null)
    {
        sess = (TMSDeloitte.Models.UserSession)HttpContext.Current.Session["TMSUserSession"];
        if (sess.SessionUser.ISSUPER)
        {
            @*<button type="button" class="btn btn-success" data-toggle="modal" onclick='loadAuthLogData("/TimeSheetView/GetTimeSheetSetupLog");' data-target="#myLogModal">Show Log</button>*@
        }

        var menu = sess.pagelist.Where(x => x.ID == (int)TMSDeloitte.Helper.Enums.FormsName.TimeSheetView).FirstOrDefault();
        if (menu != null)
        {
            <input type="hidden" id="AuthID" name="AuthID" value="@menu.Role">
        }
        else
        {
            <input type="hidden" id="AuthID" name="AuthID" value="-1">
        }
    }

}


<style type="text/css">
    div#empGridBoxDropdown {
        overflow: auto;
    }
    div#empGridBoxDropdown > div {
        width: 750px;
    }
</style>

<div class="pcoded-content">
    <div class="card p-20" style="min-height: 495px;">
        <!-- [ breadcrumb ] start -->
        <div class="page-header">
            <div class="page-block">
                <div class="row align-items-center">
                    <div class="col-md-6">
                        <div class="page-header-title">
                            <h4> Time Sheet View </h4>
                        </div>
                    </div>
                    <div class="col-md-6 text-md-right">
                        <ul class="breadcrumb">
                            <li class="breadcrumb-item"><a href="#"> Time Sheet Management </a></li>
                            <li class="breadcrumb-item"> Time Sheet View </li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
        <!-- [ breadcrumb ] end -->
        <!-- [ Main Content ] start -->
       
        <div class="row">
            <div class="col-lg-6">
                <div class="form-group">
                    <label for="exampleFormControlSelect1"> Employee Code: </label>
                    <div id="empGridBox" class="form-control frm-cstm"></div>
                </div>
            </div>

            <div class="col-lg-6">
                <div class="form-group">
                    <label for="exampleFormControlSelect1">From Date: </label>
                    <div id="fromDate"></div>
                </div>
            </div>

        </div>
        <div class="row">
            <div class="col-lg-6">
                <div class="form-group">
                    <label for="exampleFormControlSelect1">Employee Name: </label>
                    <input type="text" class="form-control frm-cstm" id="employeeName" placeholder="Employee Name" readonly />
                </div>
            </div>

            <div class="col-lg-6">
                <div class="form-group">
                    <label for="typeCost">To Date: </label>
                    <div id="toDate"></div>
                </div>
            </div>
           
        </div>
        <div class="row">
            <div class="col-lg-6">
                <div class="form-group">
                    <label for="exampleFormControlSelect1">Department: </label>
                    <input type="text" class="form-control frm-cstm" id="department" placeholder="Department" readonly />
                </div>
            </div>
            <div class="col-lg-1">
                <input type="button" value="View" id="view" class="btn btn-primary" />
            </div>
            <div class="col-lg-1">
                @{
                    if (sess.SessionUser.ISSUPER)
                    {
                        <input type="button" value="Show All" id="all" class="btn btn-primary" />
                    }
                }
                
             
            </div>
        </div>
        <div class="row">
            <div class="col-lg-6">
                <div class="form-group">
                    <label for="exampleFormControlSelect1">Designation: </label>
                    <input type="text" class="form-control frm-cstm" id="designation" placeholder="Designation" readonly />
                </div>
            </div>
           
        </div>

        

        <div class="row">
            <div class="col-lg-12">
                <div class="table-responsive">
                    <div id="gridContainer"></div>
                </div>
            </div>
        </div>


        <div class="row">
            <div class="col-lg-12 text-right mt-3">
                @*<input type="button" value="Add & Update" id="add_update" class="btn btn-primary" />*@
               


            </div>
        </div>

        <!-- [ Main Content ] end -->
    </div> <!-- [ Card Content ] end -->
</div>


<div id="myModal_Confirmation" class="modal fade" role="dialog">
    <div class="modal-dialog modal-lg">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                Confirmation
                <button type="button" class="close" data-dismiss="modal">×</button>

            </div>
            <div class="modal-body">
              Are you sure want to cencel?
            </div>
            <div class="modal-footer">
                <button type="button" id="btnYes" _id="0" _empid="0" _docnum="" class="btn btn-primary">Yes</button>
                <button type="button" class="btn btn-secondary" data-dismiss="modal">No</button>
            </div>
        </div>
    </div>
</div>

<div id="myLogModal" class="modal fade" role="dialog">
    <div class="modal-dialog modal-lg">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                @*<h4 class="modal-title">Log</h4>*@
                <button type="button" class="close" data-dismiss="modal">×</button>
            </div>

            <div class="modal-body">
                <h8>Header Log</h8>
                <div id="HeaderLogContainer"></div>
            </div>
            <div class="modal-body">
                <h8>Detail Log</h8>
                <div id="DetailLogContainer"></div>
            </div>
        </div>
    </div>
</div>


<script type="text/javascript">

        var Table = [];
        var serialNo = 0;
        var year = "";
        var DocNum = "";
        var DocId = 0;
        var DocIsDeleted = false;
        var allDocList = [];
        var index = 1;
        var popupFindInstance;
        var EmpID = 0;
        var isDateRangeError = false;
        var fromDateInstance;
        var toDateInstance;
        var statusList = [];
        var IsSuperUser = false;
        var isPageDataLoaded = false;

        function stopLoading() {
            if (isPageDataLoaded == false) {
                setTimeout(function () { stopLoading(); }, 500);
            }
            else {
                loadPanel.hide();
            }
        }
        

        function GetHCMUser() {
            
            var url = "/TimeSheetView/GetUsers";
            $.ajax({
                url: url,
                method: "GET",
                data: {},
                async: false,
            }).done(function (data) {
                EmpID = 0;
                statusList = data.statusList;

                var JSON_Response = data.response;
                if (data.IsSuper==false)
                    EmpID = data.EmpID;

                IsSuperUser = data.IsSuper;

                GenerateUserTableDropDown(JSON_Response);
                isPageDataLoaded = true;
            }).fail(function (data) {
                console.log(data);
                isPageDataLoaded = true;
            });
        }


        function GenerateUserTableDropDown(jsonData) {

            $("#empGridBox").dxDropDownBox({
                valueExpr: "ID",
                placeholder: "Select Employee...",
                displayExpr: "EMPLOYEECODE",
                showClearButton: true,
                dataSource: jsonData,
                contentTemplate: function (e) {
                    var value = e.component.option("value"),
                        $dataGrid = $("<div id='empGridBoxDropdown'>").dxDataGrid({
                            dataSource: e.component.getDataSource(),
                            columns: ["EMPLOYEECODE", "FULLNAME", "DESIGNATIONNAME", "DEPARTMENTNAME", { dataField: "BRANCHID", visible: false }],
                            hoverStateEnabled: true,
                            paging: { enabled: true, pageSize: 10 },
                            filterRow: { visible: true },
                            scrolling: { mode: "infinite" },
                            height: 345,
                            selection: { mode: "single" },
                            selectedRowKeys: value,
                            onSelectionChanged: function (selectedItems) {
                                if (selectedItems != null)
                                    if (selectedItems != undefined) {
                                        var keys = selectedItems.selectedRowKeys;
                                        if (keys.length > 0) {
                                            e.component.option("value", keys[0].ID);

                                            //EmpCode = keys[0].EMPLOYEECODE;
                                            //HcmOneID = keys[0].HCMOneID;


                                            $("#employeeName").val(keys[0].FULLNAME);
                                            $("#department").val(keys[0].DEPARTMENTNAME);
                                            $("#designation").val(keys[0].DESIGNATIONNAME);
                                            $("#empGridBox").dxDropDownBox("instance").close();

                                        }

                                    }


                            }
                        });

                    dataGrid = $dataGrid.dxDataGrid("instance");

                    e.component.on("valueChanged", function (args) {
                        var value = args.value;
                        dataGrid.selectRows(value, false);
                    });

                    return $dataGrid;
                }
            });

            if (EmpID > 0) {

                $("#empGridBox").dxDropDownBox({ value: EmpID });

                //$("#empGridBox").dxDropDownBox({ readOnly: true });

                GetUserInfoByEmpCode($("#empGridBox").dxDropDownBox("instance").option('text'));
            }
            
        }

        function GetUserInfoByEmpCode(empCode) {
            loadPanel.show();
            var url = "/TimeSheetView/GetUserInfoByEmpCode";
            $.ajax({
                url: url,
                method: "GET",
                async: false,
                data: { empCode: empCode },
            }).done(function (response) {
                $("#employeeName").val("");
                $("#department").val("");
                $("#designation").val("");

                if (response.Success) {
                    $("#employeeName").val(response.UserInfo.FULLNAME);
                    $("#department").val(response.UserInfo.DEPARTMENTNAME);
                    $("#designation").val(response.UserInfo.DESIGNATIONNAME);

                }


                loadPanel.hide();

            }).fail(function (data) {
                loadPanel.hide();
            });
        }

        function GetDocList() {
            var url = "/TimeSheetView/GetDocList";
            $.ajax({
                url: url,
                method: "GET",
                data: {},
                async: false
            }).done(function (data) {
                allDocList = data.docList;

            }).fail(function (data) {
            });
        }



        function GenerateDateBox()
        {
            var now = new Date();
           fromDateInstance= $("#fromDate").dxDateBox({
                type: "date",
                pickerType: "calendar",
                value: getMondayOfCurrentWeek(),
                displayFormat: "EEEE, MMM dd",
                onOpened: function (e) {  
                    disableDates();  

                    $(".dx-calendar-navigator .dx-button-content").click(function () {  
                        disableDates();  
                    });  
                },
                onValueChanged: function (data) {
                    $("#toDate").dxDateBox({min: data.value});
                }
            });

          toDateInstance=$("#toDate").dxDateBox({
                type: "date",
                pickerType: "calendar",
                value: getFridayOfCurrentWeek(),
                displayFormat: "EEEE, MMM dd",
                onOpened: function (e) {
                    disableDates();

                    $(".dx-calendar-navigator .dx-button-content").click(function () {
                        disableDates();
                    });
                },
                onValueChanged: function (data) {
                    $("#fromDate").dxDateBox({ max: data.value });
                }
            });

         

            $('.dx-texteditor-input').attr('readonly', true);
        }

        function disableDates() {
           
            $("td.dx-calendar-cell[aria-label *= 'Saturday']").css('background-color', 'lightgray').click(function () {
                return false;
            });
            $("td.dx-calendar-cell[aria-label *= 'Sunday']").css('background-color', 'lightgray').click(function () {
                return false;
            });
            $("td.dx-calendar-cell[aria-label *= 'Tuesday']").css('background-color', 'lightgray').click(function () {
                return false;
            });
            $("td.dx-calendar-cell[aria-label *= 'Wednesday']").css('background-color', 'lightgray').click(function () {
                return false;
            });
            $("td.dx-calendar-cell[aria-label *= 'Thursday']").css('background-color', 'lightgray').click(function () {
                return false;
            });
        }


        function getMondayOfCurrentWeek() {
            var d = new Date();
            var day = d.getDay();
            return new Date(d.getFullYear(), d.getMonth(), d.getDate() + (day == 0 ? -6 : 1) - day);
        }
    
        function getFridayOfCurrentWeek() {
            var d = new Date();
            var day = d.getDay();
            return new Date(d.getFullYear(), d.getMonth(), d.getDate() + (day == 0 ? 0 : 5) - day);
        }

        function GetLogData(url) {
            loadData(url+"?docNum=" + DocNum);
        }

        function GenerateGrid(JSON_Response) {
            console.log(JSON_Response);
            $("#gridContainer").dxDataGrid({
                dataSource: JSON_Response,
               // keyExpr: "KEY",
                columnAutoWidth: true,
                allowColumnResizing: true,
                allowColumnReordering: true,
                showBorders: true,
                showScrollbar: 'always',
                filterRow: { visible: true },
                editing: {
                    mode: "cell",
                    allowUpdating: true
                },
                scrolling: {
                    mode: "horizontal",
                    showScrollbar: 'always'
                },
                paging: { pageSize: 50 },
                //editing: {
                //    mode: "batch",
                //    allowUpdating: true,
                //    allowDeleting: true,
                //    allowAdding: true
                //},
                columns: [
                     {
                         dataField: "ID",
                         visible: false
                     },
                    {
                        dataField: "SNo",
                        caption: "S.No",
                        dataType: "number"
                    },
                    {
                        dataField: "DocNum",
                        caption: "Doc #",
                    },
                    {
                        dataField: "EMPLOYEECODE",
                        caption: "Employee Code",
                        // width: "auto"
                    },
                     {
                         dataField: "EmpFullName",
                         caption: "User Name",
                         // width: "auto"
                     },
                     {
                         dataField: "Year",
                         caption: "Year",
                         // width: "auto"
                     },
                    {
                        dataField: "Period",
                        caption: "Period",
                       // width: "auto"
                    },
                     {
                         dataField: "FromDate",
                         caption: "From Date",
                     },
                      {
                          dataField: "ToDate",
                          caption: "To Date",
                      },
                      {
                          dataField: "Status",
                          caption: "Status",
                          lookup: {
                              dataSource: statusList,
                              valueExpr: "ID",
                              displayExpr: "Name"
                          }
                      },
                      {
                          dataField: "ID",
                          alignment: "left",
                          caption: "Cancel",
                          cellTemplate: function (container, options) {
                              if (options.data.Status == 1 || options.data.Status == 2)
                              {
                                  $("<div>")
                                 .append($("<a class='btn btn_icn btnCencelDocument' _id=" + options.data.ID + " _docnum=" + options.data._DocNum + " _empid=" + options.data.EmpID + " " + " title='Cencel'><em class='fa fa-times'></em></a>"))
                                 .appendTo(container);
                              }
                             
                           
                          }
                      },
                      {
                          dataField: "ID",
                          alignment: "left",
                          caption: "Open",
                          cellTemplate: function (container, options) {
                              debugger;
                              $("<div>")
                                 .append($("<a class='btn btn_icn btnViewProfile' _docnum=" + options.data._DocNum + " _empid=" + options.data.EmpID + " " + " title='Open'><em class='fa fa-eye'></em></a>"))
                                 .appendTo(container);
                          }
                      },
                      
                ],
                onEditorPreparing: function (e) {
                    if (e.parentType == 'dataRow' && e.dataField == 'TYPEOFCOST') {
                        e.editorOptions.maxLength = 100;
                    }
                },
                onEditingStart: function (e) {
                },
                onInitNewRow: function (e) {
                    e.data.ID = 0;
                    e.data.IsDeleted = false;
                    e.data.IsActive = true;
                    serialNo = serialNo + 1;
                    e.data.SNO = serialNo;

                },
                onRowInserting: function (e) {

                },
                onRowInserted: function (e) {
                    var Details = {
                        KEY: e.data.key,
                        ID: 0,
                        DocNum: e.data.DocNum,
                        SNO: e.data.SNO,
                        RatesPerHour:e.data.RatesPerHour,
                        DesignationID: e.data.DesignationID,
                        IsDeleted: false,
                        IsActive: e.data.IsActive
                    };
                    Table.push(Details);
                },
                onRowUpdating: function (e) {
                },
                onRowUpdated: function (e) {
                    $.each(Table, function (index, val) {
                        if (val.KEY == e.data.KEY) {
                            val.RatesPerHour = e.data.RatesPerHour;
                            val.IsActive = e.data.IsActive;
                        }

                    });
                },
                onRowRemoving: function (e) {
                },
                onRowRemoved: function (e) {
                    $.each(Table, function (index, val) {
                        if (val.KEY == e.data.KEY) {
                            val.IsDeleted = true;
                        }
                    });
                }
            });

        }


        function GetTimeSheetByDocNum(docNum)
        {
            loadPanel.show();
            Table = [];
            serialNo = 0;
            var url = "/TimeSheetView/GetTimeSheetByDocNum?docNum=" + docNum;
            $.ajax({
                url: url,
                method: "GET",
                data: {},
                async: false,
            }).done(function (data) {
                loadPanel.hide();
                $("#docNumber").val("");

                var JSON_Response = JSON.parse(data.response.Data);


                DocId = JSON_Response.ID;
                DocNum = JSON_Response.DocNum;

                $("#docNumber").val(DocNum);
                //$("#sapFunction").dxSelectBox({ value: JSON_Response.FunctionID });

                var from = JSON_Response.fromDate.split("/");
                var fDate = new Date(from[0], from[1] - 1, from[2])

                var to = JSON_Response.toDate.split("/");
                var tDate = new Date(to[0], to[1] - 1, to[2])

                $("#fromDate").dxDateBox({ value: fDate });
                $("#toDate").dxDateBox({ value: tDate });

                GenerateGrid(JSON_Response.PeriodList);

                $('#docNumber').prop("disabled", true);


            }).fail(function (data) {
                loadPanel.hide();
            });
        }

        function GeneratePopupFindGrid() {
            loadPanel.show();
            var ur = "/TimeSheetView/GetAllDocuments";
            $.ajax({
                url: ur,
                method: "GET",
                data: {},
                async: false,
            }).done(function (data) {
                var JSON_Response = JSON.parse(data.response.Data);
                popupFindInstance = $("#FindContainer").dxDataGrid({
                    dataSource: JSON_Response,
                    keyExpr: "DocNum",
                    paging: { pageSize: 10 },
                    columnAutoWidth: true,
                    pager: { showInfo: true },
                    allowColumnResizing: true,
                    allowColumnReordering: true,
                    showBorders: true,
                    showScrollbar: 'always',
                    filterRow: { visible: true },
                    scrolling: {
                        mode: "horizontal",
                        showScrollbar: 'always'
                    },
                    selection: {
                        mode: "single"
                    },
                    columns: [
                        {
                            dataField: "ID",
                            caption: "ID",
                            visible: false
                        },
                        {
                            dataField: "DocNum",
                            caption: "Document #"
                        },
                        {
                            dataField: "Year",
                            caption: "Year"
                        },
                         {
                             dataField: "FromDate",
                             caption: "From Date",
                             dataType: 'date',
                             format: 'EEEE, MMM dd'
                         },
                         {
                             dataField: "ToDate",
                             caption: "To Date",
                             dataType: 'date',
                             format: 'EEEE, MMM dd'
                         },
                        {
                            dataField: "CreatedDate",
                            caption: "Created Date"
                        }
                    ]
                }).dxDataGrid("instance");

                $("#select-all-mode").dxSelectBox({
                    dataSource: ["allPages", "page"],
                    value: "allPages",
                    onValueChanged: function (data) {
                        dataGrid.option("selection.selectAllMode", data.value);
                    }
                });

                $("#show-checkboxes-mode").dxSelectBox({
                    dataSource: ["none", "onClick", "onLongTap", "always"],
                    value: "onClick",
                    onValueChanged: function (data) {
                        dataGrid.option("selection.showCheckBoxesMode", data.value);
                        $("#select-all-mode").dxSelectBox("instance").option("disabled", data.value === "none");
                    }
                });

                popupFindInstance.clearSelection();

                loadPanel.hide();

            }).fail(function (data) {
                console.log(data);
                loadPanel.hide();
            });



        }

        function ValidateAuthorization() {
            var id = $("#AuthID").val();
            var isSuccess = false;

            if (id == -1)
                isSuccess = true;
            if (id == 2)
                isSuccess = true;

            if (isSuccess) {
                $("#view").remove();
                $("#all").remove();
                $("#gridContainer").dxDataGrid({ disabled: true });
            }
        }

        function loadAuthLogData(url) {
            if (DocId != 0) {
                url = url + "?docId=" + DocId;

                $.ajax({
                    url: url,
                    method: "GET",
                    data: {},
                    async: false,
                }).done(function (data) {
                    data = JSON.parse(data.response.Data);
                    console.log(data);
                    $("#HeaderLogContainer").dxDataGrid({
                        dataSource: data.Table,
                        paging: { pageSize: 10 },
                        columnAutoWidth: true,
                        pager: { showInfo: true },
                        allowColumnResizing: true,
                        allowColumnReordering: true,
                        showBorders: true,
                        showScrollbar: 'always',
                        filterRow: { visible: true },
                        scrolling: {
                            mode: "horizontal",
                            showScrollbar: 'always'
                        },
                    });
                    $("#DetailLogContainer").dxDataGrid({
                        dataSource: data.Table1,
                        paging: { pageSize: 10 },
                        columnAutoWidth: true,
                        pager: { showInfo: true },
                        allowColumnResizing: true,
                        allowColumnReordering: true,
                        showBorders: true,
                        showScrollbar: 'always',
                        filterRow: { visible: true },
                        scrolling: {
                            mode: "horizontal",
                            showScrollbar: 'always'
                        },
                    });

                }).fail(function (data) {
                    console.log(data);
                });
            }



        }


        function ViewAndShowAll(showAll) {

            isShowAll = showAll;

            var empid = $("#empGridBox").dxDropDownBox("instance").option('value');
            
            var url = "/TimeSheetView/GetTimeSheetView";

            var Fdate = $("#fromDate").dxDateBox("instance").option('value');
            var Fday = Fdate.getDate();       // yields date
            var Fmonth = Fdate.getMonth() + 1;    // yields month (add one as '.getMonth()' is zero indexed)
            var Fyear = Fdate.getFullYear();  // yields year
            var Fhour = Fdate.getHours();     // yields hours
            var Fminute = Fdate.getMinutes(); // yields minutes
            var Fsecond = Fdate.getSeconds(); // yields seconds
            var fromDate = Fyear + "/" + Fmonth + "/" + Fday;//+ " " + Fhour + ':' + Fminute + ':' + Fsecond;

            var Tdate = $("#toDate").dxDateBox("instance").option('value');
            var Tday = Tdate.getDate();       // yields date
            var Tmonth = Tdate.getMonth() + 1;    // yields month (add one as '.getMonth()' is zero indexed)
            var Tyear = Tdate.getFullYear();  // yields year
            var Thour = Tdate.getHours();     // yields hours
            var Tminute = Tdate.getMinutes(); // yields minutes
            var Tsecond = Tdate.getSeconds(); // yields seconds
            var toDate = Tyear + "/" + Tmonth + "/" + Tday;//+ " " + Thour + ':' + Tminute + ':' + Tsecond;
            
            var isValid = false;

            if (IsSuperUser == true && isShowAll == false) {
                if ((empid == null || empid == undefined)) {
                    AlertToast('error', "Please select employee!");
                    return false;
                }
            }

            if (IsSuperUser == false)
            {
                if ((empid == null || empid == undefined)) {
                    AlertToast('error', "Please select employee!");
                    return false;
                }
            }

            if (empid == null)
                empid = 0;

            loadPanel.show();
            $.ajax({
                method: "POST",
                url: url,
               // contentType: 'application/json',
                data: {
                    isShowAll: isShowAll,
                    empId: empid,
                    fromDate: fromDate,
                    toDate: toDate
                },
                async: false,
                dataType: "json",
                success: function (response) {
                    
                    loadPanel.hide();

                    var JSON_Response = JSON.parse(response.datatable.Data);
                    var Sno = 0;
                    $.each(JSON_Response, function (index, val) {
                        Sno = Sno + 1;
                        val.SNo = Sno;
                    });

                    if (JSON_Response.length > 0)
                        GenerateGrid(JSON_Response);
                    else
                        AlertToast('error', "No Record Found!");
                },
                error: function (response) {
                    loadPanel.hide();
                    console.log(response);
                },
                failure: function (response) {
                    loadPanel.hide();
                    console.log(response);
                }

            });

        }

      

        $('document').ready(function () {

            loadPanel.show();
            setTimeout(function () { GetHCMUser(); }, 100);
            stopLoading();
           
            GenerateDateBox();
            GenerateGrid([]);
            ValidateAuthorization();

            $('#all').click(function () {

                ViewAndShowAll(1);
            });

            $('#view').click(function () {

                ViewAndShowAll(0);

            });
            
            $('#btnYes').click(function () {

                $("#myModal_Confirmation").modal('hide');

                loadPanel.show();

                var id = $(this).attr('_id');
                var empid = $(this).attr('_empid');
                var docnum = $(this).attr('_docnum');


                var timeSheetFormObj = {
                    ID: id,
                    Status: 3,
                    _DocNum: docnum,
                    _EmpID: empid
                    
                };

                var jsonData = JSON.stringify({
                    obj: timeSheetFormObj
                });

                var url = "/TimeSheetView/UpdateTimeSheetForm";
                $.ajax({
                    type: "POST",
                    url: url,
                    contentType: 'application/json',
                    data: jsonData,
                    dataType: "json",
                    async: false,
                    success: function (response) {
                        loadPanel.hide();
                        if (response.Success) {
                            AlertToast('success', response.Message);
                            setTimeout(function () {
                                window.location.reload();
                            }, 5000);
                        }
                        else {
                            AlertToast('error', response.Message);
                        }
                    },
                    error: function (response) {
                        console.log(response);
                        loadPanel.hide();
                    },
                    failure: function (response) {
                        console.log(response);
                        loadPanel.hide();
                    }

                });
                
                
            });
            
        });


        $('body').on('click', '.btnCencelDocument', function () {
            var id = $(this).attr('_id');
            var docnum = $(this).attr('_docnum');
            var empid = $(this).attr('_empid');

            $("#myModal_Confirmation").modal('show');
            $('#btnYes').attr('_id', id);
            $('#btnYes').attr('_empid', empid);
            $('#btnYes').attr('_docnum', docnum);
        });


    $('body').on('click', '.btnViewProfile', function () {
        debugger;
            var docnum = $(this).attr('_docnum');
            var empid = $(this).attr('_empid');
            window.open(
            window.location.origin + "/TimeSheetForm/Index?docNum=" + docnum + "&empID=" + empid,
            '_blank' // <- This is what makes it open in a new window.
            );
           // window.location.href = window.location.origin + "/TimeSheetForm/Index?docNum=" + docnum + "&empID=" + empid
        });

</script>

