@model TMSDeloitte.Models.ApprovalDecision
@{
    ViewBag.Title = "ApprovalDecision";
}

@Html.Hidden("docID", (object)ViewBag.docID)
@Html.Hidden("doc_Type", (object)ViewBag.docType)

<div class="pcoded-content">
    <div class="card p-20" style="min-height: 495px;">
        <!-- [ breadcrumb ] start -->
        <div class="page-header">
            <div class="page-block">
                <div class="row align-items-center">
                    <div class="col-md-6">
                        <div class="page-header-title">
                            <h4> Approval Decision</h4>
                        </div>
                    </div>
                    <div class="col-md-6 text-md-right">
                        <ul class="breadcrumb">
                            <li class="breadcrumb-item"><a href="#"> Administration </a></li>
                            <li class="breadcrumb-item"> Approval Management </li>
                            <li class="breadcrumb-item"> Approval Decision</li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
        <!-- [ breadcrumb ] end -->
        <!-- [ Main Content ] start -->
        @*<div class="row">
                <div class="col-lg-12">
                    <div class="form-group">
                        <div class="text-right">
                            <button id="new" class="plus-icon"> <i class="fas fa-plus-square"></i> </button>
                            <button id="find" class="find-icon" data-toggle="modal" data-target="#myModal_Find"> <i class="fas fa-search"></i> </button>
                            <button id="first" class="step-backword-icon"> <i class="fas fa-step-backward"></i></button>
                            <button id="previous" class="backword-icon"> <i class="fas fa-backward"></i> </button>
                            <button id="next" class="forward-icon"> <i class="fas fa-forward"></i> </button>
                            <button id="last" class="step-forward-icon"> <i class="fas fa-step-forward"></i></button>
                        </div>
                    </div>
                </div>
            </div>
        *@



        <div class="row">
            <div class="col-lg-12">
                <div class="table-responsive">
                    <div id="gridContainer"></div>
                </div>
            </div>
        </div>


        <div class="row">
            <div class="col-lg-12 text-right mt-3">
                @*<button type="button" id="add_update" class="btn btn-primary mr-2"> Add & Update </button>*@
                @{
                    TMSDeloitte.Models.UserSession sess = null;
                    if ((TMSDeloitte.Models.UserSession)HttpContext.Current.Session["TMSUserSession"] != null)
                    {
                        sess = (TMSDeloitte.Models.UserSession)HttpContext.Current.Session["TMSUserSession"];
                        if (sess.SessionUser.ISSUPER)
                        {
                            <button type="button" class="btn btn-success" data-toggle="modal" data-target="#myModal" onclick='GetLogData("/ApprovalDecision/GetApprovalDecisionLogByDOCNUM");'> Show Log </button>
                        }

                        var menu = sess.pagelist.Where(x => x.ID == (int)TMSDeloitte.Helper.Enums.FormsName.TravelLocationSetup).FirstOrDefault();
                        if (menu != null)
                        {
                            <input type="hidden" id="AuthID" name="AuthID" value="@menu.Role">
                        }
                        else
                        {
                            <input type="hidden" id="AuthID" name="AuthID" value="-1">
                        }
                    }

                }


            </div>
        </div>

        <!-- [ Main Content ] end -->
    </div> <!-- [ Card Content ] end -->
</div>

<div id="myModal_Find" class="modal fade" role="dialog">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <label for="exampleFormControlSelect1"> Rejection Remarks </label>
                <button type="button" class="close" data-dismiss="modal">×</button>

            </div>
            <div class="modal-body">
                <div id="FindContainer"></div>
                <input type="text" class="form-control frm-cstm" id="TMSStatus" disabled="disabled" hidden>
                <input type="text" class="form-control frm-cstm" id="TMSID" disabled="disabled" hidden>
                <input type="text" class="form-control frm-cstm" id="RejectComments" maxlength="100">
            </div>
            <div class="modal-footer">
                <button type="button" id="btnOk" class="btn btn-primary">Ok</button>
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
            </div>
        </div>
    </div>
</div>


<div id="myViewModal" class="modal fade" role="dialog">
    <div class="modal-dialog modal-lg">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">×</button>
            </div>

            <div class="modal-body">
                <b><label for="exampleFormControlSelect1" id="docType"></label></b>
                <br />
                <b> <label for="exampleFormControlSelect1" id="userName"></label></b>
                <br />
                <b> <label for="exampleFormControlSelect1" id="docNum"></label></b>
                <br />
                <div id="ViewContainer"></div>
            </div>

        </div>
    </div>
</div>


<style>


</style>

<script type="text/javascript">
    var Task = {};
    var KEYMain;
    var Table = [];
    var ApprovalDecisionList;

    var serialNo = 0;
    index = 0;
    var DocNum = "";
    var CLIENTID = 0;
    var DEPARTMENTNAME;
    var productsDataSource = null;

    var USER_CODE;
    var USER_NAME;
    var DESIGNATIONNAME;
    //var APPROVALREQUIRED;
    //var AllEmployees;
    var SaveEditedData = -1;
    var ISACTIVE;
    var TimesheetDoc;
    var Status;
    var DocType;
    var isPageDataLoaded = false;

    function stopLoading() {
        if (isPageDataLoaded == false) {
            setTimeout(function () { stopLoading(); }, 500);
        }
        else {
            loadPanel.hide();
        }
    }
    $('#docNumber').prop("disabled", true);

    function GenerateGrid(JSON_Response) {
        $(function () {
            console.log(JSON_Response);
            $("#gridContainer").dxDataGrid({
                dataSource: JSON_Response,
                keyExpr: "KEY",
                showBorders: true,
                showScrollbar: 'always',
                filterRow: { visible: true },
                scrolling: {
                    mode: "horizontal",
                    showScrollbar: 'always'
                },
                paging: {
                    enabled: false
                },
                editing: {
                    mode: "form",
                    //allowUpdating: true,
                    allowDeleting: true,
                    useIcons: true,

                },
                columns: [
                    {
                        dataField: "ID",
                        caption: "ID",
                        width: "auto",
                        allowEditing: false,
                        visible: false
                    },
                    {
                        dataField: "SNO",
                        caption: "S.No",
                        dataType: "Number",
                        width: "auto",
                        allowEditing: false
                    },
                     {
                         dataField: "DOCUMENT_ID",
                         caption: "DOC CODE",
                         width: "30px",
                         allowEditing: false,
                     },
                    
                     {
                         dataField: "USER_CODE",
                         caption: "USER_CODE",
                         width: "10%",
                         allowEditing: false,
                         visible: false,
                         customizeText: function (rowData) {
                             return rowData.value;
                         }
                     },
                    {
                        dataField: "USER_NAME",
                        caption: "Employee",
                        validationRules: [{ type: "required" }],
                        width: "18%",
                        allowEditing: false,
                        customizeText: function (rowData) {
                            return rowData.value;
                        }
                    },
                    {
                        dataField: "DEPARTMENTNAME",
                        caption: "Department",
                        width: "12%",
                        allowEditing: false,
                        customizeText: function (rowData) {
                            return rowData.value;
                        }
                    },
                    {
                        dataField: "DESIGNATIONNAME",
                        caption: "Designation",
                        width: "12%",
                        allowEditing: false,
                        customizeText: function (rowData) {
                            return rowData.value;
                        }
                    },
                    {
                        dataField: "FROMDATE",
                        caption: "From Date",
                        width: "16%",
                        allowEditing: false,
                        customizeText: function (rowData) {
                            return rowData.value;
                        }
                    },
                    {
                        dataField: "TODATE",
                        caption: "To Date",
                        width: "16%",
                        allowEditing: false,
                        customizeText: function (rowData) {
                            return rowData.value;
                        }
                    },
                    {
                        dataField: "DOCUMENT",
                        caption: "Document Type",
                        width: "10%",
                        allowEditing: false,
                        customizeText: function (rowData) {
                            return rowData.value;
                        }
                    },


                    {
                        dataField: "APPROVALREQUIRED",
                        caption: "APPROVAL REQUIRED",
                        width: "5%",
                        allowEditing: false,
                        visible: false,
                        customizeText: function (rowData) {
                            return rowData.value;
                        }
                        //,
                        //tooltip: {
                        //    enabled: true,
                        //    format: {
                        //        type: "fixedPoint",
                        //        precision: 0
                        //    }
                        //}
                    },
                    {
                        dataField: "REJECTIONREQUIRED",
                        caption: "REJECTION REQUIRED",
                        width: "5%",
                        allowEditing: false,
                        visible: false,
                        customizeText: function (rowData) {
                            return rowData.value;
                        }
                    },
                    {
                        dataField: "CurrentAPPROVAL",
                        //  dataType: 'number',
                        caption: "APPROVAL",
                        width: "5%",
                        allowEditing: false,
                        visible: false,
                        customizeText: function (rowData) {
                            return rowData.value;
                        }
                    },
                    {
                        dataField: "CurrentREJECTION",
                        // dataType: 'number',
                        caption: "REJECTION",
                        width: "5%",
                        allowEditing: false,
                        visible: false,
                        customizeText: function (rowData) {
                            return rowData.value;
                        }
                    },
                    {
                        type: "buttons",
                        width: "12%",
                        buttons: [
                            {
                                hint: "View",
                                icon: "doc",
                                target: "#myModal",
                                toggle: "modal",
                                //data-toggle="modal" data-target="#myModal"
                                onClick: function (e, currentRowData) {
                                    //var DocId = e.row.data.DOCUMENT_ID;
                                    //var usr = e.row.data.USER_CODE;
                                    //var DocType = e.row.data.DOCUMENT;
                                    //$('#docType').text(DocType + " View");
                                    //$('#userName').text("Name: " + e.row.data.USER_NAME);
                                    //$('#docNum').text("Document No. " + DocId);
                                    //$('#myViewModal').modal('show');

                                    //if (DocType == "Timesheet") {
                                    //    GeneratePopupTimesheetGrid(DocId, usr, DocType);
                                    //}
                                    //else if (DocType == "Travel Claim") {
                                    //    GeneratePopupTravelClaimGrid(DocId, usr, DocType);
                                    //}
                                    //else if (DocType == "Claim") {
                                    //    GeneratePopupClaimGrid(DocId, usr, DocType);
                                    //}
                                    //else if (DocType == "Assignment") {
                                    //    GeneratePopupAssignmentGrid(DocId, usr, DocType);
                                    //}
                                    ////var clonedItem = $.extend({}, e.row.data, { ID: ++maxID });
                                    ////employees.splice(e.row.rowIndex, 0, clonedItem);
                                    ////e.component.refresh(true);
                                    ////e.event.preventDefault();
                                    debugger;
                                    var docnum = e.row.data.ENC_DOCUMENT_NO;
                                    var empid = e.row.data.ENC_USER_CODE;
                                    var doctype = '';
                                    if (e.row.data.DOCUMENT == 'Timesheet')
                                        doctype = 'TimeSheetForm';
                                    if (e.row.data.DOCUMENT == 'Claim')
                                        doctype = 'ClaimForm';
                                    if (e.row.data.DOCUMENT == 'Travel Claim')
                                        doctype = 'MonthlyTravelSheet';
                                    if (e.row.data.DOCUMENT == 'Assignment')
                                        doctype = 'AssignmentForm';

                                    var url = window.location.origin + "/" + doctype + "/Index?docNum=" + docnum + "&empID=" + empid;
                                    window.open(
                                    url,
                                    '_blank' // <- This is what makes it open in a new window.
                                    );

                                }
                            },
                            {
                                hint: "Aprrove",
                                icon: "check",
                                onClick: function (e) {
                                    var td = event.target.parentNode;
                                    var tr = td.parentNode;
                                    TimesheetDoc = e.row.data.DOCUMENT_ID;
                                    Status = '4';
                                    DocType = e.row.data.DOCUMENT;
                                    tr.parentNode.removeChild(tr);
                                    AddUpdate(TimesheetDoc, Status, "", DocType);
                                }
                            },
                            {
                                hint: "Reject",
                                icon: "clear",

                                onClick: function (e) {
                                    $('#myModal_Find').modal('show');
                                    TimesheetDoc = e.row.data.DOCUMENT_ID;
                                    Status = '5';
                                    DocType = e.row.data.DOCUMENT;

                                    $('#TMSID').val(TimesheetDoc);
                                    $('#TMSStatus').val(Status);
                                }
                            }
                        ]
                    },


                ],
                onEditorPreparing: function (e) {

                },
                onEditorPrepared: function (e) {
                    //dxSelectBox
                    //if (e.dataField == "USER_CODE") {
                    //    $(e.editorElement).dxSelectBox("instance").on("valueChanged", function (args) {
                    //        var grid = $("#gridContainer").dxDataGrid("instance");
                    //        var index = e.row.rowIndex;
                    //        var SelectedEmp = AllEmployees.filter(x=>x.ID == args.value)[0];

                    //        console.log(SelectedEmp);
                    //        if (SelectedEmp != null) {
                    //            //grid.cellValue(index, "USER_CODE", SelectedEmp.EMPLOYEECODE);
                    //            //grid.cellValue(index, "DEPARTMENTID", SelectedEmp.DEPARTMENTID);
                    //            grid.cellValue(index, "DEPARTMENTNAME", SelectedEmp.DEPARTMENTNAME);
                    //            grid.cellValue(index, "USER_NAME", SelectedEmp.USER_NAME);
                    //            //grid.cellValue(index, "DESIGNATIONID", SelectedEmp.DESIGNATIONID);
                    //            grid.cellValue(index, "DESIGNATIONNAME", SelectedEmp.DESIGNATIONNAME);
                    //        }
                    //    });
                    //}
                },
                onEditingStart: function (e) {
                },
                //onInitNewRow: function (e) {
                //    e.data.ID = 0;
                //    e.data.ISDELETED = false;
                //    serialNo = serialNo + 1;
                //    e.data.SNO = serialNo;
                //},
                //onRowInserting: function (e) {
                //    serialNo = serialNo + 1;
                //    e.data.SNO = serialNo;
                //},
                //onRowInserted: function (e) {

                onRowUpdating: function (e) {
                },
                onRowUpdated: function (e) {
                    $.each(Table, function (index, val) {
                        if (val.KEY == e.data.KEY) {
                            //val.KM = e.data.KM;
                            //val.LOCATION = e.data.LOCATION;
                            //val.CLIENTID = e.data.CLIENTID;
                            //val.ISACTIVE = e.data.ISACTIVE;
                        }

                    });
                },
                onRowRemoving: function (e) {
                },
                onRowRemoved: function (e) {
                    $.each(Table, function (index, val) {
                        if (val.KEY == e.data.KEY) {
                            val.ISDELETED = true;
                        }
                    });
                }

            });

            if ($('#docID').val() != 0)
            {
                $("#gridContainer").dxDataGrid("instance").columnOption("DOCUMENT_ID", {
                    filterType: "include",
                    filterValues: [parseInt($('#docID').val())]
                });
            }
           
            if ($('#doc_Type').val() != "")
            {
                $("#gridContainer").dxDataGrid("instance").columnOption("DOCUMENT", {
                    filterType: "include",
                    filterValues: [$('#doc_Type').val()]
                });
            }
           

        });
    }

    $('#btnOk').click(function () {

        //var td = event.target.parentNode;
        //var tr = td.parentNode;
        //tr.parentNode.removeChild(tr);
        var RejectComment = $('#RejectComments').val();
        if (RejectComment != "") {
            AddUpdate(TimesheetDoc, Status, RejectComment, DocType);
            $('#myModal_Find').modal('hide');
            $('body').removeClass('modal-open');
            $('.modal-backdrop').remove();
        }
        else {
            AlertToast('error', 'Please fill reason for rejection');
        }

    });

    $('#btnOkk').click(function () {

        $('#myModal_View').modal('hide');
        $('body').removeClass('modal-open');
        $('.modal-backdrop').remove();

    });
    function AddUpdate(TimesheetDoc, Status, RejectComment, DocType) {
        loadPanel.show();
        var url = "/ApprovalDecision/AddUpdateApprovalDecision";


        $.ajax({
            type: "POST",
            url: url,
            contentType: 'application/json',
            data: JSON.stringify({
                DocType: DocType,
                STATUS: parseInt(Status),
                ApprovalDecisionInfo: ApprovalDecisionList,
                COMMENTS: RejectComment,
                ID: TimesheetDoc
            }),
            dataType: "json",
            async: false,

            success: function (response) {
                loadPanel.hide();
                if (response.Success) {

                    AlertToast('success', response.Message);
                    setTimeout(function () {
                        window.location.reload();
                    }, 5000);
                }
                else
                    AlertToast('error', response.Message);
            },
            error: function (response) {
                console.log(response);
                loadPanel.hide();
            },
            failure: function (response) {
                console.log(response);
                loadPanel.hide();
            }

        })
    }

    function GetApproval_Decision() {

        var url = "/ApprovalDecision/GetApprovalDecision";

        $.ajax({
            url: url,
            method: "GET",
            data: {},
            async: false,
        }).done(function (data) {
            // AllEmployees = data.response;
            ApprovalDecisionList = data.ApprovalDecision;
            console.log(ApprovalDecisionList);
            // console.log(AllEmployees);
            var abc = [];
            GenerateGrid(ApprovalDecisionList);
            isPageDataLoaded = true;
        }).fail(function (data) {
            isPageDataLoaded = true;
            loadPanel.hide();
        });
    }

    function ValidateAuthorization() {
        var id = $("#AuthID").val();
        if (id != -1) {
            if (id == 2) {
                // $("#add_update").remove();
                $("#gridContainer").dxDataGrid({ disabled: true });

            }
        }
    }

    $('document').ready(function () {
        loadPanel.show();
        setTimeout(function () { GetApproval_Decision(); }, 100);
        stopLoading();
        
        ValidateAuthorization();
    });

    // #endregion

    function GeneratePopupTimesheetGrid(DocId, usr, DocType) {
        loadPanel.show();
        var ur = "/ApprovalDecision/GetDocumentView";
        $.ajax({
            url: ur,
            method: "GET",
            data: { DocId: DocId, EmpID: usr, DocType: DocType },
            async: false,
        }).done(function (data) {
            var JSON_Response1 = [];
            JSON_Response1 = data.DocView;
            popupFindInstance = $("#ViewContainer").dxDataGrid({
                dataSource: JSON_Response1,
                keyExpr: "SNO",
                paging: { pageSize: 10 },
                columnAutoWidth: true,
                pager: { showInfo: true },
                allowColumnResizing: true,
                allowColumnReordering: true,
                showBorders: true,
                showScrollbar: 'always',
                filterRow: { visible: true },
                scrolling: {
                    mode: "horizontal",
                    showScrollbar: 'always'
                },
                selection: {
                    mode: "single"
                }
                ,
                columns: [
                    {
                        dataField: "SNO",
                        caption: "Serial No."
                    },
                    {
                        dataField: "WorkDate",
                        caption: "Work Date"
                    },

                    {
                        dataField: "Task",
                        caption: "Task"
                    },
                    {
                        dataField: "Location",
                        caption: "Location"
                    },
                    {
                        dataField: "Description",
                        caption: "Description"
                    },
                    {
                        dataField: "WorkHours",
                        caption: "Work Hours"
                    }
                ]
            }).dxDataGrid("instance");

            $("#select-all-mode").dxSelectBox({
                dataSource: ["allPages", "page"],
                value: "allPages",
                onValueChanged: function (data) {
                    dataGrid.option("selection.selectAllMode", data.value);
                }
            });

            $("#show-checkboxes-mode").dxSelectBox({
                dataSource: ["none", "onClick", "onLongTap", "always"],
                value: "onClick",
                onValueChanged: function (data) {
                    dataGrid.option("selection.showCheckBoxesMode", data.value);
                    $("#select-all-mode").dxSelectBox("instance").option("disabled", data.value === "none");
                }
            });

            popupFindInstance.clearSelection();
            loadPanel.hide();

        }).fail(function (data) {
            console.log(data);
            loadPanel.hide();
        });
    }

    function GeneratePopupTravelClaimGrid(DocId, usr, DocType) {
        loadPanel.show();
        var ur = "/ApprovalDecision/GetDocumentView";
        $.ajax({
            url: ur,
            method: "GET",
            data: { DocId: DocId, EmpID: usr, DocType: DocType },
            async: false,
        }).done(function (data) {
            var JSON_Response1 = [];
            JSON_Response1 = data.DocView;
            popupFindInstance = $("#ViewContainer").dxDataGrid({
                dataSource: JSON_Response1,
                keyExpr: "SNO",
                paging: { pageSize: 10 },
                columnAutoWidth: true,
                pager: { showInfo: true },
                allowColumnResizing: true,
                allowColumnReordering: true,
                showBorders: true,
                showScrollbar: 'always',
                filterRow: { visible: true },
                scrolling: {
                    mode: "horizontal",
                    showScrollbar: 'always'
                },
                selection: {
                    mode: "single"
                }
                ,
                columns: [
                    {
                        dataField: "SNO",
                        caption: "Serial No."
                    },
                    {
                        dataField: "TravelDate",
                        caption: "Trave Date"
                    },
                    {
                        dataField: "Assignment",
                        caption: "Assignment"
                    },
                    {
                        dataField: "Description",
                        caption: "Description"
                    },
                    {
                        dataField: "Kilometers",
                        caption: "Kilometers"
                    },
                    {
                        dataField: "Amount",
                        caption: "Amount"
                    },
                    {
                        dataField: "ParkingCharges",
                        caption: "Parking Charges"
                    },
                    {
                        dataField: "TotalAmount",
                        caption: "Total Amount"
                    },
                ]
            }).dxDataGrid("instance");

            $("#select-all-mode").dxSelectBox({
                dataSource: ["allPages", "page"],
                value: "allPages",
                onValueChanged: function (data) {
                    dataGrid.option("selection.selectAllMode", data.value);
                }
            });

            $("#show-checkboxes-mode").dxSelectBox({
                dataSource: ["none", "onClick", "onLongTap", "always"],
                value: "onClick",
                onValueChanged: function (data) {
                    dataGrid.option("selection.showCheckBoxesMode", data.value);
                    $("#select-all-mode").dxSelectBox("instance").option("disabled", data.value === "none");
                }
            });

            popupFindInstance.clearSelection();
            loadPanel.hide();

        }).fail(function (data) {
            console.log(data);
            loadPanel.hide();
        });
    }

    function GeneratePopupClaimGrid(DocId, usr, DocType) {
        loadPanel.show();
        var ur = "/ApprovalDecision/GetDocumentView";
        $.ajax({
            url: ur,
            method: "GET",
            data: { DocId: DocId, EmpID: usr, DocType: DocType },
            async: false,
        }).done(function (data) {
            var JSON_Response1 = [];
            JSON_Response1 = data.DocView;
            popupFindInstance = $("#ViewContainer").dxDataGrid({
                dataSource: JSON_Response1,
                keyExpr: "SNO",
                paging: { pageSize: 10 },
                columnAutoWidth: true,
                pager: { showInfo: true },
                allowColumnResizing: true,
                allowColumnReordering: true,
                showBorders: true,
                showScrollbar: 'always',
                filterRow: { visible: true },
                scrolling: {
                    mode: "horizontal",
                    showScrollbar: 'always'
                },
                selection: {
                    mode: "single"
                }
                ,
                columns: [
                    {
                        dataField: "SNO",
                        caption: "Serial No."
                    },
                    {
                        dataField: "ClaimDate",
                        caption: "Claim Date"
                    },
                    {
                        dataField: "Assignment",
                        caption: "Assignment"
                    },
                    {
                        dataField: "Description",
                        caption: "Description"
                    },
                    {
                        dataField: "TotalAmount",
                        caption: "Total Amount"
                    },
                ]
            }).dxDataGrid("instance");

            $("#select-all-mode").dxSelectBox({
                dataSource: ["allPages", "page"],
                value: "allPages",
                onValueChanged: function (data) {
                    dataGrid.option("selection.selectAllMode", data.value);
                }
            });

            $("#show-checkboxes-mode").dxSelectBox({
                dataSource: ["none", "onClick", "onLongTap", "always"],
                value: "onClick",
                onValueChanged: function (data) {
                    dataGrid.option("selection.showCheckBoxesMode", data.value);
                    $("#select-all-mode").dxSelectBox("instance").option("disabled", data.value === "none");
                }
            });

            popupFindInstance.clearSelection();
            loadPanel.hide();

        }).fail(function (data) {
            console.log(data);
            loadPanel.hide();
        });
    }

    function GeneratePopupAssignmentGrid(DocId, usr, DocType) {
        loadPanel.show();
        var ur = "/ApprovalDecision/GetDocumentView";
        $.ajax({
            url: ur,
            method: "GET",
            data: { DocId: DocId, EmpID: usr, DocType: DocType },
            async: false,
        }).done(function (data) {
            var JSON_Response1 = [];
            JSON_Response1 = data.DocView;
            popupFindInstance = $("#ViewContainer").dxDataGrid({
                dataSource: JSON_Response1,
                keyExpr: "SNO",
                paging: { pageSize: 10 },
                columnAutoWidth: true,
                pager: { showInfo: true },
                allowColumnResizing: true,
                allowColumnReordering: true,
                showBorders: true,
                showScrollbar: 'always',
                filterRow: { visible: true },
                scrolling: {
                    mode: "horizontal",
                    showScrollbar: 'always'
                },
                selection: {
                    mode: "single"
                }
                ,
                columns: [
                    {
                        dataField: "SNO",
                        caption: "Serial No."
                    },
                    {
                        dataField: "CreateDate",
                        caption: "Doc Date"
                    },
                    {
                        dataField: "TypeOfAssignment",
                        caption: "Type Of Assignment"
                    },
                    {
                        dataField: "TypeOfBilling",
                        caption: "Type Of Billing"
                    },
                    //{
                    //    dataField: "CurrencyID",
                    //    caption: "Currency"
                    //},
                    {
                        dataField: "AssignmentValue",
                        caption: "Assignment Value"
                    },
                    {
                        dataField: "TypeOfAssignment",
                        caption: "Type Of Assignment"
                    },
                    {
                        dataField: "StartDate",
                        caption: "Start Date"
                    },
                    {
                        dataField: "EndDate",
                        caption: "End Date"
                    },
                    {
                        dataField: "STATUS",
                        caption: "Status"
                    }
                ]
            }).dxDataGrid("instance");

            $("#select-all-mode").dxSelectBox({
                dataSource: ["allPages", "page"],
                value: "allPages",
                onValueChanged: function (data) {
                    dataGrid.option("selection.selectAllMode", data.value);
                }
            });

            $("#show-checkboxes-mode").dxSelectBox({
                dataSource: ["none", "onClick", "onLongTap", "always"],
                value: "onClick",
                onValueChanged: function (data) {
                    dataGrid.option("selection.showCheckBoxesMode", data.value);
                    $("#select-all-mode").dxSelectBox("instance").option("disabled", data.value === "none");
                }
            });

            popupFindInstance.clearSelection();
            loadPanel.hide();

        }).fail(function (data) {
            console.log(data);
            loadPanel.hide();
        });
    }


</script>
