@{
    ViewBag.Title = "User Data Access";
}
<div class="pcoded-content">
    <div class="card p-20" style="min-height: 495px;">
        <!-- [ breadcrumb ] start -->
        <div class="page-header">
            <div class="page-block">
                <div class="row align-items-center">
                    <div class="col-md-6">
                        <div class="page-header-title">
                            <h4> User Data Access </h4>
                        </div>
                    </div>
                    <div class="col-md-6 text-md-right">
                        <ul class="breadcrumb">
                            <li class="breadcrumb-item"><a href="#"> Administration </a></li>
                            <li class="breadcrumb-item"> User Data Access </li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
        <!-- [ breadcrumb ] end -->
        <!-- [ Main Content ] start -->
        <div class="row">
            <div class="col-lg-12">
                <div class="form-group">
                    <div class="text-right">
                        <button id="new" class="plus-icon"> <i class="fas fa-plus-square"></i> </button>
                        @*<button id="find" class="find-icon"> <i class="fas fa-search"></i> </button>*@
                        <button id="first" class="step-backword-icon"> <i class="fas fa-step-backward"></i></button>
                        <button id="previous" class="backword-icon"> <i class="fas fa-backward"></i> </button>
                        <button id="next" class="forward-icon"> <i class="fas fa-forward"></i> </button>
                        <button id="last" class="step-forward-icon"> <i class="fas fa-step-forward"></i></button>
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-lg-5">
                <div class="form-group">
                    <label for="exampleFormControlSelect1"> User Code : </label>
                    @*<div id="UserList" class="form-control frm-cstm"></div>*@
                    <div id="empGridBox" class="form-control frm-cstm"></div>
                </div>
            </div>
            <div class="col-lg-4">
                <div class="form-group">
                    <label for="exampleFormControlSelect1"> User Name : </label>
                    <input type="text" class="form-control frm-cstm" id="UserName" placeholder="User Name" disabled="disabled" />
                </div>
            </div>
            <div class="col-lg-3">
                <div class="form-group">
                    <label for="typeCost"> Document Number : </label>
                    <input type="text" class="form-control frm-cstm" id="docNumber" placeholder="DocNum" disabled="disabled"/>
                </div>
            </div>

        </div>

        <div class="row">
            <div class="col-lg-5">
                <div class="form-group">
                    <label for="typeCost"> Designation : </label>
                    <input type="text" class="form-control frm-cstm" id="designation" placeholder="Designation" disabled="disabled"/>
                </div>
            </div>
            <div class="col-lg-4">
                <div class="form-group">
                    <label for="typeCost"> Department : </label>
                    <input type="text" class="form-control frm-cstm" id="department" placeholder="Department" disabled="disabled">
                </div>
            </div>
            <div class="col-lg-3">
                <div class="form-group">
                    <label for="typeCost"> Branch : </label>
                    <input type="text" class="form-control frm-cstm" id="branch" placeholder="Branch" disabled="disabled">
                </div>
            </div>
        </div>
      

        <div class="row">
            <div class="col-lg-12">
                <div class="table-responsive">
                    <div id="userDataAccess"></div>
                </div>
            </div>
        </div>


        <div class="row">
            <div class="col-lg-12 text-right mt-3">
                <button type="button" id="add_update" class="btn btn-success mr-2"> Add & Update </button>
                <button type="button" id="btnExpand" class="btn btn-primary mr-2"> Expand </button>
                <button type="button" id="btnCollapse" class="btn btn-primary mr-2"> Collapse </button>
              
                @{
                    TMSDeloitte.Models.UserSession sess = null;
                    if ((TMSDeloitte.Models.UserSession)HttpContext.Current.Session["TMSUserSession"] != null)
                    {
                        sess = (TMSDeloitte.Models.UserSession)HttpContext.Current.Session["TMSUserSession"];
                        if (sess.SessionUser.ISSUPER)
                        {
                            <button type="button" class="btn btn-success" data-toggle="modal" onclick='loadAuthLogData("/UserDataAccess/GetDataAccessLogByDocID");' data-target="#myModal">Show Log</button>
                        }

                        var menu = sess.pagelist.Where(x => x.ID == (int)TMSDeloitte.Helper.Enums.FormsName.UserDataAccess).FirstOrDefault();
                        if (menu != null)
                        {
                            <input type="hidden" id="AuthID" name="AuthID" value="@menu.Role">
                        }
                        else
                        {
                            <input type="hidden" id="AuthID" name="AuthID" value="-1">
                        }
                    }

                }
            </div>
        </div>

        <!-- [ Main Content ] end -->
    </div> <!-- [ Card Content ] end -->
</div>

<script type="text/javascript">
    var userInstance;
    var EmpCode = "0";
    var EmpID= 0;
    var treeList;
    var Table = [];
    var childSNo = 0;
    var DocID = 0;
    var user_Table = [];
    var index = 1;
    var allDocList = [];
    var isPageDataLoaded = false;

    function stopLoading() {
        if (isPageDataLoaded == false) {
            setTimeout(function () { stopLoading(); }, 500);
        }
        else {
            loadPanel.hide();
        }
    }

    function GetUserDataAccessData()
    {
        loadPanel.show();
        var url = "/UserDataAccess/GetUserDataAccessData";
        $.ajax({
            url: url,
            method: "GET",
            data: {},
            async: false,
        }).done(function (data) {
            allDocList = data.docList;
            GenerateUserTableDropDown(data.UserList);
            GenerateGrid(data);
            loadPanel.hide();
            setTimeout(function () {
                treeList.selectAll();
            }, 1000);
        }).fail(function (data) {
            loadPanel.hide();
        });
    }

    function GenerateGrid(data)
    {
        console.log(data);

        var MenuList = data.MenuList;
        var AuthList = data.AuthList;
        treeList = $("#userDataAccess").dxTreeList({
            dataSource: MenuList,
            keyExpr: "ID",
            parentIdExpr: "Head_ID",
            showRowLines: true,
            columnAutoWidth: true,
            showBorders: true,
            showScrollbar: 'always',
            filterRow: {
                visible: true,
                applyFilter: "auto"
            },
            selection: {
                mode: "multiple",
                recursive: true,
                showCheckBoxesMode: "always"
            },
            editing: {
                mode: "cell",
                allowUpdating: true
            },
            columns: [
                {
                caption: "S.No",
                width: 120,
                fixed: true,
                allowEditing: false,
                calculateCellValue: function (e) {

                    if (e.Head_ID == 0) {
                        return [e.ID].join(" ");

                    }
                    else {
                        if (e.ID != undefined)
                        {
                            var id = e.ID.toString();
                            if (id.charAt(id.length - 2) == "0") {
                                return [id.charAt(id.length - 1)].join(" ");
                            }
                            else {
                                return [id.charAt(id.length - 2) + id.charAt(id.length - 1)].join(" ");
                            }
                        }
                       
                       
                    }
                }
            },
            {
                dataField: "Index",
                visible: false,
            },
               {
                   dataField: "Name",
                   caption: "Manu Name",
                   allowEditing: false,
               },
                {
                    dataField: "Authorization",
                    caption: "Authorization",
                    setCellValue: function (rowData, value, currentRowData) {
                        rowData.Authorization = value;
                       currentRowData.Authorization = value;
                    },
                    lookup: {
                        dataSource: AuthList,
                        valueExpr: "Id",
                        displayExpr: "Name"
                    }
                },

            ],
            onSelectionChanged: function (e) {
            },

        }).dxTreeList("instance");

    }

    function GenerateUserTableDropDown(jsonData) {

        $("#empGridBox").dxDropDownBox({
            valueExpr: "ID",
            placeholder: "Select Employee...",
            displayExpr: "EMPLOYEECODE",
            showClearButton: true,
            dataSource: jsonData,
            contentTemplate: function (e) {
                var value = e.component.option("value"),
                    $dataGrid = $("<div>").dxDataGrid({
                        dataSource: e.component.getDataSource(),
                        columns: ["EMPLOYEECODE", "FULLNAME", "DESIGNATIONNAME", "DEPARTMENTNAME", { dataField: "BRANCHID", visible: false }],
                        hoverStateEnabled: true,
                        paging: { enabled: true, pageSize: 10 },
                        filterRow: { visible: true },
                        scrolling: { mode: "infinite" },
                        height: 345,
                        selection: { mode: "single" },
                        selectedRowKeys: value,
                        onSelectionChanged: function (selectedItems) {
                            if (selectedItems != null)
                                if (selectedItems != undefined) {
                                    var keys = selectedItems.selectedRowKeys;
                                    if (keys.length > 0) {
                                        e.component.option("value", keys[0].ID);
                                        EmpID = keys[0].ID;
                                        EmpCode = keys[0].EMPLOYEECODE;
                                        GetUserInfoByEmpCode(EmpCode);
                                        $("#empGridBox").dxDropDownBox("instance").close();

                                    }

                                }


                        }
                    });

                dataGrid = $dataGrid.dxDataGrid("instance");

                e.component.on("valueChanged", function (args) {
                    var value = args.value;
                    dataGrid.selectRows(value, false);
                });

                return $dataGrid;
            }
        });

        if (EmpID > 0) {

            $("#empGridBox").dxDropDownBox({ value: EmpID });

            GetUserInfoByEmpCode($("#empGridBox").dxDropDownBox("instance").option('text'));
        }

    }

    function GenerateUserList(userData) {
         $(function () {
             userInstance = $("#UserList").dxSelectBox({
                 cacheEnabled: false,
                 items: userData,
                 displayExpr: "EMPLOYEECODE",
                 valueExpr: "EMPLOYEECODE",
                 placeholder: "Select User Code...",
                 cssclass: "form-control frm-cstm",
                 searchEnabled: true,
                 readonly: false,
                 onValueChanged: function (data) {
                     var val = data.value;
                     EmpCode = val;
                     GetUserInfoByEmpCode(val);
                     
                 }
             });
           
        });

    }

    function GetUserInfoByEmpCode(empCode) {
        loadPanel.show();
        var url = "/UserDataAccess/GetUserInfoByEmpCode";
        $.ajax({
            url: url,
            method: "GET",
            data: { empCode: empCode },
            async: false,
        }).done(function (response) {
            treeList.clearSelection();
            EmpID = "0";
            $("#docNumber").val("");
            $("#UserName").val("");
            $("#designation").val("");
            $("#department").val("");
            $("#branch").val("");
            if (response.Success) {
                isValidateUserName = false;
                EmpID = response.UserInfo.ID;
                GetDataAccessByUserID(EmpID);
                $("#UserName").val(response.UserInfo.USERNAME);
                $("#designation").val(response.UserInfo.DESIGNATIONNAME);
                $("#department").val(response.UserInfo.DEPARTMENTNAME);
                $("#branch").val(response.UserInfo.BRANCHNAME);
            }
            loadPanel.hide();
        }).fail(function (data) {
            loadPanel.hide();
        });
    }

    function GetDataAccessByUserID(UserID) {
        loadPanel.show();
        var url = "/UserDataAccess/GetUserDataAccessByUserID?UserID=" + UserID;
        $.ajax({
            url: url,
            method: "GET",
            data: {},
            async: false,
        }).done(function (data) {
            loadPanel.hide();
          
            if (data.authList != null)
            {
                DocID = data.DocID;
                $("#docNumber").val(data.DocNum);
                var auth_Table = [];
                treeList.clearSelection();
                $.each(data.authList, function (index, val) {
                    if (val.IsChecked) {
                        auth_Table.push(val.ID);
                    }

                });
                console.log(auth_Table);
                treeList = $("#userDataAccess").dxTreeList({
                    dataSource: data.authList
                }).dxTreeList("instance");

                treeList.selectRows(auth_Table, true);
            }

        }).fail(function (data) {
            loadPanel.hide();
        });
    }

    function GetDataAccessByDocNum(docNum) {
        loadPanel.show();
        var url = "/UserDataAccess/GetUserDataAccessByDocNum?docNum=" + docNum;

        $.ajax({
            url: url,
            method: "GET",
            data: {},
            async: false,
        }).done(function (data) {
            DocID = data.DocID;
            //$("#UserList").dxSelectBox({ value: data.EmpCode });
            EmpID = data.EmpID;
            EmpCode= data.EmpCode;
            $("#empGridBox").dxDropDownBox({ value: EmpID });
            GetUserInfoByEmpCode(EmpCode);
            loadPanel.hide();
        }).fail(function (data) {
            loadPanel.hide();
        });
    }


    function loadAuthLogData(url) {
        if (DocID != 0)
        {
            url = url + "?docId=" + DocID;

            loadData(url);
        }
        


    }

    function ValidateAuthorization() {
        var id = $("#AuthID").val();
        if (id != -1) {
            if (id == 2) {
                $("#new").remove();
                $("#find").remove();
                $("#add_update").remove();
                $("#UserList").dxSelectBox({ disabled: true });
                $("#userDataAccess").dxTreeList({ disabled: true });
            }
        }
    }

    function AddUpdate()
    {

        var notSaved = $("#userDataAccess").dxTreeList('instance').getController('editing').hasChanges();
        if (notSaved) {
            setTimeout(function () { AddUpdate(); }, 2000);
        }
        else
        {
            var isSuccess = true;
            var message = '';

            var DataAccessList = treeList.getSelectedRowsData("all");
            var userID = EmpID;

            //if (DataAccessList.length == 0) {
            //    isSuccess = false;
            //    message = 'Please select atleast 1 Data Access, ';
            //}
            if (userID == 0) {
                isSuccess = false;
                message = message + 'Please select user, ';
            }

            if (isSuccess) {
                
                var url = "/UserDataAccess/AddUpdateUserDataAccess";
                $.ajax({
                    type: "POST",
                    url: url,
                    contentType: 'application/json',
                    data:
                        JSON.stringify({
                            DocID: DocID,
                            authList: DataAccessList,
                            UserID: userID
                        }),
                    dataType: "json",
                    async: false,
                    success: function (response) {
                        loadPanel.hide();
                        if (response.Success) {
                            AlertToast('success', response.Message);
                            setTimeout(function () {
                                window.location.reload();
                            }, 5000);
                        }
                        else {
                            AlertToast('error', 'Exception occured on Add/Update');
                        }

                    },
                    error: function (response) {
                        console.log(response);
                        loadPanel.hide();
                    },
                    failure: function (response) {
                        console.log(response);
                        loadPanel.hide();
                    }

                })
            }
            else {
                loadPanel.hide();
                AlertToast('error', message);
            }

        }
        
    }
   

    $('document').ready(function () {
       
        loadPanel.show();
        setTimeout(function () { GetUserDataAccessData(); }, 100);
        stopLoading();
       
        ValidateAuthorization();

        $('#add_update').click(function () {
            loadPanel.show();
            var gridContainer = $("#userDataAccess").dxTreeList("instance");
            gridContainer.saveEditData();
            setTimeout(function () { AddUpdate(); }, 2000);

        });
        $('#btnExpand').click(function () {
            var tree = $("#userDataAccess").dxTreeList("instance");
            tree.option('autoExpandAll', true);
            tree.refresh();
        });
        $('#btnCollapse').click(function () {
            treeList.collapseRow(1);
            treeList.collapseRow(2);
            treeList.collapseRow(3);
        });

        $('#new').click(function () {
            window.location.reload();
            //Table = [];
            //$("#docNumber").val("");
            //$('#docNumber').prop("disabled", true);
            //treeList.clearSelection();
            //EmpID = "0";
            //$("#UserName").val("");
            //$("#designation").val("");
            //$("#department").val("");
            //$("#UserList").dxSelectBox({ value: -1 });
        });
        $('#find').click(function () {
            $("#docNumber").val("");
            $('#docNumber').prop("disabled", false);
            treeList.clearSelection();
            EmpID = "0";
            $("#UserName").val("");
            $("#designation").val("");
            $("#department").val("");
            $("#branch").val("");
            $("#UserList").dxSelectBox({ value: -1 });
        });
        $('#first').click(function () {
            $('#docNumber').prop("disabled", true);
            index = 0;
            $("#docNumber").val(allDocList[index]);
            GetDataAccessByDocNum(allDocList[index]);
        });
        $('#last').click(function () {
            $('#docNumber').prop("disabled", true);
            index = allDocList.length - 1;
            $("#docNumber").val(allDocList[index]);
            GetDataAccessByDocNum(allDocList[index]);
        });
        $('#previous').click(function () {
            $('#docNumber').prop("disabled", true);
            if (index != 0)
            {
                index = index - 1;
                $("#docNumber").val(allDocList[index]);
                GetDataAccessByDocNum(allDocList[index]);
            }
               
        });
        $('#next').click(function () {
            $('#docNumber').prop("disabled", true);
            if (index < allDocList.length - 1)
            {
                index = index + 1;
                $("#docNumber").val(allDocList[index]);
                GetDataAccessByDocNum(allDocList[index]);
            }
                
        });


        $("#docNumber").blur(function () {

            GetDataAccessByDocNum($("#docNumber").val());

        });



    });


</script>