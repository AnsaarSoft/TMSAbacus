
@{
    ViewBag.Title = "GetAllTask";
}

<h2>TASK Master</h2>

<div class="dx-field">
    <div class="dx-field-label">Function</div>
    <div class="dx-field-value">
        <div id="searchBox"></div>
    </div>

    <div class="dx-field-label">Doc Num</div>
    <div class="dx-field-value">
        <div id="simple"></div>
    </div>
</div>
<div class="demo-container">
    <div id="gridContainer"></div>
</div>


<div class="form-actions right text-right relative">
    <input type="button" value="Add & Update" id="add_update" class="btn btn-primary" />
</div>

<script type="text/javascript">

    var Task = {};
    var Table = [];
    var serialNo = 0;
    

    
    var products = [{
        "ID": 1,
        "Value": "Audit",
        
    }, {
        "ID": 2,
        "Value": "External Audit",
        
    }, {
        "ID": 3,
        "Value": "Internal Audit",
        
    }];
    var productsDataSource = null;

    $("#simple").dxTextBox({
        disabled: true,
        value: "1003"
    });
    
    var searchBox = $("#searchBox").dxSelectBox({
        dataSource: products,
        displayExpr: "Value",
        searchEnabled: true
        ,
        onValueChanged: function (data) {
            
            if (data.value) {
                Task.FunctionID = data.value.ID;
                GenerateTaskData(Task);

            }
        }
    }).dxSelectBox("instance");

    //productsDataSource = new DevExpress.data.DataSource({
    //    store: {
    //        data: simpleProducts,
    //        type: "array",
    //        key: "ID"
    //    }
    //});

    //function GenerateCombo(JSON_Response1)
    //{

    //}
    function GenerateTaskData(Task) {
        Taskobj = Task[0];

        Task.forEach(function (obj) {
            obj.ID == undefined ? 0 : obj.ID;
            obj.DOCNUM == undefined ? '111' : obj.DOCNUM;
            obj.ISDELETED == undefined ? false : obj.ISDELETED;
            obj.ISACTIVE == undefined ? true : obj.ISACTIVE;
        })
        console.log(Task);
    }
        function GenerateGrid(JSON_Response)
        {
            $(function () {
                $("#gridContainer").dxDataGrid({
                    dataSource: JSON_Response[0].taskList,
                    keyExpr: "KEY",
                    showBorders: true,
                    showScrollbar: 'always',
                    filterRow: { visible: true },
                    scrolling: {
                        mode: "horizontal",
                        showScrollbar: 'always'
                    },
                    paging: {
                        enabled: false
                    },
                    editing: {
                        mode: "batch",
                        allowUpdating: true,
                        allowDeleting: true,
                        allowAdding: true
                    },
                    columns: [
                         {
                             dataField: "ID",
                             caption: "ID",
                             width: "auto",
                             allowEditing: false,
                             visible: false
                         },
                        {
                            dataField: "SNO",
                            caption: "S.No",
                            dataType: "Number",
                            allowEditing: false,
                            width: "auto"
                        },
                        {
                            caption: "TASK",
                            dataField: "TASK",
                            validationRules: [{ type: "required" }],

                            width: 530
                        },
                        {
                            dataField: "ISACTIVE",
                            caption: "Active",
                            dataType: "boolean",
                            width: "auto"
                        },
                         {
                             dataField: "ISDELETED",
                             caption: "Deleted",
                             dataType: "bool",
                             visible: false,
                             allowEditing: false,
                             width: "auto"
                         }
                    ],
                    onEditorPreparing: function(e) {
                        if (e.parentType == 'dataRow' && e.dataField == 'TASK') {
                            e.editorOptions.maxLength = 100;
                        }
                    },
                    onEditingStart: function (e) {
                    },
                    onInitNewRow: function (e) {
                        e.data.ID = 0;
                        e.data.ISDELETED = false;
                        e.data.ISACTIVE = true;

                    },
                    onRowInserting: function (e) {
                        serialNo = serialNo + 1;
                        e.data.SNO = serialNo ;
                    },
                    onRowInserted: function (e) {
                        var Details = {
                            KEY: e.key,
                            ID: 0,
                            SNO: e.data.SNO,
                            TASK: e.data.TASK,
                            ISACTIVE: e.data.ISACTIVE,
                            ISDELETED: false
                        };
                        Table.push(Details);
                    },
                    onRowUpdating: function (e) {
                    },
                    onRowUpdated: function (e) {
                        $.each(Table, function (index, val) {
                            if (val.KEY == e.data.KEY) {
                                val.TASK = e.data.TASK;
                                val.ISACTIVE = e.data.ISACTIVE;
                            }

                        });
                    },
                    onRowRemoving: function (e) {
                    },
                    onRowRemoved: function (e) {
                        $.each(Table, function (index, val) {
                            if (val.KEY == e.data.KEY) {
                                val.ISDELETED = true;
                            }
                        });
                    }
                });

            });
        }

        function GetAllMaster_Task() {
            var url = "/Setup/GetAllTask";
            $.ajax({
                url: url,
                method: "GET",
                data: {},
            }).done(function (data) {
                var JSON_Response = data.response;
                //var FunctionList = data.FunctionList;
                //GenerateCombo(FunctionList);
                GenerateTaskData(JSON_Response);
                GenerateGrid(JSON_Response);

                $.each(JSON_Response, function (index, val) {
                    var Details = {
                        KEY: val.KEY,
                        ID: val.ID,
                        SNO: val.SNO,
                        TASK: val.TASK,
                        ISACTIVE: val.ISACTIVE,
                        ISDELETED: val.ISDELETED
                    };
                    Table.push(Details);
                    serialNo = Table.length;
                });
            }).fail(function (data) {
            });
        }

        $('document').ready(function () {
            GetAllMaster_Task();

            $('#add_update').click(function () {
                //GenerateTaskData(JSON_Response);

                console.log(Task);
                if (Table.length > 0)
                {

                    Task.taskList = Table;
                    var url = "/Setup/AddUpdateMaster_Task";
                    $.ajax({
                        type: "POST",
                        url: url,
                        contentType: 'application/json',
                        //data: JSON.stringify(Table),
                        data: JSON.stringify(Task),
                        dataType: "json",
                        success: function (response) {
                            if (response.Success) {
                                AlertToast('success', response.Message);
                                setTimeout(function () {
                                    window.location.reload();
                                }, 5000);
                            }
                        },
                        error: function (response) {
                            console.log(response)
                        },
                        failure: function (response) {
                            console.log(response)
                        }

                    })
                }
                else
                {
                    AlertToast('error', "Please add atleast one record");
                }


            });
        });

</script>