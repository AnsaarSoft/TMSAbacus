
@{
    ViewBag.Title = "Resource Billing Rate";
}
<div class="pcoded-content">
    <div class="card p-20" style="min-height: 495px;">
        <!-- [ breadcrumb ] start -->
        <div class="page-header">
            <div class="page-block">
                <div class="row align-items-center">
                    <div class="col-md-6">
                        <div class="page-header-title">
                            <h4> Resource Billing Setup </h4>
                        </div>
                    </div>
                    <div class="col-md-6 text-md-right">
                        <ul class="breadcrumb">
                            <li class="breadcrumb-item"><a href="#"> Administration </a></li>
                            <li class="breadcrumb-item"> Setup </li>
                            <li class="breadcrumb-item"> Resource Billing Setup </li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
        <!-- [ breadcrumb ] end -->
        <!-- [ Main Content ] start -->
        <div class="row">
            <div class="col-lg-12">
                <div class="form-group">
                    <div class="text-right">
                        <button id="new" class="plus-icon"> <i class="fas fa-plus-square"></i> </button>
                        <button id="find" class="find-icon"  data-toggle="modal" onclick='GeneratePopupFindGrid();' data-target="#myModal_Find"> <i class="fas fa-search"></i> </button>
                        <button id="first" class="step-backword-icon"> <i class="fas fa-step-backward"></i></button>
                        <button id="previous" class="backword-icon"> <i class="fas fa-backward"></i> </button>
                        <button id="next" class="forward-icon"> <i class="fas fa-forward"></i> </button>
                        <button id="last" class="step-forward-icon"> <i class="fas fa-step-forward"></i></button>
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-lg-6">
                <div class="form-group">
                    <label for="exampleFormControlSelect1"> Function </label>
                    <div id="sapFunction" class="form-control frm-cstm"></div>
                </div>
            </div>

            <div class="col-lg-6">
                <div class="form-group">
                    <label for="typeCost"> Document Number: </label>
                    <input type="text" class="form-control frm-cstm" id="docNumber" placeholder="DocNum" disabled="disabled">
                </div>
            </div>

        </div>
        <div class="row">
            <div class="col-lg-6">
                <div class="form-group">
                    <label for="exampleFormControlSelect1"> From Date </label>
                    <div id="fromDate"></div>
                </div>
            </div>

            <div class="col-lg-6">
                <div class="form-group">
                    <label for="typeCost">To Date: </label>
                    <div id="toDate"></div>
                </div>
            </div>

        </div>


        <div class="row">
            <div class="col-lg-12">
                <div class="table-responsive">
                    <div id="gridContainer"></div>
                </div>
            </div>
        </div>


        <div class="row">
            <div class="col-lg-12 text-right mt-3">
                <input type="button" value="Add & Update" id="add_update" class="btn btn-primary" />
                @{
                    TMSDeloitte.Models.UserSession sess = null;
                    if ((TMSDeloitte.Models.UserSession)HttpContext.Current.Session["TMSUserSession"] != null)
                    {
                        sess = (TMSDeloitte.Models.UserSession)HttpContext.Current.Session["TMSUserSession"];
                        if (sess.SessionUser.ISSUPER)
                        {
                            <button type="button" class="btn btn-success" data-toggle="modal" onclick='loadAuthLogData("/ResourceBillingRate/GetResourceBillingRateSetupLog");' data-target="#myLogModal">Show Log</button>
                        }

                        var menu = sess.pagelist.Where(x => x.ID == (int)TMSDeloitte.Helper.Enums.FormsName.ResourceBillingRateSetup).FirstOrDefault();
                        if (menu != null)
                        {
                            <input type="hidden" id="AuthID" name="AuthID" value="@menu.Role">
                        }
                        else
                        {
                            <input type="hidden" id="AuthID" name="AuthID" value="-1">
                        }
                    }

                }

               
            </div>
        </div>

        <!-- [ Main Content ] end -->
    </div> <!-- [ Card Content ] end -->
</div>


   <div id="myModal_Find" class="modal fade" role="dialog">
    <div class="modal-dialog modal-lg">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">×</button>

            </div>
            <div class="modal-body">
                <div id="FindContainer"></div>
            </div>
            <div class="modal-footer">
                <button type="button" id="btnOk" class="btn btn-primary">Ok</button>
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
            </div>
        </div>
    </div>
</div>

<div id="myLogModal" class="modal fade" role="dialog">
    <div class="modal-dialog modal-lg">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                @*<h4 class="modal-title">Log</h4>*@
                <button type="button" class="close" data-dismiss="modal">×</button>
            </div>

            <div class="modal-body">
                <h8>Header Log</h8>
                <div id="HeaderLogContainer"></div>
            </div>
            <div class="modal-body">
                <h8>Detail Log</h8>
                <div id="DetailLogContainer"></div>
            </div>
        </div>
    </div>
</div>


<script type="text/javascript">

        var Table = [];
        var serialNo = 0;
        var functionID = 0;
        var DocNum = "";
        var DocId = 0;
        var DocIsDeleted = false;
        var allDocList = [];
        var index = 1;
        var popupFindInstance;
        var allFunctionList;
        var allDesignationList;

        var isDateRangeError = false;

        function GenerateDateBox()
        {
            var now = new Date();
            $("#fromDate").dxDateBox({
                type: "date",
                pickerType: "calendar",
                value: now,
                displayFormat: "dd/MM/yyyy",
                onValueChanged: function (data) {
                    $("#toDate").dxDateBox({min: data.value});
                }
            });

            $("#toDate").dxDateBox({
                type: "date",
                pickerType: "calendar",
                value: now,
                displayFormat: "dd/MM/yyyy",
                onValueChanged: function (data) {
                    $("#fromDate").dxDateBox({ max: data.value });
                }
            });
            $('.dx-texteditor-input').attr('readonly', true);
        }

        function GetLogData(url) {
            loadData(url+"?docNum=" + DocNum);
        }

        function GenerateGrid(JSON_Response) {
            $("#gridContainer").dxDataGrid({
                dataSource: JSON_Response,
                keyExpr: "KEY",
                columnAutoWidth: true,
                allowColumnResizing: true,
                allowColumnReordering: true,
                showBorders: true,
                showScrollbar: 'always',
                filterRow: { visible: true },
                editing: {
                    mode: "cell",
                    allowUpdating: true
                },
                scrolling: {
                    mode: "horizontal",
                    showScrollbar: 'always'
                },
                paging: {
                    enabled: false
                },
                editing: {
                    mode: "batch",
                    allowUpdating: true,
                    allowDeleting: true,
                    allowAdding: true
                },
                columns: [
                     {
                         dataField: "ID",
                         caption: "ID",
                         width: "auto",
                         allowEditing: false,
                         visible: false
                     },
                     {
                         dataField: "DesignationID",
                         caption: "DesignationID",
                         width: "auto",
                         allowEditing: false,
                         visible: false
                     },
                    {
                        dataField: "SNO",
                        caption: "S.No",
                        dataType: "number",
                        allowEditing: false,
                        width: "auto"
                    },
                    {
                        dataField: "DesignationID",
                        caption: "Designation",
                        setCellValue: function (rowData, value) {
                            rowData.DesignationID = value;
                        },
                        lookup: {
                            dataSource: allDesignationList,
                            valueExpr: "Id",
                            displayExpr: "Name"
                        }
                    },
                    {
                        caption: "Rates/Hour",
                        dataField: "RatesPerHour",
                        dataType: "number",
                        alignment: "right",
                        validationRules: [{ type: "required" }],
                        width: 230
                    },
                    {
                        dataField: "IsActive",
                        caption: "Active",
                        dataType: "boolean",
                        width: "auto"
                    },
                     {
                         dataField: "ISDELETED",
                         caption: "Deleted",
                         visible: false,
                         allowEditing: false,
                         width: "auto"
                     }
                ],
                onEditorPreparing: function (e) {
                    if (e.parentType == 'dataRow' && e.dataField == 'TYPEOFCOST') {
                        e.editorOptions.maxLength = 100;
                    }
                },
                onEditingStart: function (e) {
                },
                onInitNewRow: function (e) {
                    e.data.ID = 0;
                    e.data.IsDeleted = false;
                    e.data.IsActive = true;
                    serialNo = serialNo + 1;
                    e.data.SNO = serialNo;
                },
                onRowInserting: function (e) {
                   
                },
                onRowInserted: function (e) {
                    var Details = {
                        KEY: e.data.KEY,
                        ID: 0,
                        DocNum: e.data.DocNum,
                        SNO: e.data.SNO,
                        RatesPerHour:e.data.RatesPerHour,
                        DesignationID: e.data.DesignationID,
                        IsDeleted: false,
                        IsActive: e.data.IsActive
                    };
                    Table.push(Details);
                },
                onRowUpdating: function (e) {
                },
                onRowUpdated: function (e) {
                    $.each(Table, function (index, val) {
                        if (val.KEY == e.data.KEY) {
                            val.DesignationID = e.data.DesignationID;
                            val.RatesPerHour = e.data.RatesPerHour;
                            val.IsActive = e.data.IsActive;
                        }

                    });
                },
                onRowRemoving: function (e) {
                },
                onRowRemoved: function (e) {
                    $.each(Table, function (index, val) {
                        
                        if (val.KEY == e.data.KEY) {
                            val.IsDeleted = true;
                        }
                    });
                }
            });
        }
       
        function GetResourceBillingRateByFunctionID(docID) {
            
            Table = [];
            serialNo = 0;
            var url = "/ResourceBillingRate/GetResourceBillingRateByID/" + docID;
            $.ajax({
                url: url,
                method: "GET",
                data: {},
                async: false,
            }).done(function (data) {

                $("#docNumber").val("");
                
                var JSON_Response = JSON.parse(data.response.Data);


                DocId = JSON_Response.ID;
                DocNum = JSON_Response.DocNum;

                $("#docNumber").val(DocNum);
                $("#sapFunction").dxSelectBox({ value: JSON_Response.FunctionID });

                var from = JSON_Response.FromDate.split("/");
                var fDate = new Date(from[0], from[1] - 1, from[2])

                var to = JSON_Response.ToDate.split("/");
                var tDate = new Date(to[0], to[1] - 1, to[2])

                $("#fromDate").dxDateBox({ value: fDate });
                $("#toDate").dxDateBox({ value: tDate });

                GenerateGrid(JSON_Response.Detail);
                $.each(JSON_Response.Detail, function (index, val) {

                    var Details = {
                        KEY: val.KEY,
                        ID: val.ID,
                        DocNum: val.DocNum,
                        SNO: val.SNO,
                        RatesPerHour: val.RatesPerHour,
                        DesignationID: val.DesignationID,
                        IsActive: val.IsActive,
                        IsDeleted: val.IsDeleted
                    };
                    Table.push(Details);
                    
                });

                serialNo = Table.length;

                $('#docNumber').prop("disabled", true);


            }).fail(function (data) {
            });
        }

        function GenerateSAPFunctionDropDown(jsonResponse) {
            $("#sapFunction").dxSelectBox({
                cacheEnabled: false,
                items: jsonResponse,
                displayExpr: "FunctionName",
                valueExpr: "FunctionCode",
                placeholder: "Select Function...",
                cssclass: "form-control frm-cstm",
                searchEnabled: true,
                readonly: false,
                onValueChanged: function (data) {
                    var val = data.value;
                    functionID = val;
                    //if (val != "")
                    //{
                    //    GetResourceBillingRateByFunctionID(val);
                    //}
                   
                }
            });
        }

        function GetSAPFunction() {
            var url = "/ResourceBillingRate/GetSapFunctions";
            $.ajax({
                url: url,
                method: "GET",
                data: {},
                async: false
            }).done(function (data) {
                var JSON_Response = data.response;
                allDocList = data.docList;
                allFunctionList = JSON_Response;
                allDesignationList = data.DesignationList;
                GenerateSAPFunctionDropDown(JSON_Response);

            }).fail(function (data) {
            });
        }

        function GetResourceBillingRateByDocNum(docNum)
        {
            Table = [];
            serialNo = 0;
            var url = "/ResourceBillingRate/GetResourceBillingRateByDocNum?docNum=" + docNum;
            $.ajax({
                url: url,
                method: "GET",
                data: {},
                async: false,
            }).done(function (data) {

                $("#docNumber").val("");

                var JSON_Response = JSON.parse(data.response.Data);


                DocId = JSON_Response.ID;
                DocNum = JSON_Response.DocNum;

                $("#docNumber").val(DocNum);
                $("#sapFunction").dxSelectBox({ value: JSON_Response.FunctionID });

                var from = JSON_Response.FromDate.split("/");
                var fDate = new Date(from[0], from[1] - 1, from[2])

                var to = JSON_Response.ToDate.split("/");
                var tDate = new Date(to[0], to[1] - 1, to[2])

                $("#fromDate").dxDateBox({ value: fDate });
                $("#toDate").dxDateBox({ value: tDate });

                GenerateGrid(JSON_Response.Detail);
                $.each(JSON_Response.Detail, function (index, val) {

                    var Details = {
                        KEY: val.KEY,
                        ID: val.ID,
                        DocNum: val.DocNum,
                        SNO: val.SNO,
                        RatesPerHour: val.RatesPerHour,
                        DesignationID: val.DesignationID,
                        IsActive: val.IsActive,
                        IsDeleted: val.IsDeleted
                    };
                    Table.push(Details);

                });

                serialNo = Table.length;

                $('#docNumber').prop("disabled", true);


            }).fail(function (data) {
            });
        }

        function AddUpdate() {
            var notSaved = $('#gridContainer').dxDataGrid('instance').getController('editing').hasChanges();
            if (notSaved)
            {
                setTimeout(function () { AddUpdate(); }, 2000);
            }
            else {

                if (Table.length == 0) {
                    loadPanel.hide();
                    AlertToast('error', "Please add record!");
                    return;
                }
               

                var Fdate = $("#fromDate").dxDateBox("instance").option('value');
                var Fday = Fdate.getDate();       // yields date
                var Fmonth = Fdate.getMonth() + 1;    // yields month (add one as '.getMonth()' is zero indexed)
                var Fyear = Fdate.getFullYear();  // yields year
                var Fhour = Fdate.getHours();     // yields hours
                var Fminute = Fdate.getMinutes(); // yields minutes
                var Fsecond = Fdate.getSeconds(); // yields seconds
                var fromDate = Fyear + "/" + Fmonth + "/" + Fday + " " + Fhour + ':' + Fminute + ':' + Fsecond;

                var Tdate = $("#toDate").dxDateBox("instance").option('value');
                var Tday = Tdate.getDate();       // yields date
                var Tmonth = Tdate.getMonth() + 1;    // yields month (add one as '.getMonth()' is zero indexed)
                var Tyear = Tdate.getFullYear();  // yields year
                var Thour = Tdate.getHours();     // yields hours
                var Tminute = Tdate.getMinutes(); // yields minutes
                var Tsecond = Tdate.getSeconds(); // yields seconds
                var toDate = Tyear + "/" + Tmonth + "/" + Tday + " " + Thour + ':' + Tminute + ':' + Tsecond;

                var url = "/ResourceBillingRate/AddUpdateResourceBillingRate";
                var data = {};
                data.ID = DocId;
                data.DocNum = DocNum;
                data.FunctionID = functionID;
                data.FromDate = fromDate;
                data.ToDate = toDate;
                data.ISDELETED = DocIsDeleted;
                data.Detail = Table;
                $.ajax({
                    type: "POST",
                    url: url,
                    contentType: 'application/json',
                    data: JSON.stringify(data),
                    dataType: "json",
                    async: false,
                    success: function (response) {
                        loadPanel.hide();
                        if (response.Success) {
                            AlertToast('success', response.Message);
                            setTimeout(function () {
                                window.location.reload();
                            }, 5000);
                        }
                        else {
                            AlertToast('error', response.Message);
                        }
                    },
                    error: function (response) {
                        loadPanel.hide();
                        console.log(response);
                    },
                    failure: function (response) {
                        loadPanel.hide();
                        console.log(response);
                    }

                });

            }

        }

        function GeneratePopupFindGrid() {
            loadPanel.show();
            var ur = "/ResourceBillingRate/GetResourceBillingRateAllDocuments";
            $.ajax({
                url: ur,
                method: "GET",
                data: {},
                async: false,
            }).done(function (data) {
                var JSON_Response = JSON.parse(data.response.Data);
                popupFindInstance = $("#FindContainer").dxDataGrid({
                    dataSource: JSON_Response,
                    keyExpr: "DocNum",
                    paging: { pageSize: 10 },
                    columnAutoWidth: true,
                    pager: { showInfo: true },
                    allowColumnResizing: true,
                    allowColumnReordering: true,
                    showBorders: true,
                    showScrollbar: 'always',
                    filterRow: { visible: true },
                    scrolling: {
                        mode: "horizontal",
                        showScrollbar: 'always'
                    },
                    selection: {
                        mode: "single"
                    },
                    columns: [
                        {
                            dataField: "ID",
                            caption: "ID",
                            visible: false
                        },
                        {
                            dataField: "DocNum",
                            caption: "Document #"
                        },
                        {
                            dataField: "FunctionID",
                            visible: false
                        },
                         {
                             dataField: "FunctionID",
                             caption: "Function",
                             setCellValue: function (rowData, value, currentRowData) {
                                 rowData.Authorization = value;
                                 currentRowData.Authorization = value;
                             },
                             lookup: {
                                 dataSource: allFunctionList,
                                 valueExpr: "FunctionCode",
                                 displayExpr: "FunctionName"
                             }
                         },
                         {
                             dataField: "FromDate",
                             caption: "From Date"
                         },
                         {
                             dataField: "ToDate",
                             caption: "To Date"
                         },
                        {
                            dataField: "CreatedDate",
                            caption: "Created Date"
                        }
                    ]
                }).dxDataGrid("instance");

                $("#select-all-mode").dxSelectBox({
                    dataSource: ["allPages", "page"],
                    value: "allPages",
                    onValueChanged: function (data) {
                        dataGrid.option("selection.selectAllMode", data.value);
                    }
                });

                $("#show-checkboxes-mode").dxSelectBox({
                    dataSource: ["none", "onClick", "onLongTap", "always"],
                    value: "onClick",
                    onValueChanged: function (data) {
                        dataGrid.option("selection.showCheckBoxesMode", data.value);
                        $("#select-all-mode").dxSelectBox("instance").option("disabled", data.value === "none");
                    }
                });

                popupFindInstance.clearSelection();

                loadPanel.hide();

            }).fail(function (data) {
                console.log(data);
                loadPanel.hide();
            });


           
        }

        function ValidateAuthorization() {
            var id = $("#AuthID").val();
            var isSuccess = false;

            if (id == -1)
                isSuccess = true;
            if (id == 2)
                isSuccess = true;

            if (isSuccess) {
                $("#add_update").remove();
                $("#gridContainer").dxDataGrid({ disabled: true });
            }
        }
    
        function ValidateDateRange()
        {
            if(functionID!="")
            {
                loadPanel.show();
                var Fdate = $("#fromDate").dxDateBox("instance").option('value');
                var Fday = Fdate.getDate();       // yields date
                var Fmonth = Fdate.getMonth() + 1;    // yields month (add one as '.getMonth()' is zero indexed)
                var Fyear = Fdate.getFullYear();  // yields year
                var Fhour = Fdate.getHours();     // yields hours
                var Fminute = Fdate.getMinutes(); // yields minutes
                var Fsecond = Fdate.getSeconds(); // yields seconds
                var fromDate = Fday + "/" + Fmonth + "/" + Fyear + " " + Fhour + ':' + Fminute + ':' + Fsecond;

                var Tdate = $("#toDate").dxDateBox("instance").option('value');
                var Tday = Tdate.getDate();       // yields date
                var Tmonth = Tdate.getMonth() + 1;    // yields month (add one as '.getMonth()' is zero indexed)
                var Tyear = Tdate.getFullYear();  // yields year
                var Thour = Tdate.getHours();     // yields hours
                var Tminute = Tdate.getMinutes(); // yields minutes
                var Tsecond = Tdate.getSeconds(); // yields seconds
                var toDate = Tday + "/" + Tmonth + "/" + Tyear + " " + Thour + ':' + Tminute + ':' + Tsecond;

                var url = "/ResourceBillingRate/ValidateDateRange";
                $.ajax({
                    url: url,
                    method: "POST",
                    data: {
                        functionID: functionID,
                        fromDate: fromDate,
                        toDate: toDate
                    },
                    async: false,
                }).done(function (data) {
                    loadPanel.hide();
                    console.log(data);
                    isDateRangeError = data.Success;
                    return isDateRangeError;
                    //if(isDateRangeError)
                    //    AlertToast('error', "Record exist in this date range!");

                }).fail(function (data) {
                    loadPanel.hide();
                    return false;
                });
            }

           
        }

        function loadAuthLogData(url) {
            if (DocId != 0) {
                url = url + "?docId=" + DocId;

                $.ajax({
                    url: url,
                    method: "GET",
                    data: {},
                    async: false,
                }).done(function (data) {
                    data = JSON.parse(data.response.Data);
                    console.log(data);
                    $("#HeaderLogContainer").dxDataGrid({
                        dataSource: data.Table,
                        paging: { pageSize: 10 },
                        columnAutoWidth: true,
                        pager: { showInfo: true },
                        allowColumnResizing: true,
                        allowColumnReordering: true,
                        showBorders: true,
                        showScrollbar: 'always',
                        filterRow: { visible: true },
                        scrolling: {
                            mode: "horizontal",
                            showScrollbar: 'always'
                        },
                    });
                    $("#DetailLogContainer").dxDataGrid({
                        dataSource: data.Table1,
                        paging: { pageSize: 10 },
                        columnAutoWidth: true,
                        pager: { showInfo: true },
                        allowColumnResizing: true,
                        allowColumnReordering: true,
                        showBorders: true,
                        showScrollbar: 'always',
                        filterRow: { visible: true },
                        scrolling: {
                            mode: "horizontal",
                            showScrollbar: 'always'
                        },
                    });
                   
                }).fail(function (data) {
                    console.log(data);
                });
            }



        }


        $('document').ready(function () {

            GenerateDateBox();
            GetSAPFunction();
            GenerateGrid([]);
            ValidateAuthorization();

            $('#add_update').click(function () {
                var isSuccess = true;;
                var showMsg = "";

                if (functionID == "") {
                    isSuccess = false;
                    showMsg = "Please select function!";
                }
               
                if (isSuccess) {
                    loadPanel.show();
                    var gridContainer = $("#gridContainer").dxDataGrid("instance");
                    gridContainer.getController('validating').validate(true).done(function (result) {
                        if (result)
                        {
                            gridContainer.saveEditData();
                            setTimeout(function () { AddUpdate(); }, 2000);
                        }
                        else
                        {
                            loadPanel.hide();
                            AlertToast('error', "Please fill required fields!");
                        }

                    });
                  
                }
                else {
                    AlertToast('error', showMsg);
                }
               
            });
            $('#new').click(function () {
                DocNum = "";
                DocId = 0;
                GenerateGrid([]);
                Table = [];
                GenerateDateBox();
                $("#sapFunction").dxSelectBox({ value: "" });
                $("#docNumber").val("");
                $('#docNumber').prop("disabled", true);
                serialNo = 0;
            });
            $('#find').click(function () {
                $("#docNumber").val("");
                $('#docNumber').prop("disabled", false);
            });
            $('#first').click(function () {
                $('#docNumber').prop("disabled", true);
                index = 0;
                GetResourceBillingRateByDocNum(allDocList[index]);
            });
            $('#last').click(function () {
                $('#docNumber').prop("disabled", true);
                index = allDocList.length - 1;
                GetResourceBillingRateByDocNum(allDocList[index]);
            });
            $('#previous').click(function () {
                $('#docNumber').prop("disabled", true);
                if (index != 0)
                    index = index - 1;
                GetResourceBillingRateByDocNum(allDocList[index]);
            });
            $('#next').click(function () {
                $('#docNumber').prop("disabled", true);
                if (index < allDocList.length-1)
                    index = index + 1;

                GetResourceBillingRateByDocNum(allDocList[index]);
            });
            $('#btnOk').click(function () {
                var selectedRow = popupFindInstance.getSelectedRowsData();
                if (selectedRow.length > 0)
                {
                    GetResourceBillingRateByFunctionID(selectedRow[0].ID);
                }
                $('#myModal_Find').modal('hide');
                $('body').removeClass('modal-open');
                $('.modal-backdrop').remove();

            });
            $("#docNumber").blur(function () {

                GetResourceBillingRateByDocNum($("#docNumber").val());

            });
        });

</script>

