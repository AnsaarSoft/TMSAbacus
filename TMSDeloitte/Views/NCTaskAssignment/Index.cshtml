
@{
    ViewBag.Title = "NC Task Assignment Form";
}



<div class="pcoded-content">
    <div class="card p-20" style="min-height: 495px;">
        <!-- [ breadcrumb ] start -->
        <div class="page-header">
            <div class="page-block">
                <div class="row align-items-center">
                    <div class="col-md-6">
                        <div class="page-header-title">
                            <h4> NC Task Assignment Form </h4>
                        </div>
                    </div>
                    <div class="col-md-6 text-md-right">
                        <ul class="breadcrumb">
                            <li class="breadcrumb-item"><a href="#"> Administration </a></li>
                            <li class="breadcrumb-item"> Project Management </li>
                            <li class="breadcrumb-item"> NC Task Assignment Form </li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
        <!-- [ breadcrumb ] end -->
        <!-- [ Main Content ] start -->
        <div class="row">
            <div class="col-lg-12">
                <div class="form-group">
                    <div class="text-right">
                        <button id="new" class="plus-icon"> <i class="fas fa-plus-square"></i> </button>
                        <button id="find" class="find-icon" data-toggle="modal" onclick='GeneratePopupFindGrid();' data-target="#myModal_Find"> <i class="fas fa-search"></i> </button>
                        <button id="first" class="step-backword-icon"> <i class="fas fa-step-backward"></i></button>
                        <button id="previous" class="backword-icon"> <i class="fas fa-backward"></i> </button>
                        <button id="next" class="forward-icon"> <i class="fas fa-forward"></i> </button>
                        <button id="last" class="step-forward-icon"> <i class="fas fa-step-forward"></i></button>
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-lg-6">
                <div class="form-group">
                    <label for="exampleFormControlSelect1"> Employee Code: </label>
                    <div id="empGridBox" class="form-control frm-cstm"></div>
                </div>
            </div>

            <div class="col-lg-6">
                <div class="form-group">
                    <label for="typeCost"> Document Number: </label>
                    <input type="text" class="form-control frm-cstm" id="docNumber" placeholder="DocNum" disabled="disabled">
                </div>
            </div>

        </div>
        <div class="row">
            <div class="col-lg-6">
                <div class="form-group">
                    <label for="exampleFormControlSelect1">Employee Name: </label>
                    <input type="text" class="form-control frm-cstm" id="employeeName" placeholder="Employee Name" readonly />
                </div>
            </div>

            <div class="col-lg-6">
                <div class="form-group">
                    <label for="exampleFormControlSelect1">Doc Date </label>
                    <div id="docDate"></div>
                </div>
            </div>

        </div>

        <div class="row">
            <div class="col-lg-6">
                <div class="form-group">
                    <label for="exampleFormControlSelect1">Department: </label>
                    <input type="text" class="form-control frm-cstm" id="department" placeholder="Department" readonly />
                </div>
            </div>
            <div class="col-lg-6">
                <div class="form-group">
                    <label for="exampleFormControlSelect1">Branch: </label>
                    <input type="text" class="form-control frm-cstm" id="branch" placeholder="Branch" readonly />
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-lg-6">
                <div class="form-group">
                    <label for="exampleFormControlSelect1">Designation: </label>
                    <input type="text" class="form-control frm-cstm" id="designation" placeholder="Designation" readonly />
                </div>
            </div>



        </div>

        <div class="row">
            <div class="col-lg-12">
                <div class="table-responsive">
                    <div id="gridContainer"></div>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-lg-12 text-right mt-3">
                <button type="button" id="add_update" class="btn btn-primary mr-2"> Add & Update </button>
                @{
                    TMSDeloitte.Models.UserSession sess = null;
                    if ((TMSDeloitte.Models.UserSession)HttpContext.Current.Session["TMSUserSession"] != null)
                    {
                        sess = (TMSDeloitte.Models.UserSession)HttpContext.Current.Session["TMSUserSession"];
                        if (sess.SessionUser.ISSUPER)
                        {
                            <button type="button" class="btn btn-success" data-toggle="modal" onclick='loadAuthLogData("/NCTaskAssignment/GeNCTaskAssignmentLog");' data-target="#myLogModal"> Show Log </button>
                        }

                        var menu = sess.pagelist.Where(x => x.ID == (int)TMSDeloitte.Helper.Enums.FormsName.NCTaskAssignmentForm).FirstOrDefault();
                        if (menu != null)
                        {
                            <input type="hidden" id="AuthID" name="AuthID" value="@menu.Role">
                        }
                        else
                        {
                            <input type="hidden" id="AuthID" name="AuthID" value="-1">
                        }
                    }

                }


            </div>
        </div>
        <!-- [ Main Content ] end -->
    </div> <!-- [ Card Content ] end -->
</div>


<div id="myModal_Confirmation" class="modal fade" role="dialog">
    <div class="modal-dialog modal-lg">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                Confirmation
                <button type="button" class="close" data-dismiss="modal">×</button>

            </div>
            <div class="modal-body">
                Are you sure want to remove?
            </div>
            <div class="modal-footer">
                <button type="button" id="btnYes" _name="" class="btn btn-primary">Yes</button>
                <button type="button" class="btn btn-secondary" data-dismiss="modal">No</button>
            </div>
        </div>
    </div>
</div>

<div id="myModal_Find" class="modal fade" role="dialog">
    <div class="modal-dialog modal-lg">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">×</button>

            </div>
            <div class="modal-body">
                <div id="FindContainer"></div>
            </div>
            <div class="modal-footer">
                <button type="button" id="btnOk" class="btn btn-primary">Ok</button>
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
            </div>
        </div>
    </div>
</div>

<div id="myLogModal" class="modal fade" role="dialog">
    <div class="modal-dialog modal-lg">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                @*<h4 class="modal-title">Log</h4>*@
                <button type="button" class="close" data-dismiss="modal">×</button>
            </div>

            <div class="modal-body">
                <h8>Header Log</h8>
                <div id="HeaderLogContainer"></div>
            </div>
            <div class="modal-body">
                <h8>Detail Log</h8>
                <div id="DetailLogContainer"></div>
            </div>
        </div>
    </div>
</div>


<script type="text/javascript">

        var Table = [];
        var serialNo = 0;
        var DocNum = "";
        var DocId = 0;
        var allDocList = [];
        var index = 1;
        var EmpCode = "0";
        var HcmOneID = 0;
        var taskList = [];
        var gridInstance;
        var popupFindInstance;
        var isPageDataLoaded = false;
        var allDocument = [];

        function stopLoading() {
            if (isPageDataLoaded == false) {
                loadPanel.show();
                setTimeout(function () { stopLoading(); }, 500);
            }
            else {
                loadPanel.hide();
            }
        }

        function GetHCMUser() {
            var url = "/NCTaskAssignment/GetUsers";
            $.ajax({
                url: url,
                method: "GET",
                data: {},
                async: false,
            }).done(function (data) {

                GenerateUserTableDropDown(data.response);

                isPageDataLoaded = true;

            }).fail(function (data) {
                console.log(data);
                isPageDataLoaded = true;
            });
        }

        function GenerateUserTableDropDown(jsonData) {
            $("#empGridBox").dxDropDownBox({
                valueExpr: "ID",
                placeholder: "Select Employee...",
                displayExpr: "EMPLOYEECODE",
                showClearButton: true,
                dataSource: jsonData,
                contentTemplate: function (e) {
                    var value = e.component.option("value"),
                        $dataGrid = $("<div>").dxDataGrid({
                            dataSource: e.component.getDataSource(),
                            columns: [
                                "EMPLOYEECODE",
                                { dataField: "FAX", caption: "OLD CODE" },
                                "FULLNAME", "DESIGNATIONNAME",
                                "DEPARTMENTNAME",
                                { dataField: "BRANCHID", visible: false },
                                { dataField: "BRANCHNAME", visible: false }
                            ],
                            hoverStateEnabled: true,
                            paging: { enabled: true, pageSize: 10 },
                            filterRow: { visible: true },
                            scrolling: { mode: "infinite" },
                            height: 345,
                            selection: { mode: "single" },
                            selectedRowKeys: value,
                            onSelectionChanged: function (selectedItems) {
                                if (selectedItems != null)
                                    if (selectedItems != undefined) {
                                        var keys = selectedItems.selectedRowKeys;
                                        if (keys.length > 0) {
                                            e.component.option("value", keys[0].ID);

                                            $("#employeeName").val(keys[0].FULLNAME);
                                            $("#department").val(keys[0].DEPARTMENTNAME);
                                            $("#designation").val(keys[0].DESIGNATIONNAME);
                                            $("#branch").val(keys[0].BRANCHNAME);
                                            $("#empGridBox").dxDropDownBox("instance").close();
                                            var id = $("#empGridBox").dxDropDownBox("instance").option('value');
                                            GetNCTaskByEmpID(id, null);
                                            var document = allDocument.filter(x=>x.EmpID == keys[0].ID);
                                            if(document.length>0)
                                            {
                                                GetNCTaskAssignmentByDocNum(document[0].DocNum);
                                            }
                                            else
                                            {
                                                $("#docNumber").val("");
                                                Table = [];
                                                GenerateGrid(Table);
                                                serialNo = 0;
                                            }
                                        }

                                    }


                            }
                        });

                    dataGrid = $dataGrid.dxDataGrid("instance");

                    e.component.on("valueChanged", function (args) {
                        var value = args.value;
                        dataGrid.selectRows(value, false);
                    });

                    return $dataGrid;
                }
            });

            //if (EmpID > 0) {

            //    $("#empGridBox").dxDropDownBox({ value: EmpID });

            //    GetUserInfoByEmpCode($("#empGridBox").dxDropDownBox("instance").option('text'));
            //}

        }

        function GetDocList() {
            var url = "/NCTaskAssignment/GetAllDocuments";
            $.ajax({
                url: url,
                method: "GET",
                data: {},
                async: false
            }).done(function (data) {

                allDocList = data.docList;
              
            }).fail(function (data) {
                console.log(data);
                isPageDataLoaded = true;
            });
        }

        function GetAllDocument()
        {
            var ur = "/NCTaskAssignment/GetAllDocumentsByEmpID";
            $.ajax({
                url: ur,
                method: "GET",
                data: {},
                async: false,
            }).done(function (data) {
                allDocument = JSON.parse(data.response.Data);
                allDocList = data.docList;
            }).fail(function (data) {
                console.log(data);
                loadPanel.hide();
            });
        }
       
        function GetNCTaskByEmpID(id,SavedList) {
            if (id == 0)
                return;
            if (id == undefined)
                return;

            var url = "/NCTaskAssignment/GetNCTaskByEmpID?id=" + id;
            $.ajax({
                url: url,
                method: "GET",
                data: {},
                async: false
            }).done(function (data) {
                taskList = JSON.parse(data.dt_TaskList.Data);
                if (DocId > 0)
                {
                    if (SavedList != null)
                    {
                        $.each(SavedList, function (index, val) {
                           
                            var Details = {
                                ID: val.ID,
                                Name: val.Name
                            };
                            taskList.push(Details);
                        });
                        GenerateGrid(Table);
                    }
                    
                }
                else
                {
                    GenerateGrid([]);
                }
               

            }).fail(function (data) {
                console.log(data);
            });
        }

        function GenerateDateBox()
        {
            var now = new Date();

            $("#docDate").dxDateBox({
                type: "date",
                pickerType: "calendar",
                value: now,
                displayFormat: "dd/MM/yyyy",
                onValueChanged: function (data) {
                    // $("#toDate").dxDateBox({min: data.value});

                }
            });


            $('.dx-texteditor-input').attr('readonly', true);
        }


        function GetUserInfoByEmpCode(empCode) {
            loadPanel.show();
            var url = "/NCTaskAssignment/GetUserInfoByEmpCode";
            $.ajax({
                url: url,
                method: "GET",
                async: false,
                data: { empCode: empCode },
            }).done(function (response) {
                $("#employeeName").val("");
                $("#department").val("");
                $("#branch").val("");
                $("#designation").val("");
                if (response.Success) {
                    $("#employeeName").val(response.UserInfo.FULLNAME);
                    $("#department").val(response.UserInfo.DEPARTMENTNAME);
                    $("#branch").val(response.UserInfo.BRANCHNAME);
                    $("#designation").val(response.UserInfo.DESIGNATIONNAME);
                }


                loadPanel.hide();

            }).fail(function (data) {
                loadPanel.hide();
            });
        }

        function GetLogData(url) {
            loadData(url+"?docNum=" + DocNum);
        }

        function GenerateGrid(JSON_Response) {
            gridInstance= $("#gridContainer").dxDataGrid({
                dataSource: JSON_Response,
                keyExpr: "KEY",
                columnAutoWidth: true,
                allowColumnResizing: true,
                allowColumnReordering: true,
                showBorders: true,
                showScrollbar: 'always',
                filterRow: { visible: true },
                editing: {
                    mode: "cell",
                    allowUpdating: true
                },
                scrolling: {
                    mode: "horizontal",
                    showScrollbar: 'always'
                },
                paging: { pageSize: 10 },
                editing: {
                    mode: "batch",
                    allowUpdating: true,
                    allowDeleting: true,
                    allowAdding: true
                },
                columns: [
                    {
                        dataField: "ID",
                        allowEditing: false,
                        visible:false,
                    },
                    {
                        dataField: "HeaderID",
                        allowEditing: false,
                        visible: false,
                    },
                    {
                        dataField: "SNo",
                        caption: "S.No",
                        dataType: "number",
                        allowEditing: false,
                        width:"45"
                    },
                     
                     {
                         dataField: "TaskID",
                         caption: "Task",
                         validationRules: [{ type: "required" }],
                         setCellValue: function (rowData, value) {
                             rowData.TaskID = value;
                         },
                         lookup: {
                             dataSource: taskList,
                             valueExpr: "ID",
                             displayExpr: "Name"
                         }
                     },

                    
                       {
                           dataField: "IsActive",
                           caption: "Active",
                           allowEditing: true,
                           dataType: 'boolean',
                           width: "100"
                       },
                      {
                          dataField: "IsDeleted",
                          allowEditing: true,
                          visible: false,
                          dataType: 'boolean',
                      },
                ],
                onCellPrepared: function (options) {
                    //options.cellElement.find('.dx-datebox').dxDateBox("option", "min", new Date(startDate));
                    //options.cellElement.find('.dx-datebox').dxDateBox("option", "max", new Date(endDate));
                },
                onInitNewRow: function (e) {
                    e.data.ID = 0;
                    serialNo = serialNo + 1;
                    e.data.SNo = serialNo;
                    e.data.IsDeleted = false;
                    e.data.IsActive = true;
                },
                onRowPrepared: function (e) {


                } ,
                onEditorPreparing: function (e) {

                   
                },
                onEditorPrepared: function (e) {



                },
                onEditingStart: function (e) {
                },
                onRowInserting: function (e) {

                },
                onRowInserted: function (e) {

                    var dataExist = Table.filter(x=>x.KEY == e.data.KEY);
                    if (dataExist.length == 0)
                    {


                            var Details = {
                                ID: e.data.ID,
                                HeaderID: e.data.HeaderID,
                                SNO: e.data.SNo,
                                KEY: e.data.KEY,
                                TaskID: e.data.TaskID,
                                IsActive: e.data.IsActive,
                                IsDeleted: false
                            };

                        Table.push(Details);
                        serialNo = Table.length;
                    }
                    else
                    {
                        $.each(Table, function (index, val) {
                          
                            if (val.KEY == e.data.KEY) {
                                val.TaskID = e.data.TaskID;
                                val.IsActive = e.data.IsActive;
                            }

                        });
                    }


                },
                onRowUpdating: function (e) {
                },
                onRowUpdated: function (e) {
                   

                    $.each(Table, function (index, val) {
                        if (val.KEY == e.data.KEY) {
                            val.TaskID = e.data.TaskID;
                            val.IsActive = e.data.IsActive;
                        }

                    });

                   

                    serialNo = Table.length;

                },
                onRowRemoving: function (e) {
                },
                onRowRemoved: function (e) {
                    $.each(Table, function (index, val) {
                        if (val.KEY == e.data.KEY) {
                            val.IsDeleted = true;
                        }
                    });
                },

            });

         
        }

        function AddUpdate() {
            var notSaved = $('#gridContainer').dxDataGrid('instance').getController('editing').hasChanges();
            if (notSaved) {
                setTimeout(function () { AddUpdate(); }, 2000);
            }
            else {

                if (Table.length == 0) {
                    loadPanel.hide();
                    AlertToast('error', "Please add record!");
                    return;
                }

                loadPanel.show();

                var Tdate = $("#docDate").dxDateBox("instance").option('value');
                var Tday = Tdate.getDate();       // yields date
                var Tmonth = Tdate.getMonth() + 1;    // yields month (add one as '.getMonth()' is zero indexed)
                var Tyear = Tdate.getFullYear();  // yields year
                var Thour = Tdate.getHours();     // yields hours
                var Tminute = Tdate.getMinutes(); // yields minutes
                var Tsecond = Tdate.getSeconds(); // yields seconds
                var docdate = Tyear + "-" + Tmonth + "-" + Tday;

                var NCTaskAssignmentObj = {
                    ID: DocId,
                    DocNum: $("#docNumber").val(),
                    EmpID: $("#empGridBox").dxDropDownBox("instance").option('value'),
                    EmpCode: $("#empGridBox").dxDropDownBox("instance").option('text'),
                    DocDate: docdate,
                    Detail: Table
                };

                var jsonData = JSON.stringify({
                    obj : NCTaskAssignmentObj
                });
                
                var url = "/NCTaskAssignment/AddUpdateNCTaskAssignment";
                $.ajax({
                    type: "POST",
                    url: url,
                    contentType: 'application/json',
                    data: jsonData,
                    dataType: "json",
                    async: false,
                    success: function (response) {
                        loadPanel.hide();
                        if (response.Success) {
                            AlertToast('success', response.Message);
                            setTimeout(function () {
                                window.location.reload();
                            }, 5000);
                        }
                        else {
                            AlertToast('error', response.Message);
                        }
                    },
                    error: function (response) {
                        console.log(response);
                        loadPanel.hide();
                    },
                    failure: function (response) {
                        console.log(response);
                        loadPanel.hide();
                    }

                });

            }

        }

        function GeneratePopupFindGrid() {

            loadPanel.show();
          

            popupFindInstance = $("#FindContainer").dxDataGrid({
                dataSource: allDocument,
                keyExpr: "DocNum",
                paging: { pageSize: 10 },
                columnAutoWidth: true,
                pager: { showInfo: true },
                allowColumnResizing: true,
                allowColumnReordering: true,
                showBorders: true,
                showScrollbar: 'always',
                filterRow: { visible: true },
                scrolling: {
                    mode: "horizontal",
                    showScrollbar: 'always'
                },
                selection: {
                    mode: "single"
                },
                columns: [
                    {
                        dataField: "ID",
                        caption: "ID",
                        visible: false
                    },
                    {
                        dataField: "DocNum",
                        caption: "Document #"
                    },
                    {
                        dataField: "EmpName",
                        caption: "Employee Name"
                    },
                     {
                         dataField: "EmpCode",
                         caption: "Employee Code"
                     },
                    {
                        dataField: "DocDate",
                        caption: "Doc Date"
                    },


                    {
                        dataField: "CreatedDate",
                        caption: "Created Date"
                    }
                ]
            }).dxDataGrid("instance");

            $("#select-all-mode").dxSelectBox({
                dataSource: ["allPages", "page"],
                value: "allPages",
                onValueChanged: function (data) {
                    dataGrid.option("selection.selectAllMode", data.value);
                }
            });

            $("#show-checkboxes-mode").dxSelectBox({
                dataSource: ["none", "onClick", "onLongTap", "always"],
                value: "onClick",
                onValueChanged: function (data) {
                    dataGrid.option("selection.showCheckBoxesMode", data.value);
                    $("#select-all-mode").dxSelectBox("instance").option("disabled", data.value === "none");
                }
            });

            popupFindInstance.clearSelection();

            loadPanel.hide();
        }

        function ValidateAuthorization() {
            var id = $("#AuthID").val();
            var isSuccess = false;

            if (id == -1)
                isSuccess = true;
            if (id == 2)
                isSuccess = true;

            if (isSuccess) {
                $("#add_update").remove();
            }
        }

        function loadAuthLogData(url) {

            if (DocId != 0) {
                url = url + "?docid=" + DocId;

                $.ajax({
                    url: url,
                    method: "GET",
                    data: {},
                    async: false,
                }).done(function (data) {
                    $("#HeaderLogContainer").dxDataGrid({
                        dataSource: JSON.parse(data.Header.Data),
                        paging: { pageSize: 10 },
                        columnAutoWidth: true,
                        pager: { showInfo: true },
                        allowColumnResizing: true,
                        allowColumnReordering: true,
                        showBorders: true,
                        showScrollbar: 'always',
                        filterRow: { visible: true },
                        scrolling: {
                            mode: "horizontal",
                            showScrollbar: 'always'
                        },
                    });
                    $("#DetailLogContainer").dxDataGrid({
                        dataSource:JSON.parse(data.Detail.Data) ,
                        paging: { pageSize: 10 },
                        columnAutoWidth: true,
                        pager: { showInfo: true },
                        allowColumnResizing: true,
                        allowColumnReordering: true,
                        showBorders: true,
                        showScrollbar: 'always',
                        filterRow: { visible: true },
                        scrolling: {
                            mode: "horizontal",
                            showScrollbar: 'always'
                        },
                    });

                }).fail(function (data) {
                    console.log(data);
                });
            }



        }

        function GetNCTaskAssignmentByDocNum(docNum) {
            loadPanel.show();
            Table = [];
            GenerateGrid(Table);
            serialNo = 0;
            EmpCode = "0";
            HcmOneID = 0;
            var url = "/NCTaskAssignment/GetNCTaskAssignmentByDocNum?docNum=" + docNum;
            $.ajax({
                url: url,
                method: "GET",
                data: {},
                async: false,
            }).done(function (data) {
                loadPanel.hide();
                $("#docNumber").val("");

                var JSON_Response = JSON.parse(data.response.Data);
                console.log(JSON_Response);
                VlidateDetails(JSON_Response);


            }).fail(function (data) {
                loadPanel.hide();
                console.log(data);
            });
        }


        function VlidateDetails(JSON_Response)
        {
            $("#docNumber").val("");



            DocId = JSON_Response.ID;
            DocNum = JSON_Response.DocNum;

            $("#docNumber").val(JSON_Response.DocNum);

            var docDate = JSON_Response.DocDate.split("-");
            var dDate = new Date(docDate[0], docDate[1] - 1, docDate[2]);
            $("#docDate").dxDateBox({ value: dDate });

            var savedTaskList = [];
            Table = [];

            $.each(JSON_Response.Detail, function (index, val) {

                var Details = {
                    ID: val.ID,
                    HeaderID: val.HeaderID,
                    SNo: val.SNo,
                    KEY: val.KEY,
                    TaskID: val.TaskID,
                    IsActive: val.IsActive,
                    IsDeleted: false
                };

                var taskDetail = {
                    ID: val.TaskID,
                    Name: val._Name
                };

                Table.push(Details);

                savedTaskList.push(taskDetail);
            });

            GenerateGrid(Table);

           
            serialNo = Table.length;
            $('#docNumber').prop("disabled", true);

            if (JSON_Response.Status == 2  || JSON_Response.Status == 3) {
                $("#save").remove();
                $("#submit").remove();

                $("#gridContainer").dxDataGrid({
                    editing: {
                        mode: "batch",
                        allowUpdating: false,
                        allowDeleting: false,
                        allowAdding: false
                    },
                });
            }


            $("#empGridBox").dxDropDownBox({ value: JSON_Response.EmpID });
            GetNCTaskByEmpID(JSON_Response.EmpID, savedTaskList);
            GetUserInfoByEmpCode(JSON_Response.EmpCode);

        }

        function GetFormData()
        {
            GetHCMUser();
            //GetDocList();
            GetAllDocument();
            GenerateDateBox();
        }


        $('document').ready(function () {
            loadPanel.show();
            setTimeout(function () { GetFormData(); }, 100);
            stopLoading();
           
            ValidateAuthorization();
            
            $('#add_update').click(function () {
                var empID = 0;
                empID = $("#empGridBox").dxDropDownBox("instance").option('value');
                if (empID == 0)
                {
                    AlertToast('error', "Please select any employee code!");
                    return
                }
                if (empID == undefined) {
                    AlertToast('error', "Please select any employee code!");
                    return
                }

                var gridContainer = $("#gridContainer").dxDataGrid("instance");
                gridContainer.getController('validating').validate(true).done(function (result) {
                    if (result) {
                        gridContainer.saveEditData();
                        loadPanel.show();
                        setTimeout(function () { AddUpdate(); }, 2000);
                    }
                    else {
                        loadPanel.hide();
                        AlertToast('error', "Please add require data in table!");
                    }

                });

            });
            
            $('#new').click(function () {
                //DocNum = "";
                //DocId = 0;
                //Table = [];
                //$("#docNumber").val("");
                //$('#docNumber').prop("disabled", true);
                //serialNo = 0;

                window.location.reload();
            });
            $('#find').click(function () {
                $("#docNumber").val("");
                $('#docNumber').prop("disabled", false);
            });
            $('#first').click(function () {
                $('#docNumber').prop("disabled", true);
                index = 0;
                GetNCTaskAssignmentByDocNum(allDocList[index]);
            });
            $('#last').click(function () {
                $('#docNumber').prop("disabled", true);
                index = allDocList.length - 1;
                GetNCTaskAssignmentByDocNum(allDocList[index]);
            });
            $('#previous').click(function () {
                $('#docNumber').prop("disabled", true);
                if (index != 0)
                    index = index - 1;
                GetNCTaskAssignmentByDocNum(allDocList[index]);
            });
            $('#next').click(function () {
                $('#docNumber').prop("disabled", true);
                if (index < allDocList.length-1)
                    index = index + 1;

                GetNCTaskAssignmentByDocNum(allDocList[index]);
            });
            $('#btnOk').click(function () {
                var selectedRow = popupFindInstance.getSelectedRowsData();
                if (selectedRow.length > 0)
                {
                    GetNCTaskAssignmentByDocNum(selectedRow[0].DocNum);
                }
                $('#myModal_Find').modal('hide');
                $('body').removeClass('modal-open');
                $('.modal-backdrop').remove();

            });
            $("#docNumber").blur(function () {

                GetNCTaskAssignmentByDocNum($("#docNumber").val());

            });


        });

      
      
</script>

