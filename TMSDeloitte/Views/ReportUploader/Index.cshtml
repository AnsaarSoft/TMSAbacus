@model TMSDeloitte.Models.ReportInfo
@{
    ViewBag.Title = "ReportUploader";
}
<div class="pcoded-content">
    <div class="card p-20" style="min-height: 495px;">
        <!-- [ breadcrumb ] start -->
        <div class="page-header">
            <div class="page-block">
                <div class="row align-items-center">
                    <div class="col-md-6">
                        <div class="page-header-title">
                            <h4> Report Uploader </h4>
                        </div>
                    </div>
                    <div class="col-md-6 text-md-right">
                        <ul class="breadcrumb">
                            <li class="breadcrumb-item"><a href="#"> Reports </a></li>
                            <li class="breadcrumb-item"> Report Uploader </li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
        <!-- [ breadcrumb ] end -->
        <!-- [ Main Content ] start -->
        <div class="row">
            <div class="col-lg-12">
                <div class="form-group">
                    <div class="text-right">
                        <button id="new" class="plus-icon"> <i class="fas fa-plus-square"></i> </button>
                        <button id="find" class="find-icon" data-toggle="modal" onclick='GeneratePopupFindGrid();' data-target="#myModal_Find"> <i class="fas fa-search"></i> </button>
                        <button id="first" class="step-backword-icon"> <i class="fas fa-step-backward"></i></button>
                        <button id="previous" class="backword-icon"> <i class="fas fa-backward"></i> </button>
                        <button id="next" class="forward-icon"> <i class="fas fa-forward"></i> </button>
                        <button id="last" class="step-forward-icon"> <i class="fas fa-step-forward"></i></button>
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-lg-6">
                <div class="form-group">
                    <label for="exampleFormControlSelect1"> Report Code </label>
                    <div id="code-validation"></div>
                    <input type="text" class="form-control frm-cstm" id="ReportCode" placeholder="Report Code" />

                </div>
            </div>

            <div class="dx-field">
                <br />

                <div class="dx-field-value">
                    <div id="IsActive"></div>
                </div>
                <label for=""> </label>
                <div class="dx-field-label"></div>
            </div>

            <div class="col-lg-6">
                <div class="form-group">
                    <label for="exampleFormControlSelect1"> Report Name </label>
                    <input type="text" class="form-control frm-cstm" id="ReportName" placeholder="Report Name">
                </div>
            </div>

            <div class="dx-field">
                <br />

                <div class="dx-field-value">
                    <div id="IsActive"></div>
                </div>
                <label for=""> </label>
                <div class="dx-field-label"></div>
            </div>
            <div class="col-lg-6">
                <div class="form-group">
                    @*<label for="exampleFormControlSelect1"> Select File </label>*@
                    @*<div id="RptFile" class="fileuploader-container"></div>*@
                    @*<input type="file" class="fileuploader-container" id="RptFile" name="File" />*@
                </div>
                <form id="uploader">
                    <input id="fileInput" type="file" multiple>
                </form>
            </div>
            <div class="col-lg-6" hidden>
                <div class="form-group">
                    <label for="typeCost"> Document Number: </label>
                    <input type="text" class="form-control frm-cstm" id="docNumber" placeholder="DocNum" disabled="disabled">
                </div>
            </div>
            <div class="dx-field">
                <br />

                <div class="dx-field-value">
                    <div></div>
                </div>
                <label for=""> </label>
                <div class="dx-field-label"></div>
            </div>

        </div>


        @*<div class="row">
                <div class="col-lg-12">
                    <div class="table-responsive">
                        <div id="gridContainer"></div>
                    </div>
                </div>
            </div>*@


        <div class="row">
            <div class="col-lg-12 text-right mt-3">
                <button type="button" id="delete" class="btn btn-primary mr-2"> Delete </button>
                <button type="button" id="add_update" class="btn btn-primary mr-2"> Add & Update </button>
                @{
                    TMSDeloitte.Models.UserSession sess = null;
                    if ((TMSDeloitte.Models.UserSession)HttpContext.Current.Session["TMSUserSession"] != null)
                    {
                        sess = (TMSDeloitte.Models.UserSession)HttpContext.Current.Session["TMSUserSession"];
                        if (sess.SessionUser.ISSUPER)
                        {
                            <button type="button" class="btn btn-success" data-toggle="modal" data-target="#myLogModal" onclick='loadAuthLogData("/ApprovalStage/GetStageSetupLogByDOCNUM");'> Show Log </button>
                        }

                        var menu = sess.pagelist.Where(x => x.ID == (int)TMSDeloitte.Helper.Enums.FormsName.TravelLocationSetup).FirstOrDefault();
                        if (menu != null)
                        {
                            <input type="hidden" id="AuthID" name="AuthID" value="@menu.Role">
                        }
                        else
                        {
                            <input type="hidden" id="AuthID" name="AuthID" value="-1">
                        }
                    }

                }


            </div>
        </div>

        <!-- [ Main Content ] end -->
    </div> <!-- [ Card Content ] end -->
</div>

<div id="myModal_Users" class="modal fade" role="dialog">
    <div class="modal-dialog modal-lg">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">

                <button type="button" class="close" data-dismiss="modal">×</button>
            </div>
            <div class="modal-body">
                <div id="userContainer"></div>
            </div>
            <div class="modal-footer">
                <button type="button" id="btnOkUser" class="btn btn-primary">Ok</button>
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
            </div>
        </div>
    </div>
</div>

<div id="myModal_Find" class="modal fade" role="dialog">
    <div class="modal-dialog modal-lg">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">×</button>

            </div>
            <div class="modal-body">
                <div id="FindContainer"></div>
            </div>
            <div class="modal-footer">
                <button type="button" id="btnOk" class="btn btn-primary">Ok</button>
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
            </div>
        </div>
    </div>
</div>

<div id="myLogModal" class="modal fade" role="dialog">
    <div class="modal-dialog modal-lg">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                @*<h4 class="modal-title">Log</h4>*@
                <button type="button" class="close" data-dismiss="modal">×</button>
            </div>

            <div class="modal-body">
                <h8>Header Log</h8>
                <div id="HeaderLogContainer"></div>
            </div>
            <div class="modal-body">
                <h8>Detail Log</h8>
                <div id="DetailLogContainer"></div>
            </div>
        </div>
    </div>
</div>

<script src="~/Scripts/customjs/base.js"></script>
<script>
    var fileName = "";
    //document.getElementById('uploader').onsubmit = function () {
    $('#fileInput').change(function () {
        var formdata = new FormData(); //FormData object
        var fileInput = document.getElementById('fileInput');
        //Iterating through each files selected in fileInput
        for (i = 0; i < fileInput.files.length; i++) {
            //Appending each file to FormData object
            formdata.append(fileInput.files[i].name, fileInput.files[i]);
        }
        //Creating an XMLHttpRequest and sending
        var xhr = new XMLHttpRequest();
        xhr.open('POST', '/ReportUploader/Upload');
        xhr.send(formdata);
        xhr.onreadystatechange = function () {
            if (xhr.readyState == 4 && xhr.status == 200) {
                fileName = xhr.responseText.replace('\"', '');
                fileName = fileName.replace('\"', '');
                //alert(xhr.responseText);
            }
        }
        return false;
    });

    var isPageDataLoaded = false;
    var ReportList = [];
    var DocId = 0;

    $('document').ready(function () {
        loadPanel.show();
        setTimeout(function () { GetReport(); }, 100);
        stopLoading();

        $('#add_update').click(function () {
            var isSuccess = true;
            var message = '';

            var alertSetupObj = {
                ReportCode: $("#ReportCode").val(),
                ReportName: $("#ReportName").val(),
                //RptFile: $("#RptFile").dxFileUploader("instance").option('value')
                //RptFile: $("#RptFile > .dx-fileuploader-input-container").find("input").value
            };
            if (alertSetupObj.ReportCode == "") {
                isSuccess = false;
                message = 'Please enter report code. \n';
            }
            if (alertSetupObj.ReportName == "") {
                isSuccess = false;
                message = message + 'Please enter report name. \n';
            }
            //if (alertSetupObj.RptFile == "") {
            //    isSuccess = false;
            //    message = message + 'Please select report file. \n';
            //}

            if (isSuccess) {
                loadPanel.show();
                setTimeout(function () { AddUpdate(); }, 2000);
            }
            else {
                AlertToast('error', message);
            }
        });

        $('#delete').click(function () {
            var isSuccess = true;
            var message = '';

            var alertSetupObj = {
                ReportCode: $("#ReportCode").val(),
                ReportName: $("#ReportName").val()
            };
            if (alertSetupObj.ReportCode == "") {
                isSuccess = false;
                message = 'Please enter report code. \n';
            }
            if (alertSetupObj.ReportName == "") {
                isSuccess = false;
                message = message + 'Please enter report name. \n';
            }
            
            if (isSuccess) {
                var result2 = DevExpress.ui.dialog.confirm("Are you sure you want to delete this report?", "Confirm changes");
                result2.done(function (dialogResult) {
                    if (dialogResult == true) {
                        loadPanel.show();
                        setTimeout(function () { Delete(); }, 2000);
                    }
                    else {
                        AlertToast('error', "This report doesn't delete right now.");
                    }
                });
                
            }
            else {
                AlertToast('error', message);
            }
        });
    });

    function AddUpdate() {
        var ID = 0;

        FilteredRecordForID = ReportList.filter(x => x.DocNum == $("#docNumber").val());
        if (FilteredRecordForID.length > 0) {
            ID = FilteredRecordForID[0].ID;
        }
        // var rpt = $("#RptFile").dxFileUploader("instance").option('value')[0].get(0);
        //var fileUpload = $("#RptFile").get(0);
        //var files = fileUpload.files;

        //// Create FormData object
        //var fileData = new FormData();

        //// Looping over all files and add it to FormData object
        //for (var i = 0; i < files.length; i++) {
        //    fileData.append(files[i].name, files[i]);
        //}
        var Header = {
            ReportCode: $("#ReportCode").val(),
            ReportName: $("#ReportName").val(),
            RptFile: fileName,
            //RptFile: $("#RptFile").dxFileUploader("instance").option('value')[0].name,
            //RptFile: $("#RptFile").val(),
            IsActive: $("#IsActive").dxCheckBox("instance").option('value'),
            IsDeleted: false
        };
        loadPanel.show();
        var url = "/ReportUploader/AddUpdateReports";
        $.ajax({
            type: "POST",
            url: url,
            contentType: 'application/json',
            data: JSON.stringify({
                ReportInfo: Header,
                ID: ID
            }),
            //contentType: false,
            //enctype: 'multipart/form-data',
            //processData: false,
            dataType: "json",
            async: false,
            success: function (response) {
                loadPanel.hide();
                if (response.Success) {
                    AlertToast('success', response.Message);
                    setTimeout(function () {
                        window.location.reload();
                    }, 5000);
                }
                else
                    AlertToast('error', response.Message);
            },
            error: function (response) {
                console.log(response);
                loadPanel.hide();
            },
            failure: function (response) {
                console.log(response);
                loadPanel.hide();
            }
        })
    }

    function Delete() {
        var ID = 0;

        FilteredRecordForID = ReportList.filter(x => x.DocNum == $("#docNumber").val());
        if (FilteredRecordForID.length > 0) {
            ID = FilteredRecordForID[0].ID;
        }
        var Header = {
            ReportCode: $("#ReportCode").val(),
            ReportName: $("#ReportName").val(),
            //RptFile: fileName,
            IsActive: $("#IsActive").dxCheckBox("instance").option('value'),
            IsDeleted: true
        };
        loadPanel.show();
        var url = "/ReportUploader/DeleteReports";
        $.ajax({
            type: "POST",
            url: url,
            contentType: 'application/json',
            data: JSON.stringify({
                ReportInfo: Header,
                ID: ID
            }),
            dataType: "json",
            async: false,
            success: function (response) {
                loadPanel.hide();
                if (response.Success) {
                    AlertToast('success', response.Message);
                    setTimeout(function () {
                        window.location.reload();
                    }, 5000);
                }
                else
                    AlertToast('error', response.Message);
            },
            error: function (response) {
                console.log(response);
                loadPanel.hide();
            },
            failure: function (response) {
                console.log(response);
                loadPanel.hide();
            }
        })
    }


    $(function () {
        $("#IsActive").dxCheckBox({
            text: "IsActive",
            value: true,
            onValueChanged: function (e) {
                console.log(e.value);
                ISACTIVE = e.value;
            }
        });

        $("#RptFile").dxFileUploader({
            selectButtonText: "Select File",
            //accept: "*",
            labelText: "or Drop file here",

            //contentType: "multipart/form-data",
            invalidFileExtensionMessage: "File type is not allowed",
            invalidMaxFileSizeMessage: "File is too large",
            invalidMinFileSizeMessage: "File is too small",
            //accept: ".rpt/*",
            //uploadMode: "instantly",
            multiple: false,
            allowedFileExtensions: [".rpt"],
            //onValueChanged: function (e) {
            //    $("#RptFile").dxFileUploader({ value: e.value.name });
            //}
            //uploadMode: "useForm"
        });

    });

    function stopLoading() {
        if (isPageDataLoaded == false) {
            setTimeout(function () { stopLoading(); }, 500);
        }
        else {
            loadPanel.hide();
        }
    }

    function GetReport() {
        var url = "/ReportUploader/GetReports";
        $.ajax({
            url: url,
            method: "GET",
            data: {},
            async: false,
        }).done(function (data) {
            ReportList = data.response;
            isPageDataLoaded = true;
        }).fail(function (data) {
            isPageDataLoaded = true;
            loadPanel.hide();
        });
    }

    function loadAuthLogData(url) {
        if (DocId != 0) {
            url = url + "?docId=" + DocId;

            $.ajax({
                url: url,
                method: "GET",
                data: {},
                async: false,
            }).done(function (data) {
                data = JSON.parse(data.response.Data);
                console.log(data);
                $("#HeaderLogContainer").dxDataGrid({
                    dataSource: data.Table,
                    paging: { pageSize: 10 },
                    columnAutoWidth: true,
                    pager: { showInfo: true },
                    allowColumnResizing: true,
                    allowColumnReordering: true,
                    showBorders: true,
                    showScrollbar: 'always',
                    filterRow: { visible: true },
                    scrolling: {
                        mode: "horizontal",
                        showScrollbar: 'always'
                    },
                });

            }).fail(function (data) {
                console.log(data);
            });
        }
    }

    function createNew() {

        $("#ReportCode").val("");
        $("#ReportName").val("");
        $("#RptFile").val("");
    }

    function getFilteredData(id, type, Action) {
        idCopy = id;
        let DocNum = '';
        if (type == 'DOCNUM') {

            if (Action == 'next') {
                let l1 = ReportList.map(m => { return m.DocNum });
                l1 = l1.sort();
                var unique = l1.filter((v, i, a) => a.indexOf(v) === i);

                FilteredRecord = ReportList.filter(x => x.DocNum == unique[0]);
                //FilteredRecord.forEach(function (obj) {
                //    Table = obj.Table;
                //})

                if ($("#docNumber").val() == "") {
                    DocNum = unique[0];
                    id = DocNum;
                }
                else {
                    DocNum = $("#docNumber").val().substr(4, $("#docNumber").val().length);
                    DocNum = parseInt(DocNum) + 1;
                    if (DocNum > unique.length) {
                        return;
                    }
                    DocNum = DocNum.toString();
                    DocNum = 'Doc-' + DocNum.padStart(5, '0');
                    FilteredRecord = ReportList.filter(x => x.DocNum == DocNum);
                    //FilteredRecord.forEach(function (obj) {
                    //    Table = obj.Table;
                    //})
                    id = DocNum;
                }
            }
            else if (Action == 'previous') {

                let l1 = ReportList.map(m => { return m.DocNum });
                l1 = l1.sort();

                var unique = l1.filter((v, i, a) => a.indexOf(v) === i);

                FilteredRecord = ReportList.filter(x => x.DocNum == unique[unique.length - 1]);
                //FilteredRecord.forEach(function (obj) {
                //    Table = obj.Table;
                //})
                if ($("#docNumber").val() == "") {
                    DocNum = unique[unique.length - 1];
                    id = DocNum;
                    //DocNum = ApprovalSetupList[0].DOCNUM;
                    //id = DocNum;
                }
                else {
                    DocNum = $("#docNumber").val().substr(4, $("#docNumber").val().length);
                    DocNum = parseInt(DocNum) - 1;
                    if (DocNum == 0) {
                        return;
                    }
                    DocNum = DocNum.toString();
                    DocNum = 'Doc-' + DocNum.padStart(5, '0');
                    FilteredRecord = ReportList.filter(x => x.DocNum == DocNum);
                    //FilteredRecord.forEach(function (obj) {
                    //    Table = obj.Table;
                    //})
                    id = DocNum;
                }
            }

            else if (Action == 'last') {
                let l1 = ReportList.map(m => { return m.DocNum });
                l1 = l1.sort();

                var unique = l1.filter((v, i, a) => a.indexOf(v) === i);

                id = ReportList.filter(x => x.DocNum == unique[unique.length - 1]);
                if (id.length > 0) {
                    id = id[0].DocNum;
                    FilteredRecord = ReportList.filter(x => x.DocNum == id);
                    //FilteredRecord.forEach(function (obj) {
                    //    Table = obj.Table;
                    //})
                }
            }

            else if (Action == 'first') {
                id = ReportList[0].DocNum;
                FilteredRecord = ReportList.filter(x => x.DocNum == id);
                //FilteredRecord.forEach(function (obj) {
                //    Table = obj.Table;
                //})
                if (id == "") {
                    console.log("null id");
                }
            }
        }

        var AC;
        var AN;
        var AS;
        var AA;
        FilteredRecord.forEach(function (obj) {
            AA = obj.ID;
            AC = obj.ReportCode;
            AN = obj.ReportName;
            AS = obj.RptFile;
        })

        //if (Table.length > 0) {
        //    DocNum = Table[0].DOCNUM;
        //}
        DocId = AA;
        $("#ReportCode").val(AC);
        $("#ReportName").val(AN);
        $("#RptFile").dxSelectBox({ value: AS });
        $('#docNumber').prop("disabled", true);
        $("#IsActive").dxCheckBox({
            value: FilteredRecord[0].IsActive
        });
        if (id != undefined) {
            $("#docNumber").val(id);
        }
    }

    function GeneratePopupFindGrid() {
        loadPanel.show();
        var ur = "/ReportUploader/GetReports";
        $.ajax({
            url: ur,
            method: "GET",
            data: {},
            async: false,
        }).done(function (data) {
            var JSON_Response1 = [];
            JSON_Response1 = data.response;
            popupFindInstance = $("#FindContainer").dxDataGrid({
                dataSource: JSON_Response1,
                keyExpr: "DocNum",
                paging: { pageSize: 10 },
                columnAutoWidth: true,
                pager: { showInfo: true },
                allowColumnResizing: true,
                allowColumnReordering: true,
                showBorders: true,
                showScrollbar: 'always',
                filterRow: { visible: true },
                scrolling: {
                    mode: "horizontal",
                    showScrollbar: 'always'
                },
                selection: {
                    mode: "single"
                },
                columns: [
                    {
                        dataField: "DocNum",
                        caption: "Document #"
                    },
                    {
                        dataField: "ReportCode",
                        caption: "Report Code"
                    },
                    {
                        dataField: "ReportName",
                        caption: "Report Name"
                    },
                    {
                        dataField: "RptFile",
                        caption: "Report File"
                    },

                    {
                        dataField: "IsActive",
                        caption: "Active"
                    },

                    {
                        dataField: "CreateDate",
                        caption: "Create Date"
                    }
                ]
            }).dxDataGrid("instance");

            $("#select-all-mode").dxSelectBox({
                dataSource: ["allPages", "page"],
                value: "allPages",
                onValueChanged: function (data) {
                    dataGrid.option("selection.selectAllMode", data.value);
                }
            });

            $("#show-checkboxes-mode").dxSelectBox({
                dataSource: ["none", "onClick", "onLongTap", "always"],
                value: "onClick",
                onValueChanged: function (data) {
                    dataGrid.option("selection.showCheckBoxesMode", data.value);
                    $("#select-all-mode").dxSelectBox("instance").option("disabled", data.value === "none");
                }
            });

            popupFindInstance.clearSelection();

            loadPanel.hide();

        }).fail(function (data) {
            console.log(data);
            loadPanel.hide();
        });

    }

    $('#btnOk').click(function () {
        var selectedRow = popupFindInstance.getSelectedRowsData();
        if (selectedRow.length > 0) {
            DocId = selectedRow[0].ID;
            $("#ReportCode").val(selectedRow[0].ReportCode);
            $("#ReportName").val(selectedRow[0].ReportName);
            $("#RptFile").dxSelectBox({ value: selectedRow[0].RptFile });
            $("#Document").dxSelectBox({ value: selectedRow[0].DOCUMENT });

            $("#IsActive").dxCheckBox({
                value: selectedRow[0].IsActive
            });
            $("#docNumber").val(selectedRow[0].DocNum);
            $('#docNumber').prop("disabled", true);
        }
        $('#myModal_Find').modal('hide');
        $('body').removeClass('modal-open');
        $('.modal-backdrop').remove();

    });


</script>
